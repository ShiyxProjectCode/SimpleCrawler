<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_七七</title>
  <subtitle type="text">你能面对多少人说话，你的成就就有多大！</subtitle>
  <id>uuid:8dc7efba-43f2-4416-95a0-534dced3b48f;id=4009</id>
  <updated>2015-09-17T02:07:33Z</updated>
  <author>
    <name>jiangys</name>
    <uri>http://www.cnblogs.com/jys509/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4814929.html</id>
    <title type="text">iOS UI基础-9.1 UITableView 团购 - jiangys</title>
    <summary type="text">概述接下来，我们要做的是团购界面的设计，最张要实现的效果图及项目结构图 团购数据的展示思路：系统自带的tableCell不能展示三个文本，不能满足条件，自定义tableCell每一个tableCell样式固定不变，使用xib来实现。数据来源通过加载plist文件定义展示数据模型Tuangou.h//...</summary>
    <published>2015-09-16T16:58:00Z</published>
    <updated>2015-09-16T16:58:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4814929.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4814929.html" />
    <content type="html">概述接下来，我们要做的是团购界面的设计，最张要实现的效果图及项目结构图 团购数据的展示思路：系统自带的tableCell不能展示三个文本，不能满足条件，自定义tableCell每一个tableCell样式固定不变，使用xib来实现。数据来源通过加载plist文件定义展示数据模型Tuangou.h//...&lt;img src="http://counter.cnblogs.com/blog/rss/4814929" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4814929.html" target="_blank"&gt;iOS UI基础-9.1 UITableView 团购&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4813394.html</id>
    <title type="text">iOS UI基础-9.0 UITableView基础 - jiangys</title>
    <summary type="text">在iOS中，要实现表格数据展示，最常用的做法就是使用UITableView。UITableView继承自UIScrollView，因此支持垂直滚动，而且性能极佳。UITableView有两种样式：一列显示：UITableViewStylePlain分组显示：UITableViewStyleGroup...</summary>
    <published>2015-09-16T14:59:00Z</published>
    <updated>2015-09-16T14:59:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4813394.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4813394.html" />
    <content type="html">在iOS中，要实现表格数据展示，最常用的做法就是使用UITableView。UITableView继承自UIScrollView，因此支持垂直滚动，而且性能极佳。UITableView有两种样式：一列显示：UITableViewStylePlain分组显示：UITableViewStyleGroup...&lt;img src="http://counter.cnblogs.com/blog/rss/4813394" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4813394.html" target="_blank"&gt;iOS UI基础-9.0 UITableView基础&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4813897.html</id>
    <title type="text">iOS UI基础-8.0 UIAlertView使用 - jiangys</title>
    <summary type="text">弹出框的使用1.实现代理UIAlertViewDelegate2.弹出框 // 弹框初始化 UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"数据展示" message:nil delegate:self cancelBu...</summary>
    <published>2015-09-16T09:23:00Z</published>
    <updated>2015-09-16T09:23:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4813897.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4813897.html" />
    <content type="html">弹出框的使用1.实现代理UIAlertViewDelegate2.弹出框 // 弹框初始化 UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&amp;quot;数据展示&amp;quot; message:nil delegate:self cancelBu...&lt;img src="http://counter.cnblogs.com/blog/rss/4813897" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4813897.html" target="_blank"&gt;iOS UI基础-8.0 UIAlertView使用&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4812714.html</id>
    <title type="text">iOS 开发笔记-NSURLConnection的使用 - jiangys</title>
    <summary type="text">通过NSURLConnection发送一个HTTP GET请求//send a GET request to server with some params-(void)httpGetWithParams{ NSString *urlString = @"http://chaoyuan.sin...</summary>
    <published>2015-09-16T03:16:00Z</published>
    <updated>2015-09-16T03:16:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4812714.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4812714.html" />
    <content type="html">通过NSURLConnection发送一个HTTP GET请求//send a GET request to server with some params-(void)httpGetWithParams{ NSString *urlString = @&amp;quot;http://chaoyuan.sin...&lt;img src="http://counter.cnblogs.com/blog/rss/4812714" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4812714.html" target="_blank"&gt;iOS 开发笔记-NSURLConnection的使用&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4812258.html</id>
    <title type="text">ios UrlEncode与UrlDecode - jiangys</title>
    <summary type="text">url字符串中具有特殊功能的特殊字符的字符串，或者中文字符,作为参数用GET方式传递时，需要用urlencode处理一下。当然，有时作为Post参数传递，也需要urlencode处理一下。NSString+URL.h#import @interface NSString (URL)-(NSStrin...</summary>
    <published>2015-09-16T01:40:00Z</published>
    <updated>2015-09-16T01:40:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4812258.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4812258.html" />
    <content type="html">url字符串中具有特殊功能的特殊字符的字符串，或者中文字符,作为参数用GET方式传递时，需要用urlencode处理一下。当然，有时作为Post参数传递，也需要urlencode处理一下。NSString+URL.h#import @interface NSString (URL)-(NSStrin...&lt;img src="http://counter.cnblogs.com/blog/rss/4812258" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4812258.html" target="_blank"&gt;ios UrlEncode与UrlDecode&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4811509.html</id>
    <title type="text">iOS UI基础-7.0 UIScrollView - jiangys</title>
    <summary type="text">概述移动设备的屏幕大小是极其有限的，因此直接展示在用户眼前的内容也相当有限.当展示的内容较多，超出一个屏幕时，用户可通过滚动手势来查看屏幕以外的内容,普通的UIView不具备滚动功能，不能显示过多的内容。UIScrollView是一个能够滚动的视图控件，可以用来展示大量的内容，并且可以通过滚动查看所...</summary>
    <published>2015-09-15T14:25:00Z</published>
    <updated>2015-09-15T14:25:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4811509.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4811509.html" />
    <content type="html">概述移动设备的屏幕大小是极其有限的，因此直接展示在用户眼前的内容也相当有限.当展示的内容较多，超出一个屏幕时，用户可通过滚动手势来查看屏幕以外的内容,普通的UIView不具备滚动功能，不能显示过多的内容。UIScrollView是一个能够滚动的视图控件，可以用来展示大量的内容，并且可以通过滚动查看所...&lt;img src="http://counter.cnblogs.com/blog/rss/4811509" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4811509.html" target="_blank"&gt;iOS UI基础-7.0 UIScrollView&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4807301.html</id>
    <title type="text">iOS 返回页面 - jiangys</title>
    <summary type="text">返回到上一个页面[self.navigationController popViewControllerAnimated:YES];返回到第一个push页面。说明场景：navigationController一共有三个推送页面，现在想在第三级页面中点击返回， 直接返回主页[self.navigati...</summary>
    <published>2015-09-14T07:33:00Z</published>
    <updated>2015-09-14T07:33:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4807301.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4807301.html" />
    <content type="html">返回到上一个页面[self.navigationController popViewControllerAnimated:YES];返回到第一个push页面。说明场景：navigationController一共有三个推送页面，现在想在第三级页面中点击返回， 直接返回主页[self.navigati...&lt;img src="http://counter.cnblogs.com/blog/rss/4807301" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4807301.html" target="_blank"&gt;iOS 返回页面&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4802429.html</id>
    <title type="text">iOS 第三方框架-上拉下拉刷新（MJRefresh） - jiangys</title>
    <summary type="text">MJRefresh是一款非常好用的上拉下拉第三方库，使用也很简单。github地址：https://github.com/CoderMJLee/MJRefresh。下拉刷新官方给过来的例子很简单，默认使用如下：self.tableView.header = [MJRefreshNormalHeade...</summary>
    <published>2015-09-14T07:30:00Z</published>
    <updated>2015-09-14T07:30:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4802429.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4802429.html" />
    <content type="html">MJRefresh是一款非常好用的上拉下拉第三方库，使用也很简单。github地址：https://github.com/CoderMJLee/MJRefresh。下拉刷新官方给过来的例子很简单，默认使用如下：self.tableView.header = [MJRefreshNormalHeade...&lt;img src="http://counter.cnblogs.com/blog/rss/4802429" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4802429.html" target="_blank"&gt;iOS 第三方框架-上拉下拉刷新（MJRefresh）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4806583.html</id>
    <title type="text">iOS UI基础-6.0 UIActionSheet的使用 - jiangys</title>
    <summary type="text">UIActionSheet是在iOS弹出的选择按钮项，可以添加多项，并为每项添加点击事件.使用1.需要实现UIActionSheetDelegate 协议@interface NJWisdomCardDetailViewController ()@end2.弹出选择按钮框- (void)showSh...</summary>
    <published>2015-09-14T02:55:00Z</published>
    <updated>2015-09-14T02:55:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4806583.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4806583.html" />
    <content type="html">UIActionSheet是在iOS弹出的选择按钮项，可以添加多项，并为每项添加点击事件.使用1.需要实现UIActionSheetDelegate 协议@interface NJWisdomCardDetailViewController ()@end2.弹出选择按钮框- (void)showSh...&lt;img src="http://counter.cnblogs.com/blog/rss/4806583" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4806583.html" target="_blank"&gt;iOS UI基础-6.0 UIActionSheet的使用&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/jys509/p/4805813.html</id>
    <title type="text">iOS 网易彩票-6设置模块三（常用小功能） - jiangys</title>
    <summary type="text">该篇文章中，用到很多iOS开发过程中常用的小功能，当前只是将这些功能集成到网易彩票的设置中。iOS-常用小功能介绍,请参考我的另一篇文章：iOS 常用小功能 总结：http://www.cnblogs.com/jys509/p/4805030.html关于效果图思路分析：使用self.tableVi...</summary>
    <published>2015-09-13T16:10:00Z</published>
    <updated>2015-09-13T16:10:00Z</updated>
    <author>
      <name>jiangys</name>
      <uri>http://www.cnblogs.com/jys509/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/jys509/p/4805813.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/jys509/p/4805813.html" />
    <content type="html">该篇文章中，用到很多iOS开发过程中常用的小功能，当前只是将这些功能集成到网易彩票的设置中。iOS-常用小功能介绍,请参考我的另一篇文章：iOS 常用小功能 总结：http://www.cnblogs.com/jys509/p/4805030.html关于效果图思路分析：使用self.tableVi...&lt;img src="http://counter.cnblogs.com/blog/rss/4805813" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/jys509/p/4805813.html" target="_blank"&gt;iOS 网易彩票-6设置模块三（常用小功能）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>