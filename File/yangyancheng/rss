<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">博客园_杨延成</title><subtitle type="text">人生如程序，我们就是程序员</subtitle><id>uuid:8b219c57-9c2e-4450-82ff-bae875d016cb;id=3334</id><updated>2015-01-10T05:35:35Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><generator>feed.cnblogs.com</generator><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/28/2058846.html</id><title type="text">EF框架step by step(9)—Code First Fluent API - 杨延成</title><summary type="text">在上一篇中，讲述了用数据特性的方式来标识实体与数据表之间的映射关系，在Code First方法中，还可以通过Fluent API的方式来处理实体与数据表之间的映射关系。要使用Fluent API必须在构造自定义的DbContext时，重写OnModelCreating方法，在此方法体内调用Fluen...</summary><published>2011-05-28T00:34:00Z</published><updated>2011-05-28T00:34:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/28/2058846.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/28/2058846.html" /><content type="html">在上一篇中，讲述了用数据特性的方式来标识实体与数据表之间的映射关系，在Code First方法中，还可以通过Fluent API的方式来处理实体与数据表之间的映射关系。要使用Fluent API必须在构造自定义的DbContext时，重写OnModelCreating方法，在此方法体内调用Fluen...&lt;img src="http://counter.cnblogs.com/blog/rss/2058846" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/28/2058846.html" target="_blank"&gt;EF框架step by step(9)—Code First Fluent API&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/17/2048794.html</id><title type="text">EF框架step by step - 杨延成</title><summary type="text">为了方便查看，现整理一份Entity Framework4.1 框架 step by step索引 ，由于此系列并未完成，目前索引仅是现有文章部分。另外，由于公司目前正准备上Android项目，要对所有参与人员进行Android培训，最近我也一直在准备这方面的内容，可能这个系列文章发表速度要慢一下，也请各位理解。EF框架step by step(1)—Database-FirstEF框架step ...</summary><published>2011-05-17T05:50:00Z</published><updated>2011-05-17T05:50:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/17/2048794.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/17/2048794.html" /><content type="html">为了方便查看，现整理一份Entity Framework4.1 框架 step by step索引 ，由于此系列并未完成，目前索引仅是现有文章部分。另外，由于公司目前正准备上Android项目，要对所有参与人员进行Android培训，最近我也一直在准备这方面的内容，可能这个系列文章发表速度要慢一下，也请各位理解。EF框架step by step(1)—Database-FirstEF框架step ...&lt;img src="http://counter.cnblogs.com/blog/rss/2048794" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/17/2048794.html" target="_blank"&gt;EF框架step by step&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/14/2046109.html</id><title type="text">EF框架step by step(8)—Code First DataAnnotations(2) - 杨延成</title><summary type="text">上一篇 EF框架step by step(7)—Code First DataAnnotations(1) 描述了实体内部的采用数据特性描述与表的关系。这一篇将用DataAnnotations描述一下实体之间的关系。ForeignKeyCode first默认情况下会自动建立实体之间的关系，比如在EF框架step by step(3)—Code-First 这篇随笔中所介绍那样。[代码]以上这种代...</summary><published>2011-05-14T02:58:00Z</published><updated>2011-05-14T02:58:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/14/2046109.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/14/2046109.html" /><content type="html">上一篇 EF框架step by step(7)—Code First DataAnnotations(1) 描述了实体内部的采用数据特性描述与表的关系。这一篇将用DataAnnotations描述一下实体之间的关系。ForeignKeyCode first默认情况下会自动建立实体之间的关系，比如在EF框架step by step(3)—Code-First 这篇随笔中所介绍那样。[代码]以上这种代...&lt;img src="http://counter.cnblogs.com/blog/rss/2046109" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/14/2046109.html" target="_blank"&gt;EF框架step by step(8)—Code First DataAnnotations(2)&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/12/2042922.html</id><title type="text">EF框架step by step(7)—Code First DataAnnotations(1) - 杨延成</title><summary type="text">Dataannotation特性是在.NET 3.5中引进的，给ASP.NET web应用中的类提供了一种添加验证的方式。Code First允许你使用代码来建立实体框架模型，同时允许用Data annotation特性来配置类和属性的某些特性。其实在前面的几篇文章中，有用到几个，在这一篇里，进行一次比较全面的介绍Key EF框架要求每个实体必须有主键字段，他需要根据这个主键字段跟踪实体。Code...</summary><published>2011-05-12T00:37:00Z</published><updated>2011-05-12T00:37:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/12/2042922.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/12/2042922.html" /><content type="html">Dataannotation特性是在.NET 3.5中引进的，给ASP.NET web应用中的类提供了一种添加验证的方式。Code First允许你使用代码来建立实体框架模型，同时允许用Data annotation特性来配置类和属性的某些特性。其实在前面的几篇文章中，有用到几个，在这一篇里，进行一次比较全面的介绍Key EF框架要求每个实体必须有主键字段，他需要根据这个主键字段跟踪实体。Code...&lt;img src="http://counter.cnblogs.com/blog/rss/2042922" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/12/2042922.html" target="_blank"&gt;EF框架step by step(7)—Code First DataAnnotations(1)&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/10/2041839.html</id><title type="text">EF框架step by step(6)—处理实体complex属性 - 杨延成</title><summary type="text">上一篇的中介绍过了对于EF4.1框架中，实体的简单属性的处理 这一篇介绍一下Code First方法中，实体Complex属性的处理。Complex属性是将一个对象做为另一个对象的属性。映射到数据库中则子对象表现为多个属性字段。反之，也就是说，数据库中多个相关字段映射成一个子对象，来进行统一的管理。complex属性要注意不同于外键引用对象的。下面用Code First的方式先做个complex属...</summary><published>2011-05-10T01:58:00Z</published><updated>2011-05-10T01:58:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/10/2041839.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/10/2041839.html" /><content type="html">上一篇的中介绍过了对于EF4.1框架中，实体的简单属性的处理 这一篇介绍一下Code First方法中，实体Complex属性的处理。Complex属性是将一个对象做为另一个对象的属性。映射到数据库中则子对象表现为多个属性字段。反之，也就是说，数据库中多个相关字段映射成一个子对象，来进行统一的管理。complex属性要注意不同于外键引用对象的。下面用Code First的方式先做个complex属...&lt;img src="http://counter.cnblogs.com/blog/rss/2041839" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/10/2041839.html" target="_blank"&gt;EF框架step by step(6)—处理实体complex属性&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/09/2041183.html</id><title type="text">EF框架step by step(5)—处理实体简单属性 - 杨延成</title><summary type="text">EF框架会对实体进行跟踪，对实体的每个属性当前值和原始值及其状态进行跟踪，记录。当前值是指实体属性当前的被赋予的值，而原始值是指实体最初从数据库读取或者附加到DbContext时的值。先通过简单的代码演示一下如何获取这两个值，仍采用上彷文章的案例，多余代码不在展示数据库内容如下图示简单获取当前值，初始值 using (BlogDbContext db = new BlogDbContext()) { BlogUser blogUser = db.BlogUsers.Find(4); ///通过db.Entry(blogUser).Property获取值，参数可以为Lamada表达式，也可以是字</summary><published>2011-05-09T07:05:00Z</published><updated>2011-05-09T07:05:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/09/2041183.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/09/2041183.html" /><content type="html">EF框架会对实体进行跟踪，对实体的每个属性当前值和原始值及其状态进行跟踪，记录。当前值是指实体属性当前的被赋予的值，而原始值是指实体最初从数据库读取或者附加到DbContext时的值。先通过简单的代码演示一下如何获取这两个值，仍采用上彷文章的案例，多余代码不在展示数据库内容如下图示简单获取当前值，初始值 using (BlogDbContext db = new BlogDbContext()) { BlogUser blogUser = db.BlogUsers.Find(4); ///通过db.Entry(blogUser).Property获取值，参数可以为Lamada表达式，也可以是字&lt;img src="http://counter.cnblogs.com/blog/rss/2041183" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/09/2041183.html" target="_blank"&gt;EF框架step by step(5)—处理实体简单属性&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/06/2038911.html</id><title type="text">EF框架step by step(4)—DBcontext应用于已存在数据库 - 杨延成</title><summary type="text">EF4.1有三种方式来进行数据操作及持久化。分别是Database-First,Model-First,Code-first，前面都已经简单介绍过了.下面简单小结一下：1.Database First是基于已存在的数据库，利用某些工具（如Vs提供的EF设计器）创建实体类，数据库对象与实体类的匹配关系等，你也可以手动修改这些自动生成的代码及匹配文件。2.Model First 这种方式是先利用某些工...</summary><published>2011-05-06T06:23:00Z</published><updated>2011-05-06T06:23:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/06/2038911.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/06/2038911.html" /><content type="html">EF4.1有三种方式来进行数据操作及持久化。分别是Database-First,Model-First,Code-first，前面都已经简单介绍过了.下面简单小结一下：1.Database First是基于已存在的数据库，利用某些工具（如Vs提供的EF设计器）创建实体类，数据库对象与实体类的匹配关系等，你也可以手动修改这些自动生成的代码及匹配文件。2.Model First 这种方式是先利用某些工...&lt;img src="http://counter.cnblogs.com/blog/rss/2038911" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/06/2038911.html" target="_blank"&gt;EF框架step by step(4)—DBcontext应用于已存在数据库&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/05/2037512.html</id><title type="text">EF框架step by step(3)—Code-First - 杨延成</title><summary type="text">CodeFirst是EF框架的第三种方式，也是最为复杂一种方式，本文将以EF4.1版本为基础，简要讲解一下用法，同时，也介绍DbContext的用法。本文采用的示例仍然是前两篇采用的博客用户的示例。故不在此对业务进行描述。当然，你也可以用常规的方式，先下载EF4.1安装后，在进行添加。第二步：为项目添加2个实体对象,仍然采用前面所描述过的博客用户及随笔类，代码如下示：[代码]第三步：定义DbCon...</summary><published>2011-05-05T05:02:00Z</published><updated>2011-05-05T05:02:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/05/2037512.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/05/2037512.html" /><content type="html">CodeFirst是EF框架的第三种方式，也是最为复杂一种方式，本文将以EF4.1版本为基础，简要讲解一下用法，同时，也介绍DbContext的用法。本文采用的示例仍然是前两篇采用的博客用户的示例。故不在此对业务进行描述。当然，你也可以用常规的方式，先下载EF4.1安装后，在进行添加。第二步：为项目添加2个实体对象,仍然采用前面所描述过的博客用户及随笔类，代码如下示：[代码]第三步：定义DbCon...&lt;img src="http://counter.cnblogs.com/blog/rss/2037512" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/05/2037512.html" target="_blank"&gt;EF框架step by step(3)—Code-First&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/05/03/2035248.html</id><title type="text">EF框架step by step(2)—Model-First - 杨延成</title><summary type="text">这一篇主要说一下EF框架中，Model First做法，仍然采用上一篇的案例。但增加评论功能。首先打开Blog.edmx文件，在空白处右键，添加新实体Comment，如下图示:点击确定，关闭窗口。第二步：在Comment实体上右键，选择Add—Scalar Property,为这个类添加CommentContent（string类型）属性和PostId（Int32）属性.第三步：在左侧工具箱窗口，...</summary><published>2011-05-03T05:59:00Z</published><updated>2011-05-03T05:59:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/03/2035248.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/05/03/2035248.html" /><content type="html">这一篇主要说一下EF框架中，Model First做法，仍然采用上一篇的案例。但增加评论功能。首先打开Blog.edmx文件，在空白处右键，添加新实体Comment，如下图示:点击确定，关闭窗口。第二步：在Comment实体上右键，选择Add—Scalar Property,为这个类添加CommentContent（string类型）属性和PostId（Int32）属性.第三步：在左侧工具箱窗口，...&lt;img src="http://counter.cnblogs.com/blog/rss/2035248" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/05/03/2035248.html" target="_blank"&gt;EF框架step by step(2)—Model-First&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yangyancheng/archive/2011/04/29/2032817.html</id><title type="text">EF框架step by step(1)—Database-First - 杨延成</title><summary type="text">ADO.NET Entity Framework 是微软以 ADO.NET 为基础所发展出来的对象关系对应 (O/R Mapping) 解决方案，现已经包含在 Visual Studio 2008 Service Pack 1以及 .NET Framework 3.5 Service Pack 1中发布。目前最新版本为4.1，可以点此下载。 ADO.NET Entity Framework 以 Entity Data Model (EDM) 为主，将数据逻辑层切分为三块，分别为 Conceptual Schema, Mapping Schema与 Storage Schema 三层，其上还有.</summary><published>2011-04-29T07:19:00Z</published><updated>2011-04-29T07:19:00Z</updated><author><name>杨延成</name><uri>http://www.cnblogs.com/yangyancheng/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yangyancheng/archive/2011/04/29/2032817.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yangyancheng/archive/2011/04/29/2032817.html" /><content type="html">ADO.NET Entity Framework 是微软以 ADO.NET 为基础所发展出来的对象关系对应 (O/R Mapping) 解决方案，现已经包含在 Visual Studio 2008 Service Pack 1以及 .NET Framework 3.5 Service Pack 1中发布。目前最新版本为4.1，可以点此下载。 ADO.NET Entity Framework 以 Entity Data Model (EDM) 为主，将数据逻辑层切分为三块，分别为 Conceptual Schema, Mapping Schema与 Storage Schema 三层，其上还有.&lt;img src="http://counter.cnblogs.com/blog/rss/2032817" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yangyancheng/archive/2011/04/29/2032817.html" target="_blank"&gt;EF框架step by step(1)—Database-First&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry></feed>