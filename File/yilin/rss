<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">博客园_老张博客</title><subtitle type="text">专注、坚持</subtitle><id>uuid:ba5cd4c9-ec82-4406-b5af-2ae76ddf41d4;id=8104</id><updated>2014-06-22T15:20:20Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><generator>feed.cnblogs.com</generator><entry><id>http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter1.html</id><title type="text">密码应用技术系列之1：密码应用技术概述 - Apollo.NET</title><summary type="text">本文通过老张和Apollo两人（其实都是我啦:)）的安全通讯问题场景，循序渐进引出本系列将要涉及的各种密码应用技术。你可以将本文看成是安全通讯的需求分析，以及使用本系列将要涉及的各种密码应用技术实现这些需求的概要设计。本系列最后一篇文章将参照这个设计，实现一个安全即时通讯工具。</summary><published>2013-10-14T13:48:00Z</published><updated>2013-10-14T13:48:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter1.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter1.html" /><content type="html">本文通过老张和Apollo两人（其实都是我啦:)）的安全通讯问题场景，循序渐进引出本系列将要涉及的各种密码应用技术。你可以将本文看成是安全通讯的需求分析，以及使用本系列将要涉及的各种密码应用技术实现这些需求的概要设计。本系列最后一篇文章将参照这个设计，实现一个安全即时通讯工具。&lt;img src="http://counter.cnblogs.com/blog/rss/3369285" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter1.html" target="_blank"&gt;密码应用技术系列之1：密码应用技术概述&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter0.html</id><title type="text">密码应用技术系列之0：开篇 - Apollo.NET</title><summary type="text">密码学原理非常深奥且晦涩难懂，密码技术的应用却要有趣的多。本系列将采用示例为主的方式，循序渐进的讲解各种密码技术的应用。通过本系列，你可以了解什么是现代密码学，它包含哪些密码技术，以及如何将这些技术运用到项目中，以保证程序和数据的安全。</summary><published>2013-08-24T04:16:00Z</published><updated>2013-08-24T04:16:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter0.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter0.html" /><content type="html">密码学原理非常深奥且晦涩难懂，密码技术的应用却要有趣的多。本系列将采用示例为主的方式，循序渐进的讲解各种密码技术的应用。通过本系列，你可以了解什么是现代密码学，它包含哪些密码技术，以及如何将这些技术运用到项目中，以保证程序和数据的安全。&lt;img src="http://counter.cnblogs.com/blog/rss/3279175" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/p/apollo_blog_cryptography_chapter0.html" target="_blank"&gt;密码应用技术系列之0：开篇&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/p/csharp-activex.html</id><title type="text">使用C#开发ActiveX控件（新） - Apollo.NET</title><summary type="text">ActiveX是广泛应用于IE浏览器的一种COM技术，而使用C#语言开发ActiveX控件技术由于属于非主流，所以存在不少技术难点。本文将从ActiveX控件的开发、发布、应用、部署和升级等方面，系统地介绍使用C#开发ActiveX控件技术的方方面面，帮助你一步一步顺利掌握该技术。</summary><published>2013-06-25T10:56:00Z</published><updated>2013-06-25T10:56:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/p/csharp-activex.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/p/csharp-activex.html" /><content type="html">ActiveX是广泛应用于IE浏览器的一种COM技术，而使用C#语言开发ActiveX控件技术由于属于非主流，所以存在不少技术难点。本文将从ActiveX控件的开发、发布、应用、部署和升级等方面，系统地介绍使用C#开发ActiveX控件技术的方方面面，帮助你一步一步顺利掌握该技术。&lt;img src="http://counter.cnblogs.com/blog/rss/3155268" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/p/csharp-activex.html" target="_blank"&gt;使用C#开发ActiveX控件（新）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/04/21/apollo_blog_ef_chapter8.html</id><title type="text">Entity Framework技术系列之8：使用Entity Framework技术实现RBAC模型 - Apollo.NET</title><summary type="text">本文综合运用Entity Framework技术，实现一套RBAC模型。该模型提供了实体数据模型和自定义成员资格提供程序两个层次的实现，共应用系统集成使用；另外，本文还提供了一个演示程序，演示如何在项目中集成使用该模型。本文将覆盖本系列前文所讨论的多个知识点，包括DIY实体数据模型、各种对象-关系映射、延迟加载、数据绑定、LINQ to Entities以及多数据库支持等。</summary><published>2013-04-21T01:54:00Z</published><updated>2013-04-21T01:54:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/04/21/apollo_blog_ef_chapter8.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/04/21/apollo_blog_ef_chapter8.html" /><content type="html">本文综合运用Entity Framework技术，实现一套RBAC模型。该模型提供了实体数据模型和自定义成员资格提供程序两个层次的实现，共应用系统集成使用；另外，本文还提供了一个演示程序，演示如何在项目中集成使用该模型。本文将覆盖本系列前文所讨论的多个知识点，包括DIY实体数据模型、各种对象-关系映射、延迟加载、数据绑定、LINQ to Entities以及多数据库支持等。&lt;img src="http://counter.cnblogs.com/blog/rss/3033491" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/04/21/apollo_blog_ef_chapter8.html" target="_blank"&gt;Entity Framework技术系列之8：使用Entity Framework技术实现RBAC模型&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/03/27/apollo_blog_ef_chapter7.html</id><title type="text">Entity Framework技术系列之7：LINQ to Entities - Apollo.NET</title><summary type="text">本文介绍LINQ to Entities的相关概念、基本语法，以及如何使用LINQ to Entities消费Entity Framework实体数据模型，实现各种查询功能。</summary><published>2013-03-27T14:09:00Z</published><updated>2013-03-27T14:09:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/03/27/apollo_blog_ef_chapter7.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/03/27/apollo_blog_ef_chapter7.html" /><content type="html">本文介绍LINQ to Entities的相关概念、基本语法，以及如何使用LINQ to Entities消费Entity Framework实体数据模型，实现各种查询功能。&lt;img src="http://counter.cnblogs.com/blog/rss/2985532" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/03/27/apollo_blog_ef_chapter7.html" target="_blank"&gt;Entity Framework技术系列之7：LINQ to Entities&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/03/11/apollo_blog_ef_chapter6.html</id><title type="text">Entity Framework技术系列之6：数据绑定 - Apollo.NET</title><summary type="text">本文通过实例讲解如何使用EntityDataSource控件，将实体数据绑定到ASP.NET页面中，并结合ListView控件和FormView控件，实现对实体数据的CRUD功能。</summary><published>2013-03-11T15:18:00Z</published><updated>2013-03-11T15:18:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/03/11/apollo_blog_ef_chapter6.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/03/11/apollo_blog_ef_chapter6.html" /><content type="html">本文通过实例讲解如何使用EntityDataSource控件，将实体数据绑定到ASP.NET页面中，并结合ListView控件和FormView控件，实现对实体数据的CRUD功能。&lt;img src="http://counter.cnblogs.com/blog/rss/2954847" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/03/11/apollo_blog_ef_chapter6.html" target="_blank"&gt;Entity Framework技术系列之6：数据绑定&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/03/07/apollo_blog_ef_chapter5.html</id><title type="text">Entity Framework技术系列之5：延迟加载 - Apollo.NET</title><summary type="text">延迟加载是ORM技术的重要特性，Entity Framework对该特性的支持非常给力。本文将承接上一篇文章，讨论如何实现DIY实体数据模型的延迟加载特性，并对该实体数据模型的即时加载和延迟加载特性进行验证，最后给出合理使用这两种加载模式的一些建议。</summary><published>2013-03-07T15:32:00Z</published><updated>2013-03-07T15:32:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/03/07/apollo_blog_ef_chapter5.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/03/07/apollo_blog_ef_chapter5.html" /><content type="html">延迟加载是ORM技术的重要特性，Entity Framework对该特性的支持非常给力。本文将承接上一篇文章，讨论如何实现DIY实体数据模型的延迟加载特性，并对该实体数据模型的即时加载和延迟加载特性进行验证，最后给出合理使用这两种加载模式的一些建议。&lt;img src="http://counter.cnblogs.com/blog/rss/2949066" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/03/07/apollo_blog_ef_chapter5.html" target="_blank"&gt;Entity Framework技术系列之5：延迟加载&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/03/01/apollo_blog_ef_chapter4.html</id><title type="text">Entity Framework技术系列之4：灵活应用实体数据模型 - Apollo.NET</title><summary type="text">通过上一篇文章，我们深入的了解了Entity Framework实体数据模型的方方面面，这使得我们有把握随心所欲的驾驭并改造它，使其更好的适应项目开发。本文将在此基础上，探讨如何DIY实体数据模型，使其支持POCO和多种数据库。</summary><published>2013-03-01T15:25:00Z</published><updated>2013-03-01T15:25:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/03/01/apollo_blog_ef_chapter4.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/03/01/apollo_blog_ef_chapter4.html" /><content type="html">通过上一篇文章，我们深入的了解了Entity Framework实体数据模型的方方面面，这使得我们有把握随心所欲的驾驭并改造它，使其更好的适应项目开发。本文将在此基础上，探讨如何DIY实体数据模型，使其支持POCO和多种数据库。&lt;img src="http://counter.cnblogs.com/blog/rss/2939537" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/03/01/apollo_blog_ef_chapter4.html" target="_blank"&gt;Entity Framework技术系列之4：灵活应用实体数据模型&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/02/26/apollo_blog_ef_chapter3.html</id><title type="text">Entity Framework技术系列之3：对象-关系映射 - Apollo.NET</title><summary type="text">美剧《Heroes》里有个狠角色叫Sylar，凭借看穿事物运转规律的力量，Sylar可以通过割裂其他超能者颅骨，窥探大脑的运行方式获取其超能。本文我将扮演Sylar的角色，对Entity Framework的实体数据模型进行深入剖析，详解Entity Framework技术如何实现对象-关系映射这一ORM核心功能。</summary><published>2013-02-26T14:29:00Z</published><updated>2013-02-26T14:29:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/02/26/apollo_blog_ef_chapter3.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/02/26/apollo_blog_ef_chapter3.html" /><content type="html">美剧《Heroes》里有个狠角色叫Sylar，凭借看穿事物运转规律的力量，Sylar可以通过割裂其他超能者颅骨，窥探大脑的运行方式获取其超能。本文我将扮演Sylar的角色，对Entity Framework的实体数据模型进行深入剖析，详解Entity Framework技术如何实现对象-关系映射这一ORM核心功能。&lt;img src="http://counter.cnblogs.com/blog/rss/2934371" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/02/26/apollo_blog_ef_chapter3.html" target="_blank"&gt;Entity Framework技术系列之3：对象-关系映射&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry><entry><id>http://www.cnblogs.com/yilin/archive/2013/02/22/apollo_blog_ef_chapter2.html</id><title type="text">Entity Framework技术系列之2：三种开发模式实现数据访问 - Apollo.NET</title><summary type="text">Entity Framework支持Database First、Model First和Code Only三种开发模式。本文将讲解如何使用这三种开发模式快速实现数据访问，希望能帮助你了解Entity Framework的三种开发模式，并从中找到适合你的开发模式。</summary><published>2013-02-22T15:08:00Z</published><updated>2013-02-22T15:08:00Z</updated><author><name>Apollo.NET</name><uri>http://www.cnblogs.com/yilin/</uri></author><link rel="alternate" href="http://www.cnblogs.com/yilin/archive/2013/02/22/apollo_blog_ef_chapter2.html" /><link rel="alternate" type="text/html" href="http://www.cnblogs.com/yilin/archive/2013/02/22/apollo_blog_ef_chapter2.html" /><content type="html">Entity Framework支持Database First、Model First和Code Only三种开发模式。本文将讲解如何使用这三种开发模式快速实现数据访问，希望能帮助你了解Entity Framework的三种开发模式，并从中找到适合你的开发模式。&lt;img src="http://counter.cnblogs.com/blog/rss/2922994" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/yilin/archive/2013/02/22/apollo_blog_ef_chapter2.html" target="_blank"&gt;Entity Framework技术系列之2：三种开发模式实现数据访问&lt;/a&gt;，转载请注明。&lt;/p&gt;</content></entry></feed>