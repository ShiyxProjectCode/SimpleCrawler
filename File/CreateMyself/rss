<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_xpy0928</title>
  <subtitle type="text"></subtitle>
  <id>uuid:8dc7efba-43f2-4416-95a0-534dced3b48f;id=4392</id>
  <updated>2015-09-17T05:18:55Z</updated>
  <author>
    <name>Recluse_Xpy</name>
    <uri>http://www.cnblogs.com/CreateMyself/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4811103.html</id>
    <title type="text">Web API 1入门之移除XML格式（一） - Recluse_Xpy</title>
    <summary type="text">前言回头想来，没想到自己却坚持下来了，EntityFramework系列终于全部完成了，给自己点个赞先。本系列将着手于Web API，关于一些基础的介绍及定义就不再叙述，请参考园友们文章，非常详细，我也是在此基础上步入学习的。简短介绍我们知道Web API是基于ASP.NET平台构建RESTful应...</summary>
    <published>2015-09-15T13:59:00Z</published>
    <updated>2015-09-15T13:59:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4811103.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4811103.html" />
    <content type="html">前言回头想来，没想到自己却坚持下来了，EntityFramework系列终于全部完成了，给自己点个赞先。本系列将着手于Web API，关于一些基础的介绍及定义就不再叙述，请参考园友们文章，非常详细，我也是在此基础上步入学习的。简短介绍我们知道Web API是基于ASP.NET平台构建RESTful应...&lt;img src="http://counter.cnblogs.com/blog/rss/4811103" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4811103.html" target="_blank"&gt;Web API 1入门之移除XML格式（一）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4796724.html</id>
    <title type="text">EntityFramework 7.0之初探【基于VS 2015】（十） - Recluse_Xpy</title>
    <summary type="text">前言本篇作为EF 7.0的开篇也是Entity Framework目前系列末篇，因为关于EF 7.0学习资料实在是太少，我都是参考老外的资料花费了不少时间去研究去尝试同时也失败多次，个人觉得那是值得的，至少为今后在VS2015上来运用EF 7.0打下了坚定的基础，但是有些很深入的层面还得待EF 7....</summary>
    <published>2015-09-14T12:21:00Z</published>
    <updated>2015-09-14T12:21:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4796724.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4796724.html" />
    <content type="html">前言本篇作为EF 7.0的开篇也是Entity Framework目前系列末篇，因为关于EF 7.0学习资料实在是太少，我都是参考老外的资料花费了不少时间去研究去尝试同时也失败多次，个人觉得那是值得的，至少为今后在VS2015上来运用EF 7.0打下了坚定的基础，但是有些很深入的层面还得待EF 7....&lt;img src="http://counter.cnblogs.com/blog/rss/4796724" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4796724.html" target="_blank"&gt;EntityFramework 7.0之初探【基于VS 2015】（十）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4787856.html</id>
    <title type="text">EntityFramework之异步、事务及性能优化（九） - Recluse_Xpy</title>
    <summary type="text">前言本文开始前我将循序渐进先了解下实现EF中的异步，并将重点主要是放在EF中的事务以及性能优化上，希望通过此文能够帮助到你。异步既然是异步我们就得知道我们知道在什么情况下需要使用异步编程，当等待一个比较耗时的操作时，可以用异步来释放当前的托管线程而无需等待，从而在管理线程中不需要花费额外的时间，也就...</summary>
    <published>2015-09-08T13:53:00Z</published>
    <updated>2015-09-08T13:53:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4787856.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4787856.html" />
    <content type="html">前言本文开始前我将循序渐进先了解下实现EF中的异步，并将重点主要是放在EF中的事务以及性能优化上，希望通过此文能够帮助到你。异步既然是异步我们就得知道我们知道在什么情况下需要使用异步编程，当等待一个比较耗时的操作时，可以用异步来释放当前的托管线程而无需等待，从而在管理线程中不需要花费额外的时间，也就...&lt;img src="http://counter.cnblogs.com/blog/rss/4787856" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4787856.html" target="_blank"&gt;EntityFramework之异步、事务及性能优化（九）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4783027.html</id>
    <title type="text">EntityFramework之摸索EF底层（八） - Recluse_Xpy</title>
    <summary type="text">前言此篇文章我将深入去摸索edmx中一些不为人知的东西，有时候我们需要知道Code First模型中一些存储以及映射的原理，个人觉得那是必要的也是有用的，因为很有可能SQL会出现一些其他问题，只有掌握了一些必备的原理，这样当报错时才会不知所措。原理我们知道实体数据模型（EDM）是应用程序和数据存储之...</summary>
    <published>2015-09-06T10:56:00Z</published>
    <updated>2015-09-06T10:56:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4783027.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4783027.html" />
    <content type="html">前言此篇文章我将深入去摸索edmx中一些不为人知的东西，有时候我们需要知道Code First模型中一些存储以及映射的原理，个人觉得那是必要的也是有用的，因为很有可能SQL会出现一些其他问题，只有掌握了一些必备的原理，这样当报错时才会不知所措。原理我们知道实体数据模型（EDM）是应用程序和数据存储之...&lt;img src="http://counter.cnblogs.com/blog/rss/4783027" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4783027.html" target="_blank"&gt;EntityFramework之摸索EF底层（八）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4773886.html</id>
    <title type="text">EntityFramework之你不知道的那些事（七） - Recluse_Xpy</title>
    <summary type="text">前言前面一系列几乎都是循序渐进式的进行叙述，似乎脚步走得太快了，于是我开始歇一歇去追寻一些我所不太了解的细枝末节，在此过程中也屡次碰壁，但是唯有如此才能更好的成长，不是吗！希望此文对你亦有帮助。属性私有化我们之前有点太循规蹈矩对于模型的建立，所以你才不会遇到问题（当然我也是），也许你大概也这样做过，...</summary>
    <published>2015-09-04T06:24:00Z</published>
    <updated>2015-09-04T06:24:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4773886.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4773886.html" />
    <content type="html">前言前面一系列几乎都是循序渐进式的进行叙述，似乎脚步走得太快了，于是我开始歇一歇去追寻一些我所不太了解的细枝末节，在此过程中也屡次碰壁，但是唯有如此才能更好的成长，不是吗！希望此文对你亦有帮助。属性私有化我们之前有点太循规蹈矩对于模型的建立，所以你才不会遇到问题（当然我也是），也许你大概也这样做过，...&lt;img src="http://counter.cnblogs.com/blog/rss/4773886" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4773886.html" target="_blank"&gt;EntityFramework之你不知道的那些事（七）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4746258.html</id>
    <title type="text">EntityFramework之原始查询及性能优化（六） - Recluse_Xpy</title>
    <summary type="text">前言在EF中我们可以通过Linq来操作实体类，但是有些时候我们必须通过原始sql语句或者存储过程来进行查询数据库，所以我们可以通过EF Code First来实现，但是SQL语句和存储过程无法进行映射，于是我们只能手动通过上下文中的SqlQuery和ExecuteSqlCommand来完成。SqlQ...</summary>
    <published>2015-08-30T15:15:00Z</published>
    <updated>2015-08-30T15:15:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4746258.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4746258.html" />
    <content type="html">前言在EF中我们可以通过Linq来操作实体类，但是有些时候我们必须通过原始sql语句或者存储过程来进行查询数据库，所以我们可以通过EF Code First来实现，但是SQL语句和存储过程无法进行映射，于是我们只能手动通过上下文中的SqlQuery和ExecuteSqlCommand来完成。SqlQ...&lt;img src="http://counter.cnblogs.com/blog/rss/4746258" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4746258.html" target="_blank"&gt;EntityFramework之原始查询及性能优化（六）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4769363.html</id>
    <title type="text">VS2015安装EF Power Tools - Recluse_Xpy</title>
    <summary type="text">前言最近在研究EF觉得EF Power Tools比较强大，可以利用其特性来进行Code First模型验证等等，本以为在VS2015扩展和更新中能找到EF Power Tools，结果未找到，还得去官网下载，下面是安装步骤。供需要在VS2015上安装VS Power Tools的园友作一个参考。第...</summary>
    <published>2015-08-29T09:41:00Z</published>
    <updated>2015-08-29T09:41:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4769363.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4769363.html" />
    <content type="html">前言最近在研究EF觉得EF Power Tools比较强大，可以利用其特性来进行Code First模型验证等等，本以为在VS2015扩展和更新中能找到EF Power Tools，结果未找到，还得去官网下载，下面是安装步骤。供需要在VS2015上安装VS Power Tools的园友作一个参考。第...&lt;img src="http://counter.cnblogs.com/blog/rss/4769363" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4769363.html" target="_blank"&gt;VS2015安装EF Power Tools&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4753476.html</id>
    <title type="text">EntityFramework之Log（五） - Recluse_Xpy</title>
    <summary type="text">关于日志属性日志 DbContext.Database.Log属性被设置为一个委托，该委托能接受带有一个字符串参数的任何方法，最主要的是，通过设置它到TextWriter的Write方法将能应用于任何的TextWriter，通过上下文自动生成的所有SQL语句将被记录到Writer中。例如，如下代码将...</summary>
    <published>2015-08-26T07:30:00Z</published>
    <updated>2015-08-26T07:30:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4753476.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4753476.html" />
    <content type="html">关于日志属性日志 DbContext.Database.Log属性被设置为一个委托，该委托能接受带有一个字符串参数的任何方法，最主要的是，通过设置它到TextWriter的Write方法将能应用于任何的TextWriter，通过上下文自动生成的所有SQL语句将被记录到Writer中。例如，如下代码将...&lt;img src="http://counter.cnblogs.com/blog/rss/4753476" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4753476.html" target="_blank"&gt;EntityFramework之Log（五）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4751994.html</id>
    <title type="text">EntityFramework之孩子删除（四）（你以为你真的懂了？） - Recluse_Xpy</title>
    <summary type="text">前言从表面去看待事物视线总有点被层层薄雾笼罩的感觉，当你静下心来思考并让指尖飞梭于键盘之上，终将会拨开浓雾见青天。这是我切身体验。在EF关系配置中，我暂且将主体对象称作为父亲，而依赖对象称作为孩子，父亲与孩子关联的关系可能是必须的也可能是可选的，如果是必须的那么意味着孩子不能因没有父亲而独立存在，又...</summary>
    <published>2015-08-23T04:45:00Z</published>
    <updated>2015-08-23T04:45:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4751994.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4751994.html" />
    <content type="html">前言从表面去看待事物视线总有点被层层薄雾笼罩的感觉，当你静下心来思考并让指尖飞梭于键盘之上，终将会拨开浓雾见青天。这是我切身体验。在EF关系配置中，我暂且将主体对象称作为父亲，而依赖对象称作为孩子，父亲与孩子关联的关系可能是必须的也可能是可选的，如果是必须的那么意味着孩子不能因没有父亲而独立存在，又...&lt;img src="http://counter.cnblogs.com/blog/rss/4751994" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4751994.html" target="_blank"&gt;EntityFramework之孩子删除（四）（你以为你真的懂了？）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/CreateMyself/p/4747605.html</id>
    <title type="text">EntityFramework之DetectChanges's Secrets（三）（我为EF正名） - Recluse_Xpy</title>
    <summary type="text">前言对于应用程序开发者来说，通常不需要考虑太多对于Entity Framework中的变更追踪（change tracking）,但是变更追踪和DetectChanges方法是栈的一部分，在这其中，易用性和性能就紧密关联。所以，鉴于此理由，对于你继续看接下来的内容那将是非常有帮助。DetectCha...</summary>
    <published>2015-08-21T14:21:00Z</published>
    <updated>2015-08-21T14:21:00Z</updated>
    <author>
      <name>Recluse_Xpy</name>
      <uri>http://www.cnblogs.com/CreateMyself/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/CreateMyself/p/4747605.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/CreateMyself/p/4747605.html" />
    <content type="html">前言对于应用程序开发者来说，通常不需要考虑太多对于Entity Framework中的变更追踪（change tracking）,但是变更追踪和DetectChanges方法是栈的一部分，在这其中，易用性和性能就紧密关联。所以，鉴于此理由，对于你继续看接下来的内容那将是非常有帮助。DetectCha...&lt;img src="http://counter.cnblogs.com/blog/rss/4747605" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/CreateMyself/p/4747605.html" target="_blank"&gt;EntityFramework之DetectChanges&amp;#39;s Secrets（三）（我为EF正名）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>