<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" title="XSL Formatting" href="/rss.xsl" media="all" ?>
<rss version="2.0">
<channel>
    <title>shiling_02404的专栏</title>
    <image>
    <link>http://blog.csdn.net</link>
    <url>http://static.blog.csdn.net/images/logo.gif</url>
    </image>
    <description>Life isn&#39;t always what one likes</description>
	<link>http://blog.csdn.net/shiling_02404</link>
	<language>zh-cn</language>
	<generator>http://blog.csdn.net</generator>
	<ttl>5</ttl>
	<copyright><![CDATA[Copyright &copy; shiling_02404]]></copyright> 
	<pubDate>2015/9/17 14:32:21</pubDate>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(8)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/42263861</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/42263861</guid>
        <author>shiling_02404</author>
        <pubDate>2014/12/30 11:30:28</pubDate>
        <description><![CDATA[
            
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">72.生成子列表后，不要再操作原列表</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">先看例子：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2">
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 list=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;();</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;A&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;B&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;C&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 subList=list.subList(0, 2);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;D&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;list
 size=&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;list.size());</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">print</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;sublist
 size=&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;subList.size());//这里会的报并发修改异常</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">为什么会是sublist的并发修改异常呢？这里并没有多线程修操作啊。那是因为sublist是由list的subList方法得到，是原列表list的一个视图，原列表修改了，但subList取出的子列表不会重新生成一个新列表。后面在对sublist取size操作时，会检测到修改计数器与与预期的不同，于是就抛异常了。size()方法的原码中会先进行修改计数器的检测，由于原列表修改，原列表的修改计数器发生了变化，但子列表中仍然是原来的计数器&#20540;，所以在不相等时会抛出异常。通过subList方法得到的子列表，调用其他方法时，也会检测修改计数器，例如，set,get,add等方法，若生成子列表后，再修改原列表，子列表再使用这些方法时就会抛异常。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">一种有效的就去是，在原列表生成完子列表后，通过Collections.unmodifiableList方法设置原列表的只读状态，这样的话，就可以避免出现异常情况.(一种防御式编程），如：</span></div>
<div align="left" style="font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:12px">List&lt;String&gt; list=new ArrayList&lt;String&gt;();</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">list.add(&quot;A&quot;);</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">list.add(&quot;B&quot;);</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">list.add(&quot;C&quot;);</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">List&lt;String&gt; subList=list.subList(0, 2);</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">list=Collections.unmodifiableList(list);</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">list.add(&quot;D&quot;);//这样的话，在这里会运行异常，提示不支持操作。实际上只能对list进行只读操作，但可对子列表进行写操作</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;subList.add(&quot;E&quot;);//对子列表的修改将反应到原列表</span></div>
</div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">73.使用Comparator进行排序</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">在java中给数据排序，有身份种实现，一种是comparable接口，一种是实现comparator接口.</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">java中为什么要有两个排序接口呢？</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">实现了Comparable接口的类表明自身是可比较的，有了比较才能进行排序；而Comparator接口是一个工具类接口，它的名字（比较器）也已经表明了它的作用：用作比较，它与原有类的逻辑没有关系，只是实现两个类的比较逻辑，从这方面来说，一个类可以有很多的比较器，只要有业务需求就可以产生比较器，有比较器就可以产生N多种排序，而Comparable接口的排序只能说是实现类的默认排序算法，一个类稳定、成熟后其compareTo方法基本不会改变，也就是说一个类只能有一个固定的、由compareTo方法提供的默认排序算法。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">实现了Comparable接口的类，在具体实现compareTo方法时，可使用apache工具类的方法,</span></div>
<div align="left" style="font-size:14px"><span style="background-color:rgb(239,239,239); font-size:9pt; font-family:Consolas">org.apache.commons.lang3.builder.CompareToBuilder</span><span style="font-family:Consolas; font-size:12px">，eg:</span></div>
<div align="left" style="font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Override</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">compareTo</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Employee</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">obj</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">CompareToBuilder</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">append</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span><span style="font-size:9pt"><em>postion</em></span><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">obj</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>postion</em></span><span style="font-size:9pt">).</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">append</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span>&nbsp;<span style="font-size:9pt"><em>id</em></span><span style="font-size:9pt">,</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">obj</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>id</em></span><span style="font-size:9pt">).</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">toComparison</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>class</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">PositionComparator</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>implements</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Comparator</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Employee</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Override</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">compare</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Employee</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">o1</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Employee</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">o2</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">o1</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getPostion</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">compareTo</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">o2</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getPostion</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
</div>
</div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">总之，Comparable接口可以作为实现类的默认排序法，Comparator接口则是一个类的扩展排序工具</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">74.不推荐使用binarySearch对列表进行检索</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">对一个列表进行检索时，我们使用的最多的是indexOf方法，它简单，好用，而且也不会出错 ，虽然它只能检索到第一个符合条件的&#20540;，但是我们可以生成子列表后再检索，这样也就可以查找出所有符合条件的&#20540;了。Collections工具类也提供了一个检索方法：binarySerach：它是使用二分搜索法搜索指定列表，以获得指定对象，其实现的功能与indexOf是相同的，只是使用的是二分法搜索列表。下面的例子：</span></div>
<div align="left">
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 cities=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;();</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cities.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;广州&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cities.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;北京&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cities.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;北京&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cities.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;香港&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cities.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;香港&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">index1=cities.indexOf(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;北京&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">index2=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Collections</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt; background-color:rgb(239,239,239)"><em>binarySearch</em></span>&nbsp;<span style="font-size:9pt">(cities,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;北京&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;index1=&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;index1&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;,index2=&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;index2);</span></span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">返回结果一个是1，一个是2.</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">为什么？问题出在二分法搜索上，二分法搜索就是“折半折半再折半”的搜索方法。在上例中，折半的过程中第一次就遇到了“北京”，恰好对应就是索引2</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">其实两者算法都没问题，只是我们用错了情景，因为二分法查询的一个首要前提是：数据集已经实现升序排列，否则二分法查找的&#20540;是不准确的。不排序怎么确定是在小区中查找还是在大区中查找呢。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">在实际业务中，如果我们先对原始数据排序，再使用二分法搜索，那有可能会影响原始数据的位置，如果业务数据与位置无法那还好，如果相关那就需要再拷贝数据再排序了。当然我们也可以直接使用indexOf方法。从性能上来说，binarySerach的二分查找比indexOf的遍历算法性能高很多，特别是在大数据集而且目标&#20540;又接近尾部时。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">总之，根据实际业务场景综合考虑。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">75：集合中的元素必须做到compareTo和equals同步</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">主要是要理解两点：</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">indexOf依赖equals方法查找，binarySearch则依赖compareTo方法查找。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">equals是判断元素是否相等，compareTo是判断元素在排序中的位置是否相同。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">即然一个是决定排序位置，一个是决定相等，那我们就应该保证当排序位置相同时，其equals也相同，否则会逻辑混乱。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">注意：实现了compareTo方法，就应该覆写equals方法 ，确保两者同步。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">76：集合运算时，使用更优雅的方式</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">并集：list1.addAll(list2);</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">交集：list1.retainAll(list2);</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">差集：list1.removeAll(list2);</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">无重复并集：list2.removeAll(list1);list1.addAll(list2);</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">77.使用shuffle打乱列表</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">Collections.shuffle</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">78.减少HashMap中元素的数量</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">本建议主要其实主要是基于对HashMap底组数据结构进行理解。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">其实是Entry类型的数组，往HashMap中添加元素时，会根据key&#20540;hash算法得到对应的索引&#20540;，即确定在Entry类型数组中的位置，将key与value转为Entry对象，存入数组中（或更新已有entry)</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">在往HashMap中新增对象时，还会涉及到扩容的问题，HashMap的无参构造函数，通过查看源码可知容量默认是16（长度永远是2的N次幂），装载因子是0.75，当Entry[]数组长度达到12的时候，将会进行2倍的扩容（resize),扩容在大数据量的情况下，会有性能风险。因些我认为，在具体业务中如果能确定业务数据的大小，则最好指定hashmap的初始容量等。（此处还有更多的知识，参看源码
 ）</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">此处不得不说说ArrayList的扩容，当大于初始容量时，ArrayList才会进行扩容，扩容不是2倍，而是1.5倍&#43;1 源码中（</span><span style="background-color:rgb(238,238,238); font-size:9pt; font-family:Consolas">i * 3 /
 2 &#43; 1）&nbsp;</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="background-color:rgb(238,238,238); font-size:9pt; font-family:Consolas"><br>
</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">79.集合中的哈希码不要重复</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">在这一建议中，更进一步详细讲解了hashmap的存储结构。</span></div>
<div align="left" style="font-size:14px"><span style="font-family:Consolas; font-size:12px">首先一个问题，建议78中提到是通过对key进行hash得到&#20540;，再定位在在table中的位置，那hashmap是如何来做到避免哈希冲突呢</span></div>
<div align="left" style="font-size:14px">我们先来看一下源码（往HashMap中添加元素）</div>
<div align="left" style="font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>V</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">put</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>K</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>V</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">==</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">putForNullKey</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">i
 =</span>&nbsp;<span style="font-size:9pt"><em>hash</em></span><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.hashCode());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">j
 =</span>&nbsp;<span style="font-size:9pt"><em>indexFor</em></span><span style="font-size:9pt">(i,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>table</em></span><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>length</em></span><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Entry</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">localEntry
 =</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>table</em></span><span style="font-size:9pt">[j];
 localEntry !=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">; localEntry = localEntry.</span><span style="font-size:9pt"><em>next</em></span><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Object</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">localObject1;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">((localEntry.</span>&nbsp;<span style="font-size:9pt"><em>hash</em></span>&nbsp;<span style="font-size:9pt">!=
 i)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| (((localObject1 = localEntry.</span>&nbsp;<span style="font-size:9pt"><em>key</em></span><span style="font-size:9pt">) !=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 &amp;&amp; (!(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.equals(localObject1)))))</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>continue</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Object</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">localObject2
 = localEntry.</span><span style="font-size:9pt"><em>value</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localEntry.</span>&nbsp;<span style="font-size:9pt"><em>value</em></span>&nbsp;<span style="font-size:9pt">=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localEntry.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">recordAccess</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">localObject2;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>modCount</em></span>&nbsp;<span style="font-size:9pt">&#43;=
 1;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">addEntry</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(i,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,
 j);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">上面的方法中调用到的hash()与indexFor()方法源码如下：</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>&nbsp; &nbsp; &nbsp;static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">hash</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">^=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&gt;&gt;
 20 ^</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&gt;&gt; 12;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">^</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&gt;&gt;
 7 ^</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&gt;&gt; 4);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp;得到唯一的hashCode</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">indexFor</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt1</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt2</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt1</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&amp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt2</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">-
 1);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp;再通过indexFor 做与运算得到在数组中的位置。（这两个方法有一定的深度）</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">简单的说，hash方法和indexFor方法就是把哈希码转变成数组的下标。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">但是，正是因为经过indexFor方法中的与运算，来得到数组中的位置，有可能存在冲突的可能，即对于一个固定的哈希算法f(k),允许出现f(k1)=f(k2),但是k1不等于k2的情况，也就是说两个不同的Entry，可能产生相同的哈希码，HashMap是如何处理这种冲突问题的呢？答案是通过链表，每个链&#20540;对都是一个Entry,其中每个Entry都有一个next变量，也就是说它会指向下一个键&#20540;对--很明显，这应该是一个单向链表，该链表是由addEntry方法完成的。其源代码如下：</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">addEntry</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt1</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>K</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>V</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt2</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Entry</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">localEntry
 =</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>table</em></span>&nbsp;<span style="font-size:9pt">[</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt2</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">];</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>table</em></span><span style="font-size:9pt">[</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt2</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">]
 =</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Entry</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt1</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramK</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramV</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,
 localEntry);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>size</em></span><span style="font-size:9pt">&#43;&#43;
 &lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>threshold</em></span><span style="font-size:9pt">)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">resize</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(2
 *</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>table</em></span><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>length</em></span><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">这段程序涵盖两个业务逻辑：如果新加入的键&#20540;对的hashCode是唯一的，那直接插入到数组中，Entry的next&#20540;则为null;如果新加入的键&#20540;对的hashCode与其他元素冲突，则替换掉数组中的当前&#20540;，并把新加入的Entry的next变量指向被替换掉的元素--于是，一个链表就生成了。</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">HashMap存储结构图：</span></div>
</div>
</div>
</div>
<div align="left" style="font-size:14px"><img src="http://img.blog.csdn.net/20141230174338969?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2hpbGluZ18wMjQwNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" align="middle" alt=""><br>
</div>
<div align="left" style="font-size:14px"><br>
</div>
<div align="left"><span style="font-size:12px">总之，HashMap的存储主要还是数组，遇到哈希冲突的时候则使用链表解决。因此，在HashMap的查找中，如果HashMap中的哈希码相同，它的查找效果与ArrayList没什么两样。所以此建议提出，HashMap中的hashCode应避免冲突。</span></div>
<div align="left"><span style="font-size:12px"><br>
</span></div>
<div align="left"><span style="font-size:12px">80.多线程使用Vector 或 HashTable</span></div>
<div align="left"><span style="font-size:12px">Vector是ArrayList的多线程版本，HashTable中HashMap的多线程版本。</span></div>
<div align="left"><span style="font-size:12px">这里首先要区分两个概念：线程安全，同步修改异常</span></div>
<div align="left"><span style="font-size:12px">基本上所有的集合类都有一个叫做快速失败（Fail-Fast)的校验机制，当一个集合在被多个线程修改并访问时，就可能会出现ConcurrentModificationException异常，这是为了确保集合方法一致而设置的保护措施，它的实现原理就是我们经常提到的modCount修改计数器：如果在读列表时，modCount发生变化（也就是有其他线程修改）则会抛出此异常。这与线程同步是两码事，线程同步是为了保护集合中的数据不被脏读、脏写而设置的。</span></div>
<div align="left"><span style="font-size:12px">ArrayList修改为Vector，因为Vector的每个方法前都加上了synchronized关键字，同时只会允许一个线程进入该方法，确保了程序的可靠性。虽然我们在系统开发中我们一再说明，除非必要，否则不要使用synchronized，这是从性能的角度考虑的，但是一旦涉及多线程时（注意这里说的是真正的多线程，不是并发修改的问题，比如一个线程增加，一个线程删除，这不属于多线程的范畴），Vector会是最佳选择，当然自己在程序中加synchronized也是可行的方法。</span></div>
<div align="left"><span style="font-size:12px">HashMap的线程安全类HashTable与此相同</span></div>
<div align="left"><span style="font-size:12px"><br>
</span></div>
<div align="left"><span style="font-size:12px"></span>
<div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
81.非稳定排序推荐使用List</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">SortedSet</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 persons=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">TreeSet</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;persons.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(180));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;persons.add(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(175));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">p:persons){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(p.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getHeigh</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//先输出175，再输出180</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;persons.first().</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setHeigh</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(185);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">p:persons){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(p.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getHeigh</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//先输出185，再输出180</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;persons=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">TreeSet</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;(persons));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">p:persons){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(p.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getHeigh</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//先输出180，再输出185</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">对于不变量的排序，例如直接量（也就是8个基本类型）、String类型等，推荐使用TreeSet，而对于可变量，例如我们自己写的类，可能会在逻辑处理中中改变其排序关键&#20540;的，则建议使用List自行排序。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">如果用用List解决排序问题，就需要自行解决元素重得利问题（若要剔除也很简单，转变为HashSet，剔除后再转回来），若采用TreeSet，则需要解决元素修改后的排序问题。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">总之，SortedSet中的元素被修改后可能会影响其排序位置</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">82.集合大家族</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">可划分为以下几类：</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">1）List</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">实现List接口的集合主要有：ArrayList,LinkedList,Vector,Stack,其中ArrayList是一个动态数组，LinkedList是一个双向链表，Vector是一个线程安全的动态数组，Stack是一个对象栈，遵循先进后出的原则</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">2）set</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">set是不包含重复元素的集合，其主要的实现类有：EnumSet,HashSet,TreeSet,其中EnumSet是枚举类型的专用Set,所有元素都是枚举类型；HashSet是以哈希码决定其元素位置的Set，其原理与HashMap相&#20284;，它提供快速的插入和查找方法，TreeSet是一个自动排序的Set,它实现了SortedSet接口</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">3）Map</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Map是一个大家族，它可以分为排序Map和非排序Map,排序Map主要是TreeMap类，它根据Key&#20540;进行自动排序；非排序Map主要包括：HashMap,HashTable,Properties,EnumMap等，其中Properties是HashTable的子类，它的主要用途是从Property文件中加载数据，并提供方便的读写操作；EnumMap则是要求其key必须是某一个枚举类型。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Map中还有一个WeakHashMap</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">4)Queue</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">队列，它分为两类，一类是阻塞式队列，队列满了以后再插入元素则会抛出异常，主要包括：ArrayBlockingQueue、PriorityBlockingQueue、LinkedBlockingQueue,其中ArrayBlockingQueue是一个以数组方式实现的有界阻塞队列，PriorityBlockingQueue是依照优先级组建的队列，LinkedBlockingQueue是通过链表实现的阻塞队列；另一类是非阻塞队列，无边界的，只要内存允许，都可以持续追加元素，我们最经常使用的PriorityQueue类。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">还有一种队列，是双端队列，支持在头、尾两端插入和移除元素，它的主要实现类是：ArrayDeque、LinkedBlockingDeque、LinkedList</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">5)数组</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">数组与集合的最大区别就是数组能够容纳基本类型，而集合就不行 ，更重要的一点就是所有的集合底层存储的都是数组</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">6）工具类</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">数组工具类是java.util.Arrays和java.lang.reflect.Array，集合工具类是java.util.Collections</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">7)扩展类</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Apache的common-collecitons扩展包</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Google的google-collections扩展包</span></div>
</div>
</div>
</div>
<br>
</div>
</div>
</div>

            <div>
                作者：shiling_02404 发表于2014/12/30 11:30:28 <a href="http://blog.csdn.net/shiling_02404/article/details/42263861">原文链接</a>
            </div>
            <div>
            阅读：185 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/42263861#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(7)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41956133</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41956133</guid>
        <author>shiling_02404</author>
        <pubDate>2014/12/16 9:24:38</pubDate>
        <description><![CDATA[
            
<div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">66.asList方法产生的list对象不可更改</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">这里说的asList方法，是指Arrays工具类中的方法，与建议65相同</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">67.不同的列表选择不同的遍历方法</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">这里主要说的是foreach循环，与for循环的在实现了RandomAccess接口的对象上的效率差别。在Java中，RandomAccess和Cloneable、Serializable一样，都是标志性接口，不需要任何实现，只要用来表明其实现类具有某些特质的，实现了Cloneable接口表明可以被拷贝，Serializable可以被序列化，RandomAccess则表明这个类可以随机存取。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">java中的foreach语法是Iterator(迭代器）的变形用法，书中通过对一个list求平均&#20540;来说明对列表使用恰当的遍历方法所带来的效率提升。如下：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">pubic static int average(List&lt;Integer&gt; list){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">int sum=0;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">//可以随机存取，则使用下标遍历</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">if(list instanceof RandomAccess){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;for(int i=0,size=list.size();i&lt;size;i&#43;&#43;){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sum&#43;=list.get(i);</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}else{</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">//有序存取，使用foreach</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;for(inti:list)</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sum&#43;=i;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">return sum/list.size();</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">68.频繁删除和插入时使用LinkedList</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">双向链表</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">69.列表相等只需关心元素数据</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">例子：返回是true</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ArrayList</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 arrayList=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;();</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayList.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">add</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;A&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Vector</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 vector=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Vector</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">String</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;();</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">add</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;A&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;arrayList.equals
 vector?&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;arrayList.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">equals</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(vector));</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">java如此处理也确实是为开发者着考虑，列表只是一种容器，只要是同一种类型的容器（如List),不用关心容器的细节差别，（如ArrayList和LinkedList),只要确定所有的元素数据相等，那这两个列表就相等。如此一来，我们就不用太关注容器的细节，</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">其他的集合类型，如Set,map等与此相同，也只是关心集合元素，而不用考虑集合类型。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">70.子列表，只是原列表的一个视图</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">List接口，提供了subList方法，其作用是返回一个列表的子列表，所有的修改动作直接作用于原列表</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">71.推荐使有subList处理局部列表</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">通过一个需求来说明：一个列表有100个元素，现在要删除索引20至30位置的元素</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">一般我们通过遍历也可以删除</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//初始化一个固定长度，不可变列表</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 data=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Collections</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>nCopies</em></span><span style="font-size:9pt">(100,
 0);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//转换为可变列表</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 aList=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;(data);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//遍历，删除符合条件</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">i=0,size=data.size();i&lt;size;i&#43;&#43;){</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(i&gt;=20&amp;&amp;i&lt;=30)</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aList.remove(i);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">但我们还可以直接通过subList来实现：</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 bList=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;(data);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bList.subList(20, 30).clear();</span></span></div>
</div>
</div>

            <div>
                作者：shiling_02404 发表于2014/12/16 9:24:38 <a href="http://blog.csdn.net/shiling_02404/article/details/41956133">原文链接</a>
            </div>
            <div>
            阅读：130 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41956133#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(6)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41732605</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41732605</guid>
        <author>shiling_02404</author>
        <pubDate>2014/12/5 0:15:52</pubDate>
        <description><![CDATA[
            
<p></p>
<div>
<p style="orphans:2; widows:2">60.性能考虑，数组是首选</p>
<p style="orphans:2; widows:2">在性能要求比较高的场景中考虑使用数组替代集合。</p>
<p style="orphans:2; widows:2"><br>
</p>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">61.若有必要，使用变长数组</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">java中的数组是定义的，一旦经过初始化声明就不可改变长度，这在实际使用中非常不方便。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">事实上，可以通过对数组扩容“婉转”地解决该问题</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">例如：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">&nbsp;<strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">expandCapacity</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">datas</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">newLen</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">newLen</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">newLen</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;0?0:</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">newLen</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Arrays</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>copyOf</em></span><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">datas</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">newLen</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">62.警惕数组的浅拷贝</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">这里说的是数组中的元素没有实现Serializable接口，但是通过copyOf方法产生的数组是一个浅拷贝，这与序列化的浅拷贝完全相同。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">也就是：基本类型是直接拷贝&#20540;，其他都是拷贝引用地址。需要说明的是，数组的clone方法也是与此相同的，同样是浅拷贝，而且集合的clone方法也都是浅拷贝，需要在拷贝时多留心了</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">63.在明确的场景下，为集合指定初始容量</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">这里首先说的是针对ArrayList，在使用的时候，如果场景确定，比如一个班的学生，一般也都是50个左右。在初始化时，可直接指定ArrayList的长度为50*1.5=75,为什么是1.5？查看ArrayList的add方法中的</span><span style="background-color:rgb(239,239,239); font-size:9pt; color:rgb(43,145,175); font-family:Consolas">ensureCapacity方法，源码如下：<br>
</span>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">ensureCapacity</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt">&nbsp;<strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>modCount</em></span><span style="font-size:9pt">&nbsp;&#43;=
 1;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">i
 =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span><span style="font-size:9pt">.</span>&nbsp;<span style="font-size:9pt"><em>length</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&lt;=
 i)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Object</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">[]
 arrayOfObject =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span>&nbsp;<span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">j
 = i * 3 / 2 &#43; 1;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;(j
 &lt;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span><span style="font-size:9pt">&nbsp;=&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Arrays</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>copyOf</em></span><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF">&nbsp;<span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt">&nbsp;<em>elementData</em></span><span style="font-size:9pt">,
 j);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">源码中扩容1.5倍&#43;1，这种方式最极端的情况也就是浪费1/3,比2.5或3.5位扩容浪费少。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">源码中elementData的默认长度是10，也就是说，在我们不指定ArrayList容量的情况下，默认声明的ArrayList容量是10</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">Vector扩容与ArrayList有点不同：源码如下：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>private</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">ensureCapacityHelper</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt">&nbsp;<strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">i
 =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span><span style="font-size:9pt">.</span>&nbsp;<span style="font-size:9pt"><em>length</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&lt;=
 i)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Object</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">[]
 arrayOfObject =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span>&nbsp;<span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">j
 = (</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>capacityIncrement</em></span><span style="font-size:9pt">&nbsp;&gt;
 0) ? i &#43;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>capacityIncrement</em></span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: i * 2;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;(j
 &lt;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j =&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramInt</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>elementData</em></span><span style="font-size:9pt">&nbsp;=&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Arrays</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>copyOf</em></span><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF">&nbsp;<span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt">&nbsp;<em>elementData</em></span><span style="font-size:9pt">,
 j);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Vector提供了一个递增步长（capacityIncrement变量），不设此&#20540;，则是容量翻倍，设置了的话，则是每次要增加的长度。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">其他集合，如HashMap是按照倍数增加的，Stack继随自Vector，所以采用的是与其相同的扩容原则。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">64.多种最&#20540;算法，适时选择</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">这里主要针对求集合的一些最&#20540;，例如最大&#20540;，最小&#20540;，第二最大&#20540;等类&#20284;的情况下。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">虽然我们可以自己写冒泡算法，或是将集俣先sort一下，再直接取出来，但还可以利用集合之间的转换来实现</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">例如：取出一个班组的第二高分：</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getSecond</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>Integer</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">data</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 dataList=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Arrays</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.</span><span style="font-size:9pt"><em>asList</em></span><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt">data</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>TreeSet</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">Integer</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;
 ts=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt">&nbsp;<strong>new</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">TreeSet</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B">&nbsp;<span style="font-size:9pt">Integer</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;(dataList);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">ts.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">lower</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(ts.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">last</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">//test</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><br>
</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Integer</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">[] testArr=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Integer</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]{22,45,12,122,542,542,345,22};</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">second=</span><span style="font-size:9pt"><em>getSecond</em></span><span style="font-size:9pt">(testArr);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(second);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">由于数组不能直接剔除重复数据，但Set集合却是可以的，而且Set的子类TreeSet还能自动排序，所以通过上面的getSecond方法，即可得出结果。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">总之一句话：最&#20540;计算时使用集合最简单，使用数组性能最优。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">65.避开基本类型数组转换列表陷阱</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">这里主要说的就是Arrays.asList方法，需要特别注意，原始类型数组不能做为asList的输入参数，否则会引起程序逻辑混乱。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">Arrays.asList的方法说明：输入一个变长参数，返回一个固定长度的列表。</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">源码如下：</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt">&nbsp;<strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">List</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B">&nbsp;<span style="font-size:9pt"><strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">asList</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramArrayOfT</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ArrayList</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">paramArrayOfT</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">由于基本类型是不能泛型化的，也就是说8个基本类型不能作为泛型参数，要想作为泛型参数就必须使用其所对应的包装类型，那下面的例子：</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">data[]={1,2,3,4,5};</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><u>List</u></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">list2=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Arrays</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt; background-color:rgb(239,239,239)"><em>asList</em></span>&nbsp;<span style="font-size:9pt">(data);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;列表中元素数量是：&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;list2.size());</span></span><span style="font-family:Consolas; font-size:10px; color:#008000">&nbsp;<span style="font-size:9pt">//结果是1</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;元素类型是：&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;list2.get(0).getClass());</span></span><span style="font-family:Consolas; font-size:10px; color:#008000">&nbsp;<span style="font-size:9pt">//class
 [I</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">为什么没有编译报错？</span></span></div>
</div>
</div>
</div>
</div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">在java中，数组是一个对象，它是可以泛型化的，也就是说我们的例子是把一个int类型的数组作为了T的类型，所以转换后在List中就只有一个类型为int数组的元素了。</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">之所以打印出&quot;class [I&quot; 是因为Array是属于java.lang.reflect包的，它是通过反射访问数组元素的工具类，在java中任何一个数组的类都是&quot;[I&quot;,究其原因是就是Java并没有定义数组这一个类，它是在编译的时候生成的，是一个特殊的类。</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">所以只需将例子中的数组修正为包装类型即可。</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">66.asList方法产生的List对象不可更改</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">这是因为Arrays.asList中生成的ArrayList类（源码见上面65),并非java.utils.ArrayList,而是java.utils.Arrays工具类的一个内置类。也没有提供add方法。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">所以除非你的list只用于只读，否则需要特别注意通过Arrays.asList生成的list对象</span></div>
</div>
<p><br>
</p>

            <div>
                作者：shiling_02404 发表于2014/12/5 0:15:52 <a href="http://blog.csdn.net/shiling_02404/article/details/41732605">原文链接</a>
            </div>
            <div>
            阅读：244 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41732605#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(5)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41526669</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41526669</guid>
        <author>shiling_02404</author>
        <pubDate>2014/11/26 23:14:17</pubDate>
        <description><![CDATA[
            
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div>
<div align="left"><span style="font-family:Consolas; font-size:12px">49.推荐覆写toString方法</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">相对于原始的，覆写后方便识别。</span></div>
<div align="left"><br>
</div>
<div align="left"><span style="font-family:Consolas; font-size:12px">50.使用package-info 类为包服务</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">package-info是java中的一处特殊类，主要体现在三个方面：</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（1）它不能随便被创建</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（2）它服务的对象很特殊</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（3）package-info不能有实现代码</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">作用表现在以下三个方面：</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（1）声明友好类和包内访问常量</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（2）为在包上标注注解提供便利</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（3）提供包的整体注释说明</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">示例：</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">//PkgAnnotatioin.java</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Target</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt; background-color:rgb(239,239,239)">ElementType</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.PACKAGE)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Retention</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">RetentionPolicy</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.RUNTIME)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>@interface</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">PkgAnnotatioin</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">//package-info.java</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt"><u>PkgAnnotatioin</u></span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>package</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">PackageinfoTest;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//这里是包类，声明一个包使用的公共类，强调的是包访问权限</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>class</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>PkgClass</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">test</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//包常量，只运行包内访问，适用于分“包”开发</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>class</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>PkgConst</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>final</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">PACAKGE_CONST=</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;ABC&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
</div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">// client.java</span></span></div>
<div align="left">
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//</span>&nbsp;<span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 method stub</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">pkgNameString=</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;PackageinfoTest&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Package</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">pkg=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Package</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>getPackage</em></span><span style="font-size:9pt">(pkgNameString);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Annotation</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]
 annotations=pkg.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getAnnotations</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Annotation</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">an:annotations){</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(an</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>instanceof</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">PkgAnnotatioin</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;Hi,i
 am here@&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>PkgConst</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.PACAKGE_CONST);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">51.不要主动进行垃圾回收</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">主动进行垃圾回收是一个非常危险的动作，因为System.gc要停止所有的响应（Stop the world) ，才能检查内存中是否有可回收的对象。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">即使经常出现内存溢出也不要调用，内存溢出是可分析的，是可以查找出原因的，GC可不是一个好招数。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">52.推荐使用String直接量赋&#20540;</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">利用字符串常量池（String Pool 或String Constant Pool 或String Literal Pool),它的创建机制是这样的：创建一个字符串时，首先检查池中是否有字面&#20540;相等的字符串，如果有，则不再创建，直接返回池中该对象的引用，若没有则创建之，然后放到池中，并返回创建对象的引用。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">另：经过intern处理后的String与直接量是同一个对象。intern会检查当前的对象在对象池中是否有字面&#20540;相同的引用对象，如果有则返回池中对象，如果没有则放置到对象池中，并返回当前对象。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">问题：对象放到池中会不会产生线程安全问题？java已经考虑到了，String类是一个不可变（Immutable)对象其实有两层意思：一是String是final类，不可继承，不可能产生一个String的子类；二是在String类提供的所有方法中，如果有String返回&#20540;，就会新建一个String对象，不可对原对象进行修改，这也就保证了原对象是不可改变的。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">是不是要考虑垃圾回收问题？不用考虑了，虽然java的每个对象都保存在堆内存中，但是字符串池非常特殊，它在编译期已经决定了其存在jvm的常量池（Constant Pool),垃圾回收器是不会对它进行回收的</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">53.注意方法中传递的参数要求</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">本建议其实主要说的是在编写代码时，要注意java提供的方法参数说明。例子中提到的replaceAll方法中第一个参数是正则表达式，这在我们使用的时候，要特别注意，一些特殊的符号，在正则表达式中代表特殊的含议，不再是简单的字符了</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">54.正确使用String\StringBuffer\StringBuilder</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">String 类是不可改变的量，也就是创就不能再修改了，比如创建了一个“abc”这样的字符串，那么它在内存中永远都会是“abc”,即使想通过String提供的方法来尝试修改，也是要么创建一个新的字符串对象，要么返回自己；</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">StringBuffer是一个可变字符序列，它与String一样，在内存中保存的都是一个有序的字符序列(char类型的数组）,不同点是StringBuffer对象的&#20540;是可改变的；</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">StringBuilder与StringBuffer基本相同，都是可变字符序列，不同点是：StringBuffer是线程字全的，StringBuilder是线程不安全的，通过查看两者的源码，就会发现在StringBuffer的方法前都有synchronized关键字，这也是StringBuffer在性能上远低于StringBuilder的原因。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在性能上，由于String类的操作大部份情况下都是产生新的String对象，而StringBuffer和StringBuilder只是一个字符数组的扩容而已，所能String的操作远慢于StringBuffer和StringBuilder的操作</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">不同的业务场景下使用不同的字符序列：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（1）使用String类的场景：在字符串不经常变化的场景中</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（2）使用StringBuffer类的场景：在频繁进行字符串的运算（如拼接、替换、删除等），并且运行在多线程的环境中，如xml解析、http参数解析和封装等</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（3）使用StringBuilder类的场景：在频繁进行字符串的运算</span><span style="font-family:Consolas; font-size:12px">（如拼接、替换、删除等）,并且运行在单线程环境中，如Sql语句的拼装、json封装等</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">55.注意字符串的位置</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">eg:</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">public static void main(String[] args){</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">String str1=1&#43;2&#43;&quot;apples&quot;;//结果是3apples</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">String str2=&quot;apples&quot;&#43;1&#43;2;//结果是apples12</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">}</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">java中对加号的处理机制：在使用加号进行计算的表达式中，只要遇到String字符串，则所有的数据都会转换为String类型进行拼接，如果是原始数据，则直接拼接，如果是对象，则调用toString方法的返回&#20540;然后进行拼接。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">注意：在“&#43;”表达式，String字符串具有最高优先级</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">56.自由选择字符串拼接方法</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">对一个字符串进行拼接有三种方法：加号、concat方法及StringBuilder(或StringBuffer)的append方法</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">可以查看一个concat方法源码及append方法源码</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在大量的测试时发现append的效率最高</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">虽然如此，但大多数情况下我们都可以使用加号（友好、方便），系统80%的性能消耗在20%的代码上（这才是真正关注的重点）</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">57.推荐在复杂字符串操作中使用正则表达式</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">正则表达式威力强大，但难以控制</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">58.强列建议使用UTF编码</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">59.对字符串排序持一种宽容的心态</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">英文字符串、中文字符串排序</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">中文中可以使用Collator 、或其他一些开源拼音排序...</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<br>
</div>
</div>
</div>
<br>
</div>

            <div>
                作者：shiling_02404 发表于2014/11/26 23:14:17 <a href="http://blog.csdn.net/shiling_02404/article/details/41526669">原文链接</a>
            </div>
            <div>
            阅读：176 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41526669#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(4)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41478469</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41478469</guid>
        <author>shiling_02404</author>
        <pubDate>2014/11/25 10:56:48</pubDate>
        <description><![CDATA[
            
<div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">31.在接口中不要存在实现代码</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">接口是一个契约，不仅仅约束着实现者，同时也是一个保证，保证提供的服务（常量、方法）是稳定、可靠的，如果把实现代码写在接口中，那接口就绑定了可能变化的因素，这就会导致 实现不再稳定和可靠，是随时都可能被抛弃、被更改、被重构的。所以，接口中虽然可以有实现，但应该避免使用。</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">32.静态变量一定要先声明后再赋&#20540;</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">下面的代码，输出结果为1</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt; background-color:rgb(238,238,238)"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt; background-color:rgb(238,238,238)"><strong>class</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt; background-color:rgb(238,238,238)">OtherClient</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt; background-color:rgb(238,238,238)">{</span></span></div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>&nbsp; &nbsp; &nbsp; &nbsp;static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;<span style="font-size:9pt"><em>a</em></span><span style="font-size:9pt">=100;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><em>a</em></span>&nbsp;<span style="font-size:9pt">=1;</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span><span style="font-size:9pt"><em>a</em></span><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
</div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">下面的代码，输出结果为100</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt; background-color:rgb(238,238,238)"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt; background-color:rgb(238,238,238)"><strong>class</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt; background-color:rgb(238,238,238)">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt; background-color:rgb(238,238,238)">OtherClient</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt; background-color:rgb(238,238,238)">{</span></span></div>
<div align="left">&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span><span style="font-size:9pt"><em>a</em></span>&nbsp;<span style="font-size:9pt">=1;</span></span></div>
</div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>&nbsp; &nbsp; &nbsp; &nbsp;static</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;<span style="font-size:9pt"><em>a</em></span><span style="font-size:9pt">=100;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span><span style="font-size:9pt"><em>a</em></span><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
</div>
</div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">这是为什么呢？</span></span></div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">这要从静态变量的诞生说起了，静态变量是类加载时被分配到数据区(Data Area)的，它在内存中只有一个拷贝，不会被分配多次 ，其后的所有赋&#20540;操作都是&#20540;改变，地址则保持不变。jvm初始化变量是先声明空间，然后再赋&#20540;的，也就是说： int a=100; 在jvm中是分开执行的，等价于int a; a=100; 静态变量是在类初始化时首先被加载的，JVM会去查找类中所有的静态声明，然后分配空间，注意这时只是完成了地址空间的分配，还没有赋&#20540;，之后jvm会根据类中静态赋&#20540;（包括静态赋&#20540;和静态块赋&#20540;）的先后顺序来执行。</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">33.不要覆写静态方法</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在java中可以通过覆写（Override)来增加或减弱父类的方法和行为，但覆写是针对非静态方法（也叫实例方法，只有生成实例才能调用的方法）的，不能针对静态方法（static修饰的方法，也叫类方法），why?</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">我们知道一个实例对象有两个类型：表面类型（Apparent Type)和实际类型（Actual Type),表面类型是声明时的类型，实际类型是对象产生时的类型。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">对于非静态方法，它是根据对象的实际类型来执行的。而对于静态方法来说比较特殊，首先静态方法不依赖实例对象，它是通过类名访问的；其次，可以通过对象访问静态方法，如果是通过对象调用静态方法，JVM则会通过对象的表面类型查找到静态方法的入口，继而执行之。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">静态方法不能覆写，但是可以隐藏。隐藏的目的是为了抛弃父类静态方法，重现子类方法，也就是期望父类的静态方法不要破坏子类的业务行为；而覆写则是将父类的行为增加或减弱，延续父类的职责。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">需要说明的是：实例对象访问静态方法或静态属性不是好习惯。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">34.构造函数尽量简化</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">子类实例化时 ，会首先初始化父类（注意这里是初始化，可不是生成父类对象），也就是初始化父类的变量，调用父类的构造函数，然后才会初始化子类的变量，调用子类自己的构造函数，最后生成一个实例对象。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">执行父类无参构造函数，也就是子类的有参构造函数中默认包含了super()方法</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">35.避免在构造函数中初始化其他类</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">36.使用构造代码块精炼程序</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在java中一共有四种类型的代码块：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（1）普通代码块：就是在方法后面使用{}括起来的代码片段，它不能单独执行，必须通过方法名调用执行</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（2）静态代码块：static修饰，并使用{}括起，用于静态变量的初始化或对象创建前的环境初始化。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（3）同步代码块：synchronized修饰，并使用{}括起，它表同一时间只能有一个线程进入到该方法块中，是一种多线程保护机制。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（4）构造代码块：在类中没有任何的前缀或后缀，并使用{}括起来的代码片段。关于构造代码块，我们知道代码块不具有独立执行的能力，那么编译器是如何处理构造代码块的呢？很简单，编译器会把构造代码块插入到每个构造函数的最前端。构造代码块会在每个构造函数内首先执行（需要注意的是：构造代码块不是在构造函数之前运行，它依托于构造函数的执行）</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">可将构造代码块应用到如下场景中：1）初始化实例变量 2）初始化实例环境</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">37.构造代码块会想你所想</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在上一个建议是编译器会把构造代码块插入到每一个构造函数中，但有一个例外的 情况没有说明：如果遇到this关键字（也就是构造函数调用<span style="color:#EB0073">自身其他</span>的构造函数时）则不插入构造代码块。还有一点需要说明，super不会这样处理，编译器把构造代码块插入到super方法之后执行。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">38.使用静态内部类提高封装性</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">java中的嵌套类（nested class)分为两种：静态内部类（也叫静态嵌套类，static nested class)和内部类（inner class)，只有在是静态内部类的情况下才能把static修复符放在类前，其他任何时候static都是不能修饰类的。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">静态内部类：内部类，并且是静态（static修饰）的即为静态内部类</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">静态内部类主要有两个优点：加强了类的封装性和提高了代码的可读性</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">静态内部类与普通内部类有什么区别？</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（1）静态内部类不持有外部类的引用（静态内部类只可以访问外部类的静态方法和静态属性，普通内部类可以自由访问）</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（2）静态内部类不依赖外部类（普通内部类与外部类之间是相互依赖关系，内部类实例不能脱离外部类实例，也就是说它们是同生同死，而静态内部类是可以独立存在的，即使外部类消亡了，静态内部类还是可以存在的）</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（3）普通内部类不能声明 static的方法和变量&nbsp;</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">39.使用匿名类的构造函数</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">40.匿名类的构造函数很特殊</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">匿名类的构造函数特殊处理机制：一般类（也就是具有显示名字的类）的所有构造函数默认都是调用父类的无参构造函数的，而匿名类因为没有名字，只能由构造函数代码块代替，也就无所谓的有参和无参构造函数，它在初始化时直接调用父类的同参构造函数，然后再调用了自己的构造代码块。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">41.让多重继承成为现实</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">其实说的是通过内部类曲折解决问题</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">42.让工具类不可实例化</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">一般是通过设置构造函数为private访问权限，但是如果用户仍然要生成一个实例来访问（通过反射修改构造函数权限），隐藏问题可能爆发。那有没有更好的限制办法呢？有，即不仅仅设置成private访问权限，还抛异常，代码如下：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">public class UtilsClass{</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">private UtilsClass(){</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">throw new Error(&quot;不要实例化我！&quot;);</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">}</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">}</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">本建议主要说的是，如果一个类不允许实例化，就要保证“平常”渠道都不能实例化它。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">43.避免对象的浅拷贝</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">我们知道一个类实现了Cloneable接口就表示它具备了被拷贝的能力，如果再覆写clone()方法就完全具体拷贝能力。拷贝是在内存中进行的，所以在性能方面比直接通过new生成对象要快很多，特别是大对象的生成上，这会使性能提升非常显著。但要注意一个问题：浅拷贝（Shwdow Clone)存在对象属性拷贝不彻底的问题。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">例：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>class</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>implements</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Cloneable</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>private</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><em>name</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>private</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><em>father</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_name</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size:9pt"><em>name</em></span><span style="font-size:9pt">=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_name</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_name</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_parent</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;<span style="font-size:9pt"><em>name</em></span><span style="font-size:9pt">=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_name</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;<span style="font-size:9pt"><em>father</em></span><span style="font-size:9pt">=</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">_parent</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><em>name</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">name</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>name</em></span>&nbsp;<span style="font-size:9pt">=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">name</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><em>father</em></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">father</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>this</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt"><em>father</em></span>&nbsp;<span style="font-size:9pt">=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">father</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Override</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">clone</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">person=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>try</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person=(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>super</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.</span><span style="font-size:9pt; background-color:rgb(239,239,239)">clone</span><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>CloneNotSupportedException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">person;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//test1</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">f=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;Father
 A&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">s1=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;大儿子&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,f);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">s2=s1.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">clone</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s2.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setName</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;小儿子&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(s1.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;的父亲&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;s1.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(s2.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;的父亲&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;s2.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//test2</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">fathPerson=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;Father
 B&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">son1=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;big
 son&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,fathPerson);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">son2=son1.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">clone</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;son2.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setName</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;little
 son&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//son1认干爹</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;son1.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setName</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;gan
 die C&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(son1.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;的父亲&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;son1.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//结果显示son2的父亲也是</span>&nbsp;<span style="font-size:9pt"><u>gan</u></span>&nbsp;<span style="font-size:9pt">die
 c了，Father B两个儿子都没了</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(son2.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;的父亲&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;son2.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
</div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">分析：我们知道所有类都继承自Object，Object提供了一个对象拷贝的默认方法 ，即上面代码中的super.clone方法 ，但是该方法是有缺陷的，它提供的是一种浅拷贝方式，也就是说它并不会把对象的所有属性全部拷贝一份，而是有选择性的拷贝，它的拷贝规则如下：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（1）基本类型：如果变量是基本类型，则拷贝其&#20540;，比如int,float等。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（2）对象：如果变量是一个实例对象，则拷贝地址引用，也就是说此时新拷贝出的对象与原对象共享该实例变量，<span style="color:#EB0073">不受访问权限的权限。（有点变态）</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">（3）String字符串：这个比较特殊，拷贝的也是一个地址，是个引用，但在修改时，它会从字符串池（string pool)中重新生成新的字符串，原有的字符串对象保持不变，在此处我们可以认为String是一个基本类型。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">上面示例代码的原因就是第（2）点所致。</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">修正：</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@Override</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">clone</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">p=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>try</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#AB2525"><span style="font-size:9pt">Person</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>super</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.clone();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//基于拷贝出的对象p,获取其父亲的姓名，生成新的对象new
 Person，做为p的父亲</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">setFather</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Person</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(p.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getFather</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">()));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>CloneNotSupportedException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">p;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">44.推荐使用序列化实现对象的拷贝</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">被拷贝的类只要实现Serializable接口即可，不需要任何实现，当然serialVersionUID常量还是要加上去的。</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">例如：</span></div>
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">@SuppressWarnings</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;unchecked&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&lt;</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>extends</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Serializable</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&gt;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">clone</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">obj</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">cloneObj=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>null</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>try</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//读取对象字节数据</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ByteArrayOutputStream</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">baos=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ByteArrayOutputStream</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ObjectOutputStream</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">oos=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ObjectOutputStream</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(baos);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oos.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">writeObject</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">obj</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oos.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">close</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//分配内存空间，写入原始对象，生成新对象</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ByteArrayInputStream</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">bais=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ByteArrayInputStream</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(baos.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">toByteArray</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ObjectInputStream</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">ois=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ObjectInputStream</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(bais);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cloneObj=(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#885D3B"><span style="font-size:9pt"><strong>T</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)ois.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">readObject</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ois.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">close</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Exception</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>return</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><u>cloneObj</u></span><span style="font-size:9pt">;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">用此方法进行对象拷贝时需要注意两点：</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">（1）对象的内部属性都是可序列化的</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">如果有内部属性不可序列化，则会抛出序列化异常，这会让调试者很纳闷：生成一个对象怎么会出现序列化异常呢？从这一点考虑，还需要将上面的这个工具方法的异常进行细化处理</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">（2）注意方法和属性的特殊修饰符。在建议11，12点中有提到</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">final、static、transient（瞬时变量，不进行序列化的变量）</span></div>
<div align="left"><span style="font-family:Consolas; font-size:12px">当然还有一个更简单的办法，使用Apache下的commons工具包中的SerializationUtils类</span></div>
</div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">45.覆写equals方法时不要识别不出自己</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">在这里此点主要是用来说明覆写equals方法时，不要违背equals方法的自反性原则：对于任何非空引用x,x.equals(x) 应该返回true</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">46.equals应该考虑null&#20540;情景</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">47.在equals中使用getClass进行类型判断</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">总之这里就一句话，覆写equals时，建议使用getClass进行类型判断，而不要使用instance of&nbsp;</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px"><br>
</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">48.覆写equals方法必须覆写hashCode方法</span></div>
<br>
</div>

            <div>
                作者：shiling_02404 发表于2014/11/25 10:56:48 <a href="http://blog.csdn.net/shiling_02404/article/details/41478469">原文链接</a>
            </div>
            <div>
            阅读：193 评论：3 <a href="http://blog.csdn.net/shiling_02404/article/details/41478469#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(3)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41317253</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41317253</guid>
        <author>shiling_02404</author>
        <pubDate>2014/11/20 18:20:09</pubDate>
        <description><![CDATA[
            
<div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">21.用偶判断，不用奇判断</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">在判断奇偶的情况下，用偶来判断，例：i%2==0?&quot;偶&quot;:&quot;奇&quot;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">取余基础知识（模拟代码如下）：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public static int remainder(int dividend,int divisor){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">return dividend-dividend/divisor*divisor;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">22.用整数类型处理贷币</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//</span>&nbsp;<span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 method stub</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(10.00-9.60);</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">我们期望的结果是0.4，但打印出来的却是</span>0.40000000000000036</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
这是因为在计算机中浮点数有可能（注意是可能）是不准确的，它只能无限接近准确&#20540;，而不能完全精确。</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
在程序中，虽然我们可以通过对结果取整来或&#26684;式化来处理，如：</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NumberFormat</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">format=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">DecimalFormat</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;#.##&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(format.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">format</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(10.00-9.60));</span></span></div>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">但在大批量的加减乘除后结果会有很大的差距。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">要解决此问题，有两种方法：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（1）使用BigDecimal：专门为弥补浮点数无法精确认算的缺憾而设计的类，特别是与数据库Decimal类型的字段映身时，BigDecimal是最优的解决方案</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（2）使用整型：把参与运算的&#20540;扩大100倍，并转变为整型 ，然后在展现时再缩小100倍</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">23.不要让类型默认转换</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">此处讲的主要针对一些基本类型之间的转换，需要注意的一点是在java中是先运算然后再进行类型转换的。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">例如：public static finat int LIGHT_SPEED=30*1000*1000;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">在计算 long dis2=LIGHT_SPEED*60*8; 的时候，计算出来的dis2将会是一个负&#20540;。这是因为dis2的三个运算参数都是int类型，三者相乘的结果自然也是int类型，但是已经超过int的最大&#20540;（2147483647），越界了，变成了负&#20540;，再转换为long型时，结果还是负&#20540;。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">问题知道了，解决起来也很简单，只要加个小小的“L”即可，long dis2=LIGHT_SPEED*60L*8;在实际开发中，更通用的做法是主动声明式类型转化：long dis2=1L*LIGHT_SPEED*60*8;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">总之，基本类型转换时，使用主动声明方式减少不必要的bug</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">24.边界、边界，还是办界</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">主要是在一些数&#20540;的测试中要考虑到边界&#20540;可能出现的情况</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">25.不要让四舍五入亏了一方</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">主要说的是银行家舍入法则：四舍六入五考虑，五后非零就进一，五后为零看奇偶，五前为偶应舍去，五前为奇要进一。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">编码中可使用RoundingMode类提供的Round模式即可。如此处的银行家舍入法则对应的模式为RoundingMode.HALF_EVEN;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">26.提防包装类型的null&#20540;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">谨记一点：包装类型参与运算时，要做null校验</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">27.谨慎包装类型 的大小比较</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">在java中，“==”是用来判断两个操作数是否有相等关系的，如果是基本类型则判断&#20540;是否相等，如果是对象则判断是否是一个对象的两个引用，也就是地址是否相等。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">引申：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">java中的数据类型，可分为两类：&nbsp;<br>
（1）.基本数据类型，也称原始数据类型。byte,short,char,int,long,float,double,boolean&nbsp;<br>
&nbsp; 他们之间的比较，应用双等号（==）,比较的是他们的&#20540;。&nbsp;<br>
（2）.复合数据类型(类)&nbsp;<br>
&nbsp; 当他们用（==）进行比较的时候，比较的是他们在内存中的存放地址，所以，除非是同一个new出来的对象，他们的比较后的结果为true，否则比较后结果为false。 JAVA当中所有的类都是继承于Object这个基类的，在Object中的基类中定义了一个equals的方法，这个方法的初始行为是比较对象的内存地 址，但在一些类库当中这个方法被覆盖掉了，如String,Integer,Date在这些类当中equals有其自身的实现，而不再是比较类在堆内存中的存放地址了。<br>
&nbsp; 对于复合数据类型之间进行equals比较，在没有覆写equals方法的情况下，他们之间的比较还是基于他们在内存中的存放位置的地址&#20540;的，因为Object的equals方法也是用双等号（==）进行比较的，所以比较后的结果跟双等号（==）的结果相同。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">28.优先使用整型池</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">整型池，在整型的装箱动作valueOf方法中，IntegerCache.cache[i&#43;offset]; &nbsp;这里的cache是IntegerCache内部类的一个静态数组，容纳的是-128到127之间的Integer对象。能过valueOf产生包装对象时，如果int参数在-128至127之间，则直接从整型池中获得对象，不在该范围的int类型 则通过new生成包装对象。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">总结：通过包装类型的valueOf生成包装实例可以显著提高空间和时间性能。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">29.优先选择基本类型</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">自动装箱有一个重要的原则：基本类型可以先加宽，再转变为宽类型的包装类型，但不能直接转变成宽类型的包装类型。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">以下程序编译是通不过的：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">i
 =100;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;<span style="font-size:9pt"><em><u>f</u></em></span><span style="font-size:9pt">(i);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">f</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>Long</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">l</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
</div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">30.不要随便设置随机种子</span></span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<span style="font-family:Consolas; font-size:12px">java.util.Random的有参构造，运行结果，计算机不同输出的随机数不同，但是有一点是相同的：在同一台机器上，甭管运行多少次，所打印的随机数都是相同的，也就是说第一次运行，会打印出三个随机数，第二次运行还是打印出这三个随机数，只要在同一台硬件机器上，就永远都会打印出相同的随机数，问题在哪？</span></div>
<div align="left" style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left">
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//test1</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Random</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">random=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Random</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">j=1;j&lt;4;j&#43;&#43;){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;第&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;j&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;次:&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;random.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">nextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt"><a>//test2</a>&nbsp;在同一台机器上，不管运行多少次，打印出相同的随机数</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Random</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">r=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Random</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(1000);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">j=1;j&lt;4;j&#43;&#43;){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;第&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;j&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;次:&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;r.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">nextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt"><a>//test3</a>&nbsp;打印出不相同的随机数</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Random</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt"><u>random2</u></span><span style="font-size:9pt">=</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Random</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>for</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">j=1;j&lt;4;j&#43;&#43;){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;第&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;j&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;次:&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;random2.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">nextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(1001));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">那是因为产生随机数的种子被固定了，在java中，随机数的产生取决于种子，随机数和种子之间的关系遵从以下两个规则：1）种子不同，产生不同的随机数 2）种子相同，即使实例不同也产生相同的随机数。</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">参看Random的源码，Random类的默认种子（无参构造）是System.nanoTime()的返回&#20540;。这个&#20540;是距离某一个固定时间点的纳秒数，不同的操作系统和硬件有不同的固定时间点，也就是说不同的操作系统其纳称&#20540;是不同的，而同一个操作系统纳秒&#20540;也会不同，随机数自然也就不同了。（顺便说下，System.nanoTime不能用于计算日期，那是因为固定的时间点是不确定的，纳秒&#20540;可能是负&#20540;，这与System.currentTimeMills不同。</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">而new Random(1000),显示设置了随机种子为1000，运行多次，虽然实例不同，但都会获得相同的三个随机数。另：Math.Random()原理与其相同</span></span></div>
</div>
</div>
</div>

            <div>
                作者：shiling_02404 发表于2014/11/20 18:20:09 <a href="http://blog.csdn.net/shiling_02404/article/details/41317253">原文链接</a>
            </div>
            <div>
            阅读：184 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41317253#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(2)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41261863</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41261863</guid>
        <author>shiling_02404</author>
        <pubDate>2014/11/18 23:44:16</pubDate>
        <description><![CDATA[
            
<div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">15.break万万不可忘</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">16.易变业务使用脚本语言编写</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（脚本语言是一种解释型语言,不需要编译成二进制代码，也不需要像java一样生成字节码，它的执行是依靠解释器解释的，在此在运行期变更代码非常容易，而且不需要停止应用）</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">//model.js</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">function formula(var1,var2){<br>
return var1&#43;var2*factor;<br>
}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">//client.java</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp; &nbsp; &nbsp; &nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>public</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>static</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>void</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">main</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>String</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">[]&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">args</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px; color:#010101"><span style="font-size:9pt"><br>
</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//&nbsp;</span><span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 method stub</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//获得一个</span><span style="font-size:9pt">&nbsp;<u>Js</u></span><span style="font-size:9pt">的执行引擎</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ScriptEngine</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">engine=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ScriptEngineManager</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">().</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">getEngineByName</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;javascript&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//建立上下文变量</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Bindings</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;bind=engine.createBindings();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bind.put(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;factor&quot;</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">,
 1);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//绑定上下文，作用域是当前引擎范围</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;engine.setBindings(bind,&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">ScriptContext</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.ENGINE_SCOPE);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Scanner</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">inputScanner=</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt">&nbsp;<strong>new</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Scanner</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">.in);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>while</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(inputScanner.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">hasNextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">())
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">first=inputScanner.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">nextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>int</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">sec=inputScanner.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">nextInt</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;your
 input params are:&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;first&#43;</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;,&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;sec);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>try</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//执行</span><span style="font-size:9pt"><u>js</u></span>&nbsp;<span style="font-size:9pt">代码</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;engine.eval(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>new</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">FileReader</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;c:/model.js&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">));</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>FileNotFoundException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//&nbsp;</span><span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 catch block</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ScriptException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//&nbsp;</span><span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 catch block</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//是否可调用方法</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>if</strong></span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(engine&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>instanceof</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;</span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Invocable</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">){</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Invocable</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;in=(</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">Invocable</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">)engine;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Double</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">result;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>try</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">{</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//执行</span><span style="font-size:9pt"><u>js</u></span>&nbsp;<span style="font-size:9pt">中的函数</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = (</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>Double</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">)in.invokeFunction(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;formula&quot;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">,
 first,sec);</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>System</em></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">.out.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">println</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#A31515"><span style="font-size:9pt">&quot;calc
 result:&quot;</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&#43;result.</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF">&nbsp;<span style="font-size:9pt">intValue</span></span><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">());</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>ScriptException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//&nbsp;</span><span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 catch block</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span></span><span style="font-family:Consolas; font-size:10px; color:#0000FF"><span style="font-size:9pt"><strong>catch</strong></span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">(</span></span><span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt"><em>NoSuchMethodException</em></span></span>&nbsp;<span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">e)
 {</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#008000"><span style="font-size:9pt">//&nbsp;</span><span style="font-size:9pt"><strong>TODO</strong></span>&nbsp;<span style="font-size:9pt">Auto-generated
 catch block</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.</span></span>&nbsp;<span style="font-family:Consolas; font-size:10px; color:#2B91AF"><span style="font-size:9pt">printStackTrace</span></span><span style="font-family:Consolas; font-size:10px">&nbsp;<span style="font-size:9pt">();</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div>
<div align="left"><span style="font-family:Consolas; font-size:10px"><span style="font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">17.慎用动态编译</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">注意以下几点：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（1）在框架中谨慎使用</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（2）不要在要求高性能的项目使用</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（3）动态编译要考虑安全问题</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（4）记录动态编译过程</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">18.避免instanceof非预期结果</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">instanceof 是一个简单的二元操作符，它是用来判断一个对象是否是一个类实例的，其操作类&#20284;于&gt;=、==</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">注意：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">只要instanceof 关键字的左右两个操作数有继承或实现关系，就可以编译通过，具体返回true还是false就必须看二者的继承或实现关系;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">instanceof 只能用于对象的判断，不能用于基本类型的判断，例：'A' instanceof Character 这种编译不通过，因为'A'是一个char类型 （基本类型）;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">若左操作数是null,结果就直接返回false;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">19.断言绝对不是鸡肋</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">两个特性：（1）assert默认是不开启的 （2）assert抛出的异常Assertion Error是继承自Error</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">assert虽然是做断言的，但不能将其等价于if...else...这样的条件判断，它在以下两种情况不可使用：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（1）在对外公开的方法中 （2）在执行逻辑代码的情况下</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">那在什么情况下能够使用assert呢？一句话：按照正常执行逻辑不可能到达的代码区域可以放置 assert.具体分为三种情况：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（1）在私有方法中放置assert作为输入参数的校验</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（2）流和控制中不可能达到的区域</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（3）建立程序探针</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">20.不要只替换一个类</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">主要是针对常量接口</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">对于final修饰的的基本类型和String类型，编译器会义为它是稳定态（Immutable Status),所以在编译时就直接编译到字节码中了，避免了在运行期引用（Run-time Reference),以提高代码的执行效率。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">而对于final修饰的类（即非基本类型），编译器认为它是不稳定态（Mutable Status),在编译时建立的则是引用关系（该类型也叫做Soft Final),如果Client类引入的常量是一个类或实例，即使不重新编译也会输出最新&#20540;。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">注意：发布应用时禁止使用类文件替换方式，整体war包发布才是万全之策</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<br>
</div>

            <div>
                作者：shiling_02404 发表于2014/11/18 23:44:16 <a href="http://blog.csdn.net/shiling_02404/article/details/41261863">原文链接</a>
            </div>
            <div>
            阅读：247 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41261863#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]读改善java程序的151个建议(1)]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/41225995</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/41225995</guid>
        <author>shiling_02404</author>
        <pubDate>2014/11/17 23:49:59</pubDate>
        <description><![CDATA[
            
<div><span style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">1.不要在常量和变量中出现容易混淆的字母</span>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp;例如：L 的小写l &nbsp;所以字母l作为长整型时务必大写</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">2.务必要让常量的&#20540;在运行期间保持不变</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;interface Const{</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;//这还是常量吗？</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;public static final int RAND_CONST=new Random().nextInt();</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">3.三元操作符的类型务必保持一致</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public class Client{</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public static void main(Stirng[] args){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;int i=80;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;String s=String.valueOf(i&lt;100?90:100);</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;String s1=String.valueOf(i&lt;100?90:100.0);</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">&nbsp; &nbsp; &nbsp;System.out.println(&quot;两者是否相等:&quot;&#43;s.equals(s1));</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">结果是false</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">这里涉及到三元操作符类型的转换规则：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">若两个操作数不可转换，则不做转换，返回&#20540;为Object类型。若两个操作数是明确类型的表达式（比如变量），则按照正常的二进制数字来转换，int类型转换为long类型，long类型转换为float类型等。若两个操作数中有一个是数字S,另外一个是表达式，且类型标识为T,那么，若数字S在T的范围内，则转换为T类型；若S超出了T类型的范围，则T转换为S型；若两个操作数都是直接量数字，则返回&#20540;类型为范围较大者。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">保证三元操作符中的两个操作数数类型一致，即可减少可能错误的发生。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">4.避免带有变长参数的方法重载</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">java5及之后引入变长参数（vargs),变长参数也要遵循一定规则，比如，变长参数必须是方法中的最后一个参数；一个方法不能定义多个变长参数等</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">例如：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public void calPrice(int price,int discount){.....}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public void calPrice(int price,int...discounts){.....}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">重载，并且第二个方法的参数范畴覆盖了第一个方法的参数范畴，那问题就来了，对于calPrice(49900,75)这样的计算到底是调用哪一个方法来处理呢？ 这个75即可以编译成int类型的75，也可以编译成int数组{75},即只包含一个元素的数组。那到底该调用哪一个方法呢?结果是调用第一个方法，为什么？因为java在编译时，首先会根据参数 的数量和类型（这里是2个实参，都为int类型，注意没有转成int数组）来进行处理，也就是查找到第一个方法，而且确认它是否符合方法签名条件。那为什么会先根据2个int类型的实参而不是1个int类型、1个int数组类型的实参来查找方法呢？因为int是一个原生数据类型，而数组本身是一个对象，编译器想要“偷赖”，于是它会从最简单的开始“猜想”，只要符合编译条件即可通过。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">对于calPrice(49900,75,79)这种，因为只有第二个方法符合方法签名，很显然就是调用第二个了</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">5.别让null或空&#20540;威胁到变长方法</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">有时候需要指定null的具体类型</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">6.覆写变长方法也循规蹈矩</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">覆写的方法参数与父类相同，不仅仅是类型、数量，还包括显示形式</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">7.警惕自增的陷阱</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">int count=0;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">for(;;){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">cout=count&#43;&#43;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">count永远是0</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">8.不要让旧语法困扰你</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">goto 让它随风而去吧</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">9.少用静态导入</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">对于静态导入，一定要遵行2个规则：不使用*（星号）通配符，除非是导入静态的常量类（只包含常量的类或接口）；方法名是具有明确、清晰表象意义的工具类</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">10.不要在本类中覆盖静态导入的变量和方法</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">因为编译器有一个“最短路径”原则：如果能够在本类中查找到的变量、常量、方法，就不会至其他包或父类、接口中查找，以确保本类中的属性、方法优先。因此，如果要变更一个被静态导入的方法，最好的办法是在原始类中重构，而不是在本类中覆盖。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">11.养成良好习惯，显示声明UID</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">我们编写一个实现Serializable接口（序列化标志接口）的类，Eclipse马上就会给一个黄色警告：需要增加一个Serial Version ID。为什么要增加？</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">主要是为了避免序例化与反序例化的类不一致的情表，例如，如果原来的类增加了一些属性，序例化经过网络转输到消费者好边，再返序例化时，会报一个InvalidClassException异常，原因是序例化和反序例会所对应的类版本发生了变化，jvm不能所数据流转换为实例对象。那jvm是根据什么来判断一个类版本呢？就是通过Serial VersionUID,也叫做流标识符（Stream
 Unique Identifier),即类的版本定义，它可以显示声明也可以隐式声明。显示声明&#26684;式如下：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">private static final long serialVersionUID=XXXXXL;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">隐式声明则由编译器生成(过程复杂，基本上算出来的这个&#20540;是唯一的)</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">JVM在反序列化的时候，会比较数据流中的serialVersionUID与类的serialVersionUID是否相同，如果则认为类没有发生改变，可以把数据流load为实例对象，反之则不可以。抛个InvalidClassException.</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">手工加上serialVersionUID有一个好处，在添加了新属性后，由于我们没有改变serialVersionUID的&#20540;，仍可以兼容旧的版本。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">12.避免用序列化类在构造函数中为不变量（final)赋&#20540;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">反序例化的另一个规则：反序例化时构造函数不会被执行。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">例：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public class Person implements Serializable{</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">private static final serialVersionUID=3452345234L;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><a>//</a>不变量初始不赋&#20540;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public final String name;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><a>//构造函数为不变量赋&#20540;</a></div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">public Person(){</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">name=&quot;德天使&quot;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">}</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">反序例化的执行过程是这样的：JVM从数据流中获取一个Object对象，然后根据数据流中的类文件描述信息（在序例化时，保存到磁盘的对象文件中包含了类描述信息）查看，发生是final变量，需要重新计算，于是引用Person类中的name&#20540;，而此时JVM又发现name竟然没有赋&#20540;，不能引用，于是它很“聪明”地不再初始化，保持原始&#20540;。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">13.避免为final变量复杂赋&#20540;</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">总结起来，反序例化时，final变量在以下情况下，不会被重新赋&#20540;：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">通过构造函数为final变量赋&#20540;；通过方法返回&#20540;为final变量赋&#20540;；final修饰的属性不是基本类型</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">14.使用序例化类的私有方法巧妙解决部份属性持久化问题</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">实现了Serializable接口的类可以实现两个私有方法：writeObject和readObject,以影响和控制反序例化的过程。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">序例化独有的机制：序例化回计。Java通过ObjcetOutputStream类把一个对象转换成流数据时，会通过反射检查被序例化的类是否有writeObject方法，并且检查其是否符合私有、无返回&#20540;的特性，若有，则会委托该方法进行对象序例化，若没有，则由ObjectOutputStream按照默认规则继续序例化。同样，在从流数据恢复成实例对象时，也会检查是否有一个私有的readObject方法，如果有，则会通过该方法读取属性&#20540;。此处有几个关键点要说明：</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（1）out.defalutWriteObject();告知jvm按照默认的规则写入对象，惯例的写法是写在第一句话里。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（2）in.defaultReadObject(); 告知jvm按照默认的规则读入对象，惯例的写法也是写在第一句话里。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px">（3）out.writeXXX和in.readXXX ;分别是写入和读出相应的&#20540;。</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<div style="font-family:Tahoma; orphans:2; widows:2; font-size:14px"><br>
</div>
<br>
</div>

            <div>
                作者：shiling_02404 发表于2014/11/17 23:49:59 <a href="http://blog.csdn.net/shiling_02404/article/details/41225995">原文链接</a>
            </div>
            <div>
            阅读：216 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/41225995#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]SQL2005 如何在没有日志文件的情况下如何恢复MDF数据库文件]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/5932042</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/5932042</guid>
        <author>shiling_02404</author>
        <pubDate>2010/10/10 21:36:00</pubDate>
        <description><![CDATA[
            SQL code/*

网上看到的整理了一下。


在SQL Server 7.0中，微软推出了sp_attach_db和sp_attach_single_file_db系统存储过程。

它对于SQL Server数据库管理员执行下面的任务是非常方便的：

 

1 使用sp_attach_db系统存储过程直接将.MDF和.LDF文件附加到服务器。

2 使用sp_attach_single_file_db系统存储过程只附加.MDF文件。

3 使用sp_detach_db将数据库从一个服务器分离，复制.MDF文件到另一个服务器上，然后使用

sp_attach_db系统存储过程重新附加这些文件到两个服务器上。

              

              

尽管它对于SQL Server数据库管理员是很有用的，但是在使用这两个存储过程时是有一些限制的。限制如下：

 

1 你不能附加多个日志文件

2 你不能附加16个以上的文件

 

在SQL Server 2008中，微软宣布上面的系统存储过程将在未来的版本中被废弃。而他们在"Create Database"

SQL语句中添加了一个从句"For Attach"。

 

下面介绍使用"For Attach"从句的多种方法，以克服在使用sp_attach_db和sp_attach_single_file_db时要面临的限制。

*/

--建立测试数据库

 

Use Master   

go   

CREATE DATABASE TestDB   

ON   

( NAME = TestDB,   

FILENAME = 'D:/TestDB.mdf',   

SIZE = 10,   

MAXSIZE = 50,   

FILEGROWTH = 5 )   

LOG ON   

( NAME = TestDB_log,   

FILENAME = 'D:/TestDB_log.ldf',   

SIZE = 5MB,   

MAXSIZE = 25MB,   

FILEGROWTH = 5MB )   

GO  

 

--现在，让我们分离该数据库，并尝试使用sp_detach_db和sp_attach_db将它重新附加。

--执行下面的事务SQL语句。

 

use master   

go   

sp_detach_db 'TestDB'   

go   

sp_attach_db 'TestDB',   

'D:/TestDB.mdf',   

'D:/TestDB_log.ldf'  

GO   

--你也可以使用具有"For Attach"从句的"Create database"命令附加上相同的数据库文件，如下所示。  

use master   

go   

sp_detach_db 'TestDB'   

go   

 

CREATE DATABASE TestDB   

ON   

(FILENAME = 'D:/TestDB.mdf'),  

(FILENAME = 'D:/TestDB_log.ldf') 

for Attach   

go  

 

--现在，让我们分离数据库TestDB，然后删除.ldf文件，再然后使用sp_attach_single_file_db

--系统存储过程通过,执行下面的TSQL命令将它重新附加上。

 

use master   

go  

sp_detach_db 'TestDB'   

go   

exec master..xp_cmdshell 'del "D:/TestDB_log.ldf"'   

go  

 

 

--你可以使用下面的事务SQL语句来激活xp_cmdshell。　

 

use master   

go   

sp_configure 'show advanced options',1   

go   

reconfigure with override   

go   

sp_configure 'xp_cmdshell',1   

go   

reconfigure with override   

go  

 

--或者，你可以在MS-DOS命令提示符中使用Windows资源管理器的"Del"命令来删除.ldf文件。

--现在，让我们只使用sp_attach_single_file_db来附加.MDF文件。执行下面所示的命令。

 

use master   

go   

sp_attach_single_file_db 'TestDB',   

'D:/TestDB.mdf'   

go  

 

 

--你可以只通过使用带有"For ATTACH_REBUILD_LOG"从句的"Create database"命令来附加

--相同的数据库.MDF文件，如下所示。

 

use master   

go  

sp_detach_db 'TestDB'   

go   

exec master..xp_cmdshell 'del "D:/TestDB_log.ldf"'   

go  

 

--注意：当日志文件被重新创建时，SQL Server自动对日志文件名称添加后缀"_log"。

 

CREATE DATABASE TestDB   

ON   

(   

FILENAME ='D:/TestDB.mdf'     

) for ATTACH_REBUILD_LOG  

 

 

 

--本文介绍了带有"For Attach"和"for ATTACH_REBUILD_LOG"用于一个单独的.MDF文件和一个单独的.

--LDF文件的"Create Database"语句的使用。

            <div>
                作者：shiling_02404 发表于2010/10/10 21:36:00 <a href="http://blog.csdn.net/shiling_02404/article/details/5932042">原文链接</a>
            </div>
            <div>
            阅读：1013 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/5932042#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]关于&quot;从不是创建控件的线程访问它”]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4319583</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4319583</guid>
        <author>shiling_02404</author>
        <pubDate>2009/7/3 16:23:00</pubDate>
        <description><![CDATA[
            <p>在WinForm开发过程中经常会用到线程，有时候还往往需要在线程中访问线程外的控件，比如：设置</p>
<p>textbox的Text属性等等。如果直接设置程序必定会报出：从不是创建控件的线程访问它，这个异常。通</p>
<p>常我们可以采用两种方法来解决。一是通过设置control的属性。二是通过delegate,而通过delegate也有</p>
<p>两种方式，一种是常用的方式，另一种就是匿名方式。下面分别加以说明.<br />首先，通过设置control的一个属性值为false.<br />我们可以在Form_Load方法中添加：Control.CheckForIllegalCrossThreadCalls=false;来解决。设置为</p>
<p>false表示不对错误线程的调用进行捕获。这样在线程中对textbox的Text属性进行设置时就不会再报错了</p>
<p>。<br />其次，通过delegate的方法来解决。<br />普通的委托方法例如：<br />delegate void SafeSetText(string strMsg);<br />private void SetText(string strMsg)<br />{<br />&nbsp;if(textbox1.InvokeRequired)<br />&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SafeSetText objSet=new SafeSetText(SetText);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textbox1.Invoke(objSet,new object[]{strMsg});</p>
<p>&nbsp;}<br />&nbsp;else<br />&nbsp;{<br />&nbsp;&nbsp; textbox1.Text=strMsg;<br />&nbsp;}<br />}<br />在线程内需要设置textbox的值时调用SetText方法既可。<br />我们还可以采用另一种委托的方式来实现，那就是匿名代理，例如：<br />delegate void SafeSetText(string strMsg);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void SetText2(string strMsg)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SafeSetText objSet = delegate(string str)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Text = str;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Invoke(objSet,new object[]{strMsg});<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />这样同样可以实现。<br />个人觉得还是采用代理好些。</p>
            <div>
                作者：shiling_02404 发表于2009/7/3 16:23:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4319583">原文链接</a>
            </div>
            <div>
            阅读：432 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4319583#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]关于&quot;从不是创建控件的线程访问它&quot;]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4319492</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4319492</guid>
        <author>shiling_02404</author>
        <pubDate>2009/7/3 16:11:00</pubDate>
        <description><![CDATA[
            
            <div>
                作者：shiling_02404 发表于2009/7/3 16:11:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4319492">原文链接</a>
            </div>
            <div>
            阅读：179 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4319492#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]基于https系统自动登陆与动态数据处理]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4273578</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4273578</guid>
        <author>shiling_02404</author>
        <pubDate>2009/6/16 15:48:00</pubDate>
        <description><![CDATA[
            <p><br />由于登陆https时会需要证书,我们在登陆时有时候会遇到异常：System.Net.Sockets.SocketException，</p>
<p>Message="由于目标机器积极拒绝，无法连接。",这可能是由于证书名称不匹配的原因，如果您无法配置</p>
<p>远程处理客户端以使用证书公共名称，则可以使用客户端应用程序配置文件中的以下设置重写这一不匹配</p>
<p>的情况。<br />&lt;system.net&gt;<br />&nbsp;&nbsp; &lt;settings&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;servicePointManager<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; checkCertificateName="true"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&gt;<br />&nbsp;&nbsp; &lt;/settings&gt;<br />&lt;/system.net&gt;<br />若要以编程方式使客户端忽略证书名称不匹配，客户端必须创建一个特定类的实例，如果</p>
<p>certificateProblem 值为 0x800c010f，该类将实现 ICertificatePolicy 接口并实现 </p>
<p>CheckValidationResult 方法以返回 true。然后，您必须将该对象注册到 </p>
<p>System.Net.ServicePointManager 对象，方法是将该对象传递到 </p>
<p>ServicePointManager.CertificatePolicy 属性。&rdquo;<br />为了使CheckValidationResult 无条件返回true，我们声明一个TrustAllCertificatePolicy类：<br />&nbsp;&nbsp;&nbsp; public class TrustAllCertificatePolicy : System.Net.ICertificatePolicy<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public TrustAllCertificatePolicy()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool CheckValidationResult(ServicePoint </p>
<p>sp,System.Security.Cryptography.X509Certificates.X509Certificate cert,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebRequest req, int problem)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />然后，在请求之前加上<br />System.Net.ServicePointManager.CertificatePolicy = new TrustAllCertificatePolicy();<br />即可。<br />这样，代码就可以顺利和https服务器建立SSL通道了。</p>
<p><span style="color: #ff0000;">【上面部份内容来自互联网，已经忘记作者blog】</span><br />下面就只需要通过工具来抓包分析,我使用的是HttpAnalyzerStdV3，当然还有其他更多的工具，不过个人</p>
<p>感觉这个工具就足以胜任此项工作。对每一个需要我们分析的步骤中用此工作抓包，分析数据流与实际的</p>
<p>跳转地址。得到后就只需要HttpWebRequest将数据POST过去，用HttpWebReponse获取返回的数据。<br />个人总结：<br />1.首先要分析需要自动登陆的系统的web页面，在浏览器中通过查看源文件的方式看到html代码，分析结</p>
<p>构，因为有的页面可能是由多个iframe组成，而我们关注的仅仅只是其中的一个iframe,这时候查看哪个</p>
<p>iframe的html代码就由我们的需求确定。<br />2.如果需要对动态生成的数据做处理，那么我们也应该分析对应的动态数据所在页面，现实中可能通过多</p>
<p>个步骤才能进入某一个动态数据的页面，但在我们的模拟操作过程中，并不需要对所有的步骤进行模拟，</p>
<p>如果URL地址没有加密，我们可以尝试根据刚刚获取的URL地址，直接在同一进程中通过ctrl+n建一个新的</p>
<p>页面，输入刚才的URL地址。如果也能直接得到数据，那么就会使工作变得简单多了，因为我们模拟登陆</p>
<p>后，直接就可以转到这个页面来了。如果不能直接进入，那么还需要进一步抓包分析。<br />3.采用HttpAnalyzerStd进行抓包分析时，可以有针对性的进行分析，一些不需要的包可以不抓，避免给</p>
<p>分析带来麻烦，仅仅抓住某个动作发生时的包数据。<br />4.还应注意cookie的问题，如果系统是跳转多个服务器的话，可能需要重写cookie值。<br />5.由于系统中某一动作发生时可能采用javascript来实现页面的跳转，我们模拟的动作执行之后，得到的</p>
<p>GetResponseStream会是一个无法跳转到某某页的提示。这个时候就还需要我们将这个流中的URL地址提取</p>
<p>出来，再GET到这个URL.</p>
            <div>
                作者：shiling_02404 发表于2009/6/16 15:48:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4273578">原文链接</a>
            </div>
            <div>
            阅读：1354 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4273578#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]工厂与泛型]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4183787</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4183787</guid>
        <author>shiling_02404</author>
        <pubDate>2009/5/14 16:12:00</pubDate>
        <description><![CDATA[
            <p>在采用三层架构进行开发的过程中，我们通常会用到工厂。在表示层中通过它来创建不同的业务实例，再</p>
<p>去调用方法。假设我们项目中存已下几层：业务接口层，业务层（实现实务接口），业务工厂层，数据访</p>
<p>问层，通用方法层，表示层等。如果业务很多，我们定义了很多的不同的接口，在不用泛型的业务工厂类</p>
<p>里，我们通常需要针对不同的业务接口，编写不同的返回业务接口对象（已被实现）的方法。<br />例如：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;private static readonly string AssemblyPath = ConfigurationManager.AppSettings</p>
<p>["DAL"];&nbsp;&nbsp; <br />&nbsp;#region CreateCategory<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// 创建Product数据层接口<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static Maticsoft.IDAL.Products.ICategory CreateCategory()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string classNamespace = AssemblyPath + ".Products.Category";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object objType = CreateObject(AssemblyPath, classNamespace);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (Maticsoft.IDAL.Products.ICategory)objType;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region CreateProduct<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// 创建Product数据层接口<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static Maticsoft.IDAL.Products.IProduct CreateProduct()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string classNamespace = AssemblyPath + ".Products.Product";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object objType = CreateObject(AssemblyPath, classNamespace);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (Maticsoft.IDAL.Products.IProduct)objType;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion<br />.....<br />在这种方式下随着业务接口的增多，我们将在这里逐步增加对应的方法。<br />有没有一种方式能够实现在业务增多时，不改工厂的结构。<br />我的做法是这样的：通过泛型来实现。工厂里只需一个方法。既然<br />例如：<br />public&nbsp; static T CreateInstance&lt;T&gt;()<br />{<br />&nbsp; Type o_T = typeof (T);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string s_Name = o_T.FullName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (Maticsoft.Common.GlobalVariable.ClassRelation.Count == 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maticsoft.Common.GlobalVariable.GetClassRelation();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string[] sa_AssembClass = (string[]) </p>
<p>Maticsoft.Common.GlobalVariable.ClassRelation[s_Name];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string s_AssemblyPath = sa_AssembClass[0];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string s_ClassName = sa_AssembClass[1];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object obj = Assembly.Load(s_AssemblyPath).CreateInstance(s_AssemblyPath </p>
<p>+"."+ s_ClassName);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (T) obj;<br />}<br />既然我们在调用此方法的时候只是传入一个对应的接口类型，那么如何得到需要实际创建的业务对象呢？</p>
<p>毕竟我们是不能直接实例化一个接口的。也就是如何得到接口与业务的程序集，以及具体的类之间的关系</p>
<p>，以便我们通过反射来创建具体的对象呢。这时我们可以将这三者的关系保存在一个XML文件或数据库表</p>
<p>中。<br />例如：<br />接口1的FullName&nbsp; /对应实现接口1的业务的程序集名称&nbsp; /业务类的名称<br />Maticsoft.IDAL.Products.IProduct /Maticsoft.BLL.Products /Products<br />在我们的工厂方法里通过得到应的业务的接口全名，我们就可以得到其他两项，我上面采用的是存在数据</p>
<p>库表中，查出来后存在通用层的哈希表中，键为FullName，值为一个数组string[2].以静态变量的方法存</p>
<p>在通用层中，这样就可以避免得复去查数据库中的表。得到值后再通过反射既可创建实例了某接口的对象</p>
<p>实例。个人感觉很方便，下次再增加业务时，不需要改这个业务工厂了，只需往表中或XML文件中插入纪</p>
<p>录就行。<br />也许你还有更好的方法。</p>
<p>&nbsp;</p>
            <div>
                作者：shiling_02404 发表于2009/5/14 16:12:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4183787">原文链接</a>
            </div>
            <div>
            阅读：629 评论：1 <a href="http://blog.csdn.net/shiling_02404/article/details/4183787#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]关于Report.rdlc的使用]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4182429</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4182429</guid>
        <author>shiling_02404</author>
        <pubDate>2009/5/14 11:36:00</pubDate>
        <description><![CDATA[
            <p>最近在数据展示上用到报表，很多情况下我们都是动态生成数据，再将数据绑定到报表上。</p>
<p>下面是我的个人总结：</p>
<p>1.首先我使用的是普通的报表，而不是水晶报表。既使用的是rdlc类型的报表。 </p>
<p>2.要将报表展示出来当然就离不开ReportViewer.在开发中经常会多个rdlc共用一个窗体中的 ReportViewer来将数据展示。而不同的rdlc的数据及字段都是各不相同的。由于是动态生成的。我们无法 直接从数据库表中找到对应的表，因而在设计rdlc的时候我们通常采用两种方式。一是在数据库中建立一 个临时表，表所对应的字段就是我们的动态生成的数据中将包含的字段，注意这时表的字段一定要与动态 生成的数据中的字段一至，否则在编译的时候就会出错。二是直接通过添加数据集来实现，在项目解决方 案中添加新项：数据集（DataSet）,再给数据集添加表，给表添加列，这时候也要保证列名与动态生成的 数据的列名字段一至，采用这种方式我们可以将所有报表中将要动态生成的数据中的字段都添加过来。这 样只需一个数据集一个表就可以实现，从而不必要在数据库中创建临时表。虽然数据库中的临时表我们会 删除。有了数据源我们在设计报表的时候就可以直接从数据源中将想要的列直接拉到报表设计器中既可。 这样动态生成的数据对应的字段值将绑定到此处。这时候我们会看到类似Fields! 字段1.Value的表达式 。当然我们也可以在此基础上对报表进行更进一步的处理。比方设置表头表尾，并给出一些求和的值。 </p>
<p>3.报表设计好了，下一步就是给ReportViewer绑定这张报表了。由于我的ReportView在每次用于选择不同 的分类时绑定不同的rdlc，因而我们可以在代码中将要绑定的报表通过参数传入，再过 rptViewer.LocalReport.ReportEmbeddedResource = "";或rptViewer.LocalReport.ReportPath="" 为 ReportViewer提供报表数据。下面就是为报表提供报表数据源。这个就是我们动态通过查询或执行存储过 程或相应的处理方法得到的DataTable。例如：ReportDataSource rds = new ReportDataSource ();</p>
<p>rds.Name = "dsProduct_dtProductList";</p>
<p>rds.Value = dsReport.Tables [0];</p>
<p>rptViewer.LocalReport.DataSources.Add(rds); </p>
<p>这里的dsReport.Talbes[0]就是得到的报表数据源 。而要注意的是rds.Name。这个与我们前面定义的数据集名称和数据表名称是一至的。写法上是在数据集 与表之间用'_'连接。如果不清楚写什么，还有一种方法就是我们右键我们的一个设计好的rdlc，从打开 方式里选择"XML编辑器",这个时候我们在XML文件里也可以看到这个名称。通过以XML编辑器的方式打开 rdlc有时候也很有用处。有时候我们可以通过直接对这个XML文件进行修改既可实现不同DataSet下的报表 设计，可以了解下这些XML文件。</p>
            <div>
                作者：shiling_02404 发表于2009/5/14 11:36:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4182429">原文链接</a>
            </div>
            <div>
            阅读：2986 评论：4 <a href="http://blog.csdn.net/shiling_02404/article/details/4182429#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]最近]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4105231</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4105231</guid>
        <author>shiling_02404</author>
        <pubDate>2009/4/23 23:07:00</pubDate>
        <description><![CDATA[
            <p>本月内被一家新公司录用，前期忙于交接工作，准备各项手续入新公司。现在总算入了，手头的事情也多起来了。本来想打算将工作以来的一些知识整理整理，可都没来得急。看来还是人太懒了。时间挤一挤总会有的。</p>
            <div>
                作者：shiling_02404 发表于2009/4/23 23:07:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4105231">原文链接</a>
            </div>
            <div>
            阅读：255 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4105231#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]关于sp_executesql]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4057749</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4057749</guid>
        <author>shiling_02404</author>
        <pubDate>2009/4/8 17:46:00</pubDate>
        <description><![CDATA[
            <p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">--sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">使用</span><span lang="EN-US"><span style="font-family: Times New Roman;">&mdash;20090407--</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small; font-family: Times New Roman;"><span lang="EN-US">最近由于网络原因，BLOG没有写在网上，今日网络总算好了。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">1.</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">为了实现一个存储过程或一个</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句实现对不同的表的相同操作，由于表名及字段的变化考虑使用组合</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句的方式。想到使用</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL2005</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中的</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">。</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL2005</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的帮助文档中对其描述简单如下：执行可以多次重复使用或动态生成的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理。</span><span lang="EN-US"><span style="font-family: Times New Roman;">Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理可以包含嵌入参数。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="mso-tab-count: 1;"><span style="font-family: Times New Roman;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语法：</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql [ @stmt = ] stmt</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small;"><span style="font-family: Times New Roman;"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>[ </span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small;"><span style="font-family: Times New Roman;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>{, [@params=] N'@parameter_name data_type [ [ OUT [ PUT ][,...n]' } </span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span lang="EN-US"><span style="font-size: small;"><span style="font-family: Times New Roman;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp; </span>{, [ @param1 = ] 'value1' [ ,...n ] }</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small;"><span style="font-family: Times New Roman;"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>]</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="mso-tab-count: 1;"><span style="font-family: Times New Roman;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">备注：</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="mso-tab-count: 1;"><span style="font-family: Times New Roman;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">在批处理、名称作用域和数据库上下文方面，</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">与</span><span lang="EN-US"><span style="font-family: Times New Roman;"> EXECUTE </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的行为相同。</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">参数中的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理在执行</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句时才编译。随后，将编译</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中的内容，并将其作为执行计划运行。该执行计划独立于名为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的批处理的执行计划。</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">批处理不能引用调用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的批处理中声明的变量。</span><span lang="EN-US"><span style="font-family: Times New Roman;">sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">批处理中的本地游标或变量对调用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的批处理是不可见的。对数据库上下文所作的更改只在</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句结束前有效。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">替换</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中的参数的能力，与使用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> EXECUTE </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句执行字符串相比，有下列优点：</span><span style="font-family: Times New Roman;"> </span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">因为在</span><span lang="EN-US"><span style="font-family: Times New Roman;"> sp_executesql </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">字符串中，</span><span lang="EN-US"><span style="font-family: Times New Roman;">Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句的实际文本在两次执行之间并未改变，所以查询优化器应该能将第二次执行中的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句与第一次执行时生成的执行计划匹配。因此，</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL Server </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">不必编译第二条语句。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">字符串只生成一次。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">整数参数按其本身格式指定。不需要转换为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Unicode</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="mso-tab-count: 1;"><span style="font-family: Times New Roman;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">参数：</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span lang="EN-US"><span style="font-size: small;"><span style="font-family: Times New Roman;"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>[ @stmt = ] stmt</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">包含</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Unicode </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">字符串。</span><span lang="EN-US"><span style="font-family: Times New Roman;">stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">必须是可以隐式转换为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> ntext </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Unicode </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">常量或变量。不允许使用更复杂的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Unicode </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">表达式（例如使用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> + </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">运算符连接两个字符串）。不允许使用字符常量。如果指定常量，则必须使用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> N </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">作为前缀。例如，</span><span lang="EN-US"><span style="font-family: Times New Roman;">Unicode </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">常量</span><span lang="EN-US"><span style="font-family: Times New Roman;"> N'sp_who' </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">是有效的，但是字符常量</span><span lang="EN-US"><span style="font-family: Times New Roman;"> 'sp_who' </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">则无效。字符串的大小仅受可用数据库服务器内存限制。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; mso-outline-level: 1;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">[ @params = ] N'@parameter_name data_type [ ,... n ] '</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">包含</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中嵌入的所有参数定义的字符串。该字符串必须是可隐式转换为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> ntext </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Unicode </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">常量或变量。每个参数定义由参数名称和数据类型组成。</span><span lang="EN-US"><span style="font-family: Times New Roman;">n </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">是表示附加参数定义的占位符。在</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中指定的每个参数必须在</span><span lang="EN-US"><span style="font-family: Times New Roman;"> @params </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中定义。如果</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理不包含参数，则不需要</span><span lang="EN-US"><span style="font-family: Times New Roman;"> @params</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">。该参数的默认值为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> NULL</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">[ @param1 = ] 'value1'</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">参数字符串中定义的第一个参数的值。该值可以是常量或变量。必须为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中包含的每个参数提供参数值。如果</span><span lang="EN-US"><span style="font-family: Times New Roman;"> stmt </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中的</span><span lang="EN-US"><span style="font-family: Times New Roman;"> Transact-SQL </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句或批处理没有参数，则不需要这些值。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">OUTPUT </span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">指示该参数是输出参数。除非此过程是公共语言运行时</span><span lang="EN-US"><span style="font-family: Times New Roman;"> (CLR) </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">过程，否则</span><span lang="EN-US"><span style="font-family: Times New Roman;"> text</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">、</span><span lang="EN-US"><span style="font-family: Times New Roman;">ntext </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">和</span><span lang="EN-US"><span style="font-family: Times New Roman;"> image </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">参数可用作</span><span lang="EN-US"><span style="font-family: Times New Roman;"> OUTPUT </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">参数。使用</span><span lang="EN-US"><span style="font-family: Times New Roman;"> OUTPUT </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">关键字的输出参数可以为游标占位符，</span><span lang="EN-US"><span style="font-family: Times New Roman;">CLR </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">过程除外。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">n </span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';"><span style="font-size: small;">附加参数值的占位符。这些值只能为常量或变量，不能是很复杂的表达式（例如函数）或使用运算符生成的表达式。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">&nbsp;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">2</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">．个人总结：</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">首先，在使用中用来组合</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句的字符串变量类型只能为：</span><span lang="EN-US"><span style="font-family: Times New Roman;">'ntext/nchar/nvarchar'</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">，如果为</span><span lang="EN-US"><span style="font-family: Times New Roman;">varchar</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">类型，则在调用时会出现错误</span><span lang="EN-US"><span style="font-family: Times New Roman;">: </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">过程需要类型为</span><span lang="EN-US"><span style="font-family: Times New Roman;"> 'ntext/nchar/nvarchar' </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">的参数</span><span lang="EN-US"><span style="font-family: Times New Roman;"> '@parameters'</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">其次如果用字符串变量来描述参数，则同样需要定义为类型：</span><span lang="EN-US"><span style="font-family: Times New Roman;">'ntext/nchar/nvarchar'</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">。否则也会出错。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';"><span style="font-size: small;">再次，参数定义列表与参数值列表必须对应</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">&nbsp;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">3.</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">例子：</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">A</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">：执行简单的</span><span lang="EN-US"><span style="font-family: Times New Roman;">Select </span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">execute</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> <span style="color: maroon;">sp_executesql</span> N<span style="color: red;">'select * from t_maintainer where errorcount=@e_nums'</span><span style="color: gray;">,</span>N<span style="color: red;">'@e_nums nvarchar(20)'</span><span style="color: gray;">,</span>@e_nums<span style="color: gray;">=</span>4</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">&nbsp;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span style="font-size: small;"><span lang="EN-US"><span style="font-family: Times New Roman;">B</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">：执行动态生成的</span><span lang="EN-US"><span style="font-family: Times New Roman;">SQL</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">语句</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';"><span style="font-size: small;">下面我定义一个通用的存储过程，目的是想得到表的数据行数。表名通过参数传入，输出行数。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">ALTER</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> <span style="color: blue;">PROCEDURE</span> [dbo]<span style="color: gray;">.</span>[p_GetTableRowCount]</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span>@tableName <span style="color: blue;">varchar</span><span style="color: gray;">(</span>20<span style="color: gray;">),</span><span style="color: green;">--</span></span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">表名</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span>@rowCount <span style="color: blue;">varchar</span><span style="color: gray;">(</span>20<span style="color: gray;">)</span> <span style="color: blue;">output</span> <span style="color: green;">--</span></span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">数据的行数</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-outline-level: 1; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">AS</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-outline-level: 1; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">BEGIN</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-outline-level: 1; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">SET</span> <span style="color: blue;">NOCOUNT</span> <span style="color: blue;">ON</span><span style="color: gray;">;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">declare</span> @SQL <span style="color: blue;">nvarchar</span><span style="color: gray;">(</span>2000<span style="color: gray;">);</span><span style="color: green;"> --</span></span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">注意：</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">nvarchar</span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">类型</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">declare</span> @Para <span style="color: blue;">nvarchar</span><span style="color: gray;">(</span>200<span style="color: gray;">); </span><span style="color: green;">--</span></span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">注意：</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">nvarchar</span><span style="font-size: 9pt; color: green; font-family: 宋体; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-font-kerning: 0pt; mso-no-proof: yes; mso-bidi-font-family: 'Courier New';">类型</span><span style="font-size: 9pt; color: green; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">set</span> @SQL <span style="color: gray;">=</span><span style="color: red;">' select @t=count(0) from '</span><span style="color: gray;">+</span>@tableName<span style="color: gray;">;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">set</span> @Para<span style="color: gray;">=</span><span style="color: red;">'@t varchar(20) output'</span><span style="color: gray;">;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"><span style="mso-tab-count: 1;">&nbsp;&nbsp;&nbsp; </span><span style="color: blue;">Execute</span> <span style="color: maroon;">sp_executesql</span> @SQL<span style="color: gray;">,</span>@Para<span style="color: gray;">,</span> @t<span style="color: gray;">=</span>@rowCount <span style="color: blue;">output</span><span style="color: gray;">;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; mso-outline-level: 1;"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">END</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size: small; font-family: Times New Roman;">&nbsp;</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">在查询分析器中，测试这个存储过程如下</span><span lang="EN-US"><span style="font-family: Times New Roman;">:</span></span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">declare</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> @rowcount <span style="color: blue;">varchar</span><span style="color: gray;">(</span>200<span style="color: gray;">)</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">exec</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> p_GetTableRowCount <span style="color: red;">'T_BTS_Info'</span><span style="color: gray;">,</span>@rowcount <span style="color: blue;">output</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">print</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> @rowcount</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">&nbsp;</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">declare</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> @rowcount <span style="color: blue;">varchar</span><span style="color: gray;">(</span>200<span style="color: gray;">)</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none;" align="left"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">exec</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> p_GetTableRowCount <span style="color: red;">'T_Maintainer'</span><span style="color: gray;">,</span>@rowcount <span style="color: blue;">output</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: 9pt; color: blue; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US">print</span><span style="font-size: 9pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt; mso-no-proof: yes;" lang="EN-US"> @rowcount</span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-size: small;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">在我的</span><span lang="EN-US"><span style="font-family: Times New Roman;">vs2005</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">中通过</span><span lang="EN-US"><span style="font-family: Times New Roman;">c#</span></span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';">调用这个存储过程，传入想要的查询的表名，既可得到表的行数。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';"><span style="font-size: small;">个人感觉方便了不少。</span></span></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt;"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman';"><span style="font-size: small;">注意上面的存储过程并没有对参数进行检测，可自行进一步进行完善。</span></span></p>
            <div>
                作者：shiling_02404 发表于2009/4/8 17:46:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4057749">原文链接</a>
            </div>
            <div>
            阅读：745 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4057749#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Asp.Net中OnClientClick与OnClick之我见]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4028268</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4028268</guid>
        <author>shiling_02404</author>
        <pubDate>2009/3/27 0:09:00</pubDate>
        <description><![CDATA[
            <p>在web开发中,经常要用到控件的OnClientClick与OnClick事件.</p>
<p>如果使用不当,经常会遇到一些意料之外的事情发生,让人摸不着头脑.下面就将我的一些小小总结道来:</p>
<p>首先我们要了解这两个事件:</p>
<p>OnClientClick是客户端事件方法.一般采用JavaScript来进行处理.也就是直接在IE端运行.一点击就运行.</p>
<p>OnClick事件是服务器端事件处理方法,在服务器端,也就是IIS中运行.点击按钮后,执行postback,再运行.</p>
<p>如果一个按钮上我们同时有客户端的OnClientClick方法又有OnClick事件处理方法,如何才能按照正常的逻辑运行呢.</p>
<p>OnClientClick中我们常用来做一些客户端的检测.当然放在服务器也可以做同样的检测,但这样做的代价是与服务器进行交互,消耗资源,而且用户体验不好...</p>
<p>例:</p>
<p>//jsDel()为一javascript函数.</p>
<p>&lt;asp:Button ID="btnDel" Width="80px" CssClass="buttonstyle" runat="server" Text="删除" OnClientClick="return jsDel();" OnClick="btnDel_Click1" /&gt;</p>
<p>需要注意的是当我们当击这个按钮时,自动先执行的客户端,再执行服务器端的.如果客户端返回的是false,那么服务器端对应的方法永远不会执行.这样就达到检测,只有通过才去执行服务器端的方法.</p>
<p>也就是说如果我们上面写成:</p>
<p>&lt;asp:Button ID="btnDel" Width="80px" CssClass="buttonstyle" runat="server" Text="删除" OnClientClick="jsDel(); return false;" OnClick="btnDel_Click1" /&gt;</p>
<p>那么不管jsDel执行的结要如何.服务器端对应的btnDel_Click1方法都永远不会执行.因为return false使得始终使客户端返回false</p>
<p>如果我们写成:</p>
<p>&lt;asp:Button ID="btnDel" Width="80px" CssClass="buttonstyle" runat="server" Text="删除" OnClientClick="jsDel();"OnClick="btnDel_Click1" /&gt;</p>
<p>那么btnDel_Click1都有会发生.同样也就达不到效果.也就是说你没有通过检测也去执行服务器的方法了.</p>
<p>所以必须注意了.</p>
<p>当然我们还可以通过btn.Attribute.add()的方法来进行类似的处理.</p>
            <div>
                作者：shiling_02404 发表于2009/3/27 0:09:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4028268">原文链接</a>
            </div>
            <div>
            阅读：14305 评论：11 <a href="http://blog.csdn.net/shiling_02404/article/details/4028268#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]SQL2005游标的使用]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4024504</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4024504</guid>
        <author>shiling_02404</author>
        <pubDate>2009/3/25 19:39:00</pubDate>
        <description><![CDATA[
            <p>以前很少用到游标,因为有人提到用游标的效率比较低.不过我想既然有,应该自有他的用处.先从MSDN上来看游标的使用帮助.</p>
<pre>SQL 92 Syntax
DECLARE cursor_name [ INSENSITIVE ] [ SCROLL ] CURSOR FOR select_statement [ FOR { READ ONLY | UPDATE [ OF column_name [ ,...n ] ] } ]
[;]
Transact-SQL Extended Syntax
DECLARE cursor_name CURSOR[ LOCAL | GLOBAL ][ FORWARD_ONLY | SCROLL ][ STATIC | KEYSET | DYNAMIC | FAST_FORWARD ][ READ_ONLY | SCROLL_LOCKS | OPTIMISTIC ][ TYPE_WARNING ]FOR select_statement[ FOR UPDATE [ OF column_name [ ,...n ] ] ]
[;]</pre>
<p>&nbsp;</p>
<p>在声明游标后，可使用下列系统存储过程确定游标的特性。</p>
<p>
<table style="BACKGROUND-COLOR: #cccccc" border="1" cellspacing="0" cellpadding="0" width="100%">
<tbody>
<tr>
<th>系统存储过程 </th><th>说明 </th>
</tr>
<tr>
<td>
<p>sp_cursor_list</p>
</td>
<td>
<p>返回当前在连接上可视的游标列表及其特性。</p>
</td>
</tr>
<tr>
<td>
<p>sp_describe_cursor</p>
</td>
<td>
<p>说明游标属性，例如是只前推的游标还是滚动游标。</p>
</td>
</tr>
<tr>
<td>
<p>sp_describe_cursor_columns</p>
</td>
<td>
<p>说明游标结果集中的列的属性。</p>
</td>
</tr>
<tr>
<td>
<p>sp_describe_cursor_tables</p>
</td>
<td>
<p>说明游标所访问的基表。</p>
</td>
</tr>
</tbody>
</table>
</p>
<p>在声明游标的 select_statement 中可以使用变量。游标变量值在声明游标后不发生更改。在 SQL Server 版本 6.5 以及早期版本中，每次重新打开游标时都会重新刷新变量值。</p>
<p>&nbsp;</p>
<dl><dt>
<p>cursor_name</p>
</dt><dd>
<p>所定义的 Transact-SQL 服务器游标的名称。cursor_name 必须符合标识符规则。有关标识符规则的详细信息，请参阅使用标识符作为对象名称。</p>
</dd></dl><dl><dt>
<p>INSENSITIVE</p>
</dt><dd>
<p>定义一个游标，以创建将由该游标使用的数据的临时复本。对游标的所有请求都从 tempdb 中的这一临时表中得到应答；因此，在对该游标进行提取操作时返回的数据中不反映对基表所做的修改，并且该游标不允许修改。使用 SQL-92 语法时，如果省略 INSENSITIVE，则已提交的（任何用户）对基础表的删除和更新都反映在后面的提取中。</p>
</dd></dl><dl><dt>
<p>SCROLL</p>
</dt><dd>
<p>指定所有的提取选项（FIRST、LAST、PRIOR、NEXT、RELATIVE、ABSOLUTE）均可用。如果未在 SQL-92 DECLARE CURSOR 中指定 SCROLL，则 NEXT 是唯一支持的提取选项。如果也指定了 FAST_FORWARD，则不能指定 SCROLL。</p>
</dd></dl><dl><dt>
<p>select_statement</p>
</dt><dd>
<p>定义游标结果集的标准 SELECT 语句。在游标声明的 select_statement 内不允许使用关键字 COMPUTE、COMPUTE BY、FOR BROWSE 和 INTO。</p>
<p>Microsoft 如果 select_statement 中的子句与所请求的游标类型的功能有冲突，则 SQL Server 会将游标隐式转换为其他类型。有关详细信息，请参阅使用隐式游标转换。</p>
</dd></dl><dl><dt>
<p>READ ONLY</p>
</dt><dd>
<p>禁止通过该游标进行更新。在 UPDATE 或 DELETE 语句的 WHERE CURRENT OF 子句中不能引用游标。该选项优于要更新的游标的默认功能。</p>
</dd></dl><dl><dt>
<p>UPDATE [OF column_name [,...n]]</p>
</dt><dd>
<p>定义游标中可更新的列。如果指定了 OF column_name [,...n]，则只允许修改列出的列。如果指定了 UPDATE，但未指定列的列表，则可以更新所有列。</p>
</dd></dl><dl><dt>
<p>cursor_name</p>
</dt><dd>
<p>所定义的 Transact-SQL 服务器游标的名称。cursor_name 必须符合标识符规则。有关标识符规则的详细信息，请参阅使用标识符作为对象名称。</p>
</dd></dl><dl><dt>
<p>LOCAL</p>
</dt><dd>
<p>指定对于在其中创建的批处理、存储过程或触发器来说，该游标的作用域是局部的。该游标名称仅在这个作用域内有效。在批处理、存储过程、触发器或存储过程 OUTPUT 参数中，该游标可由局部游标变量引用。OUTPUT 参数用于将局部游标传递回调用批处理、存储过程或触发器，它们可在存储过程终止后给游标变量分配参数使其引用游标。除非 OUTPUT 参数将游标传递回来，否则游标将在批处理、存储过程或触发器终止时隐式释放。如果 OUTPUT 参数将游标传递回来，则游标在最后引用它的变量释放或离开作用域时释放。</p>
</dd></dl><dl><dt>
<p>GLOBAL</p>
</dt><dd>
<p>指定该游标的作用域对来说连接是全局的。在由连接执行的任何存储过程或批处理中，都可以引用该游标名称。该游标仅在断开连接时隐式释放。</p>
</dd><dd>
<div class="alert">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tbody>
<tr>
<th align="left">注意： </th>
</tr>
<tr>
<td>如果 GLOBAL 和 LOCAL 参数都未指定，则默认值由 default to local cursor 数据库选项的设置控制。在 SQL Server 7.0 版中，该选项默认为 FALSE，以便与 SQL Server 的早期版本相匹配，在早期版本中，所有游标都是全局的。该选项的默认值在以后的 SQL Server 版本中可能会更改。有关详细信息，请参阅&ldquo;设置数据库选项&rdquo;。
<p>&nbsp;</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
</div>
<dl><dt>
<p>FORWARD_ONLY</p>
</dt><dd>
<p>指定游标只能从第一行滚动到最后一行。FETCH NEXT 是唯一受支持的提取选项。如果在指定 FORWARD_ONLY 时不指定 STATIC、KEYSET 和 DYNAMIC 关键字，则游标作为 DYNAMIC 游标进行操作。如果 FORWARD_ONLY 和 SCROLL 均未指定，则除非指定 STATIC、KEYSET 或 DYNAMIC 关键字，否则默认为 FORWARD_ONLY。STATIC、KEYSET 和 DYNAMIC 游标默认为 SCROLL。与 ODBC 和 ADO 这类数据库 API 不同，STATIC、KEYSET 和 DYNAMIC Transact-SQL 游标支持 FORWARD_ONLY。 </p>
</dd></dl><dl><dt>
<p>STATIC</p>
</dt><dd>
<p>定义一个游标，以创建将由该游标使用的数据的临时复本。对游标的所有请求都从 tempdb 中的这一临时表中得到应答；因此，在对该游标进行提取操作时返回的数据中不反映对基表所做的修改，并且该游标不允许修改。</p>
</dd></dl><dl><dt>
<p>KEYSET</p>
</dt><dd>
<p>指定当游标打开时，游标中行的成员身份和顺序已经固定。对行进行唯一标识的键集内置在 tempdb 内一个称为 keyset 的表中。 </p>
<div class="alert">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tbody>
<tr>
<th align="left">注意： </th>
</tr>
<tr>
<td>如果查询引用了至少一个无唯一索引的表，则键集游标将转换为静态游标。
<p>&nbsp;</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
</div>
<p>对基表中的非键值所做的更改（由游标所有者更改或由其他用户提交）可以在用户滚动游标时看到。其他用户执行的插入是不可见的（不能通过 Transact-SQL 服务器游标执行插入）。如果删除行，则在尝试提取行时返回值为 -2 的 @@FETCH_STATUS。从游标以外更新键值类似于删除旧行然后再插入新行。具有新值的行是不可见的，并在尝试提取具有旧值的行时，将返回值为 -2 的 @@FETCH_STATUS。如果通过指定 WHERE CURRENT OF 子句利用游标来完成更新，则新值是可见的。</p>
</dd></dl><dl><dt>
<p>DYNAMIC</p>
</dt><dd>
<p>定义一个游标，以反映在滚动游标时对结果集内的各行所做的所有数据更改。行的数据值、顺序和成员身份在每次提取时都会更改。动态游标不支持 ABSOLUTE 提取选项。</p>
</dd></dl><dl><dt>
<p>FAST_FORWARD</p>
</dt><dd>
<p>指定启用了性能优化的 FORWARD_ONLY、READ_ONLY 游标。如果指定了 SCROLL 或 FOR_UPDATE，则不能也指定 FAST_FORWARD。 </p>
<div class="alert">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tbody>
<tr>
<th align="left">注意： </th>
</tr>
<tr>
<td>在 SQL Server 2000 中，FAST_FORWARD 和 FORWARD_ONLY 游标选项是相互排斥的。如果指定了其中的一个，则不能指定另一个，否则会引发错误。在 SQL Server 2005 中，这两个关键字可以用在同一个 DECLARE CURSOR 语句中。
<p>&nbsp;</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
</div>
</dd></dl><dl><dt>
<p>READ_ONLY</p>
</dt><dd>
<p>禁止通过该游标进行更新。在 UPDATE 或 DELETE 语句的 WHERE CURRENT OF 子句中不能引用游标。该选项优于要更新的游标的默认功能。</p>
</dd></dl><dl><dt>
<p>SCROLL_LOCKS</p>
</dt><dd>
<p>指定通过游标进行的定位更新或删除保证会成功。将行读取到游标中以确保它们对随后的修改可用时，Microsoft SQL Server 将锁定这些行。如果还指定了 FAST_FORWARD，则不能指定 SCROLL_LOCKS。</p>
</dd></dl><dl><dt>
<p>OPTIMISTIC</p>
</dt><dd>
<p>指定如果行自从被读入游标以来已得到更新，则通过游标进行的定位更新或定位删除不会成功。当将行读入游标时 SQL Server 不会锁定行。相反，SQL Server 使用 timestamp 列值的比较，或者如果表没有 timestamp 列，则使用校验和值，以确定将行读入游标后是否已修改该行。如果已修改该行，则尝试进行的定位更新或删除将失败。如果还指定了 FAST_FORWARD，则不能指定 OPTIMISTIC。</p>
</dd></dl><dl><dt>
<p>TYPE_WARNING</p>
</dt><dd>
<p>指定如果游标从所请求的类型隐式转换为另一种类型，则向客户端发送警告消息。</p>
</dd></dl><dl><dt>
<p>select_statement</p>
</dt><dd>
<p>定义游标结果集的标准 SELECT 语句。在游标声明的 select_statement 内不允许使用关键字 COMPUTE、COMPUTE BY、FOR BROWSE 和 INTO。</p>
<p>如果 select_statement 中的子句与所请求的游标类型的功能有冲突，则 SQL Server 会将游标隐式转换为其他类型。有关详细信息，请参阅&ldquo;隐式游标转换&rdquo;。</p>
</dd></dl><dl><dt>
<p>FOR UPDATE [OF column_name [,...n]]</p>
</dt><dd>
<p>定义游标中可更新的列。如果提供了 OF column_name [,...n]，则只允许修改列出的列。如果指定了 UPDATE，但未指定列的列表，则除非指定了 READ_ONLY 并发选项，否则可以更新所有的列。</p>
</dd><dd>
<p>&nbsp;</p>
</dd><dd>
<p>默认情况下，将 DECLARE CURSOR 权限授予对游标中所使用的视图、表和列具有 SELECT 权限的任何用户</p>
</dd></dl></dd></dl>
<p>A. 使用简单游标和语法</p>
<p>在打开该游标时所生成的结果集包括表中的所有行和所有列。可以更新该游标，对该游标所做的所有更新和删除均在提取中表现出来。因为未指定 SCROLL 选项，所以 FETCH NEXT 是唯一可用的提取选项。</p>
<pre>DECLARE vend_cursor CURSOR
FOR SELECT * FROM Purchasing.Vendor
OPEN vend_cursor
FETCH NEXT FROM vend_cursor</pre>
<p>B. 使用嵌套游标生成报表输出</p>
<p>以下示例显示如何嵌套游标以生成复杂的报表。为每个供应商声明内部游标。</p>
<pre>SET NOCOUNT ON

DECLARE @vendor_id int, @vendor_name nvarchar(50),
@message varchar(80), @product nvarchar(50)

PRINT '-------- Vendor Products Report --------'

DECLARE vendor_cursor CURSOR FOR 
SELECT VendorID, Name
FROM Purchasing.Vendor
WHERE PreferredVendorStatus = 1
ORDER BY VendorID

OPEN vendor_cursor

FETCH NEXT FROM vendor_cursor 
INTO @vendor_id, @vendor_name

WHILE @@FETCH_STATUS = 0
BEGIN
PRINT ' '
SELECT @message = '----- Products From Vendor: ' + 
@vendor_name

PRINT @message

-- Declare an inner cursor based   
-- on vendor_id from the outer cursor.

DECLARE product_cursor CURSOR FOR 
SELECT v.Name
FROM Purchasing.ProductVendor pv, Production.Product v
WHERE pv.ProductID = v.ProductID AND
pv.VendorID = @vendor_id-- Variable value from the outer cursor

OPEN product_cursor
FETCH NEXT FROM product_cursor INTO @product

IF @@FETCH_STATUS &lt;&gt; 0 
PRINT '         &lt;&lt;None&gt;&gt;'     

WHILE @@FETCH_STATUS = 0
BEGIN

SELECT @message = '         ' + @product
PRINT @message
FETCH NEXT FROM product_cursor INTO @product

END

CLOSE product_cursor
DEALLOCATE product_cursor

-- Get the next vendor.
FETCH NEXT FROM vendor_cursor 
INTO @vendor_id, @vendor_name
END 
CLOSE vendor_cursor
DEALLOCATE vendor_cursor</pre>
<p>原来游标还可以嵌套使用..呵呵...</p>
<p>个人总结:</p>
<p>1.使用完后要记得close 掉</p>
<p>2.并释放掉资源 deallocate </p>
<p>&nbsp;</p>
            <div>
                作者：shiling_02404 发表于2009/3/25 19:39:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4024504">原文链接</a>
            </div>
            <div>
            阅读：4131 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4024504#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]AspNetPager初用一]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4013121</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4013121</guid>
        <author>shiling_02404</author>
        <pubDate>2009/3/21 22:31:00</pubDate>
        <description><![CDATA[
            <p>以前看到文章说起过分页控件AspNetPager,今天小试用了一下.</p>
<p>首先要下载回AspNetPager.DLL,我用的是7.02版本的.版本之间的差异在此就不多说.</p>
<p>要想使用它,必须先将它添加到工具箱中,在开发的过程中需要用到时只需拖入页面既可.会自动注册:</p>
<p>&lt;%@ Register Assembly="AspNetPager" Namespace="Wuqi.Webdiyer" TagPrefix="webdiyer" %&gt;</p>
<p>下面就以将数据绑定到一个GridView为例(简单例子):</p>
<p>首先在我的页面中拖入三个控件:GridView,SqlDataSource,AspNetPager,由于我们事先在web.config中有对连接数据库连接字符串进行配置.<textarea cols="50" rows="6" name="code" class="xhtml:collapse:showcolumns">	&lt;connectionStrings&gt;
		&lt;add name="Sql2005ConnStr" connectionString="Data Source=.;Initial Catalog=BTSCMS;user id=sa;password=sa;min pool size=1;max pool size=20;"/&gt;
	&lt;/connectionStrings&gt;</textarea> </p>
<p>下面就先对SqlDataSource进行配置,可以直接切换到源视图,配置如下:</p>
<p><textarea cols="50" rows="15" name="code" class="xhtml:collapse:showcolumns">        &lt;asp:SqlDataSource ID="SqlDataSource_BTSInfo" runat="server" ConnectionString="&lt;%$ connectionStrings:Sql2005ConnStr %&gt;" 
        SelectCommand="with orderlist as (select btsid,btsname,ROW_NUMBER() over(order by btsid desc) rownumber,Alias,district from t_bts_info)select btsid,btsname,alias,district from orderlist where rownumber between @StartIndex and @EndIndex"&gt;
            &lt;SelectParameters&gt;
                &lt;asp:ControlParameter ControlID="AspNetPager1" DefaultValue="1" Name="StartIndex" PropertyName="StartRecordIndex" Type="Int32"/&gt;
                &lt;asp:ControlParameter ControlID="AspNetPager1" DefaultValue="10" Name="EndIndex" PropertyName="EndRecordIndex" Type="Int32" /&gt;
            &lt;/SelectParameters&gt;
        &lt;/asp:SqlDataSource&gt;</textarea> </p>
<p>配置时可以在设计视图下,对各个属性进行设置.不过本人发现,在配置selectQuery,设置参数源于,虽然我们选择的是control,但却发现不了AspNetPager控件.这时候只好通过直接写代码来进行配置了.在这里我直接将SQL语句写在这里,更好的方法是可以将它转换为一个可以通用的存储过程.这里设置的AspNetPager每页显示十行纪录.</p>
<p>下面要做的就是后台代码了(简单例子):</p>
<p><textarea cols="50" rows="15" name="code" class="c-sharp:collapse:showcolumns">namespace ShiLingAspNetPager
{
    public partial class _Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if(!IsPostBack)
            {
                int total = GetDataCount();
                AspNetPager1.RecordCount = total;//设置AspNetPager的记录数.其他的处理过程就不需再关注了.
            }
        }

        private int GetDataCount()
        {
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Sql2005ConnStr"].ToString());
            string strSQL = "select count(btsid) from t_bts_info";
            con.Open();
            SqlCommand cmd=new SqlCommand(strSQL,con);
            int rc=(int)cmd.ExecuteScalar();
            con.Close();
            return rc;
            
        }
    }
}</textarea> </p>
<p>最后一步就是把gridview的DataSourceID设为我们的SqlDataSource了.其他的设置暂不考虑.</p>
<p>运行一下.既可看到分页效果.</p>
<p>个人感觉这个分页控件还挺好用的...不知道在百万级数据量的时候效率会怎么样.有待进一步研究.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
            <div>
                作者：shiling_02404 发表于2009/3/21 22:31:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4013121">原文链接</a>
            </div>
            <div>
            阅读：1957 评论：1 <a href="http://blog.csdn.net/shiling_02404/article/details/4013121#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]亡羊补牢]]></title>
        <link>http://blog.csdn.net/shiling_02404/article/details/4011486</link>
        <guid>http://blog.csdn.net/shiling_02404/article/details/4011486</guid>
        <author>shiling_02404</author>
        <pubDate>2009/3/21 11:17:00</pubDate>
        <description><![CDATA[
            <p>越来越发现,知识源于积累.如果一味的去做,去执行,而不注重积累的话,永远都只能像新手一样,忙于COPY,忙于不断的修改.如何才能做得更好,使得以后的工作量会减轻,积累起着很关键的作用.如何积累,有人喜欢将工作中的点滴记录在日记本上,随身携带,有人喜欢以写BLOG的方式记录下来.有的喜欢二者结合.虽不同的方式,但持之以恒,必是颇有一番收获.</p>
<p>好久都没有写日志了,只是偶尔将一些东西记录在日记本上,或是整理归为一些TXT文档.最近发现还是写BLOG更有效果.一来可以让这事变得简单些,二来可以与相同爱好者就一些问题共同交流.再者,当你写的时候会以一种谦虚但又是讲者的身份在描述这件事情,好处自然是自己更加的清楚.试想如果自己都讲不清楚,那还怎么能让看客看明白呢.所以说写BLOG还是大有好处的.</p>
<p>立此为证,以后常写!</p>
            <div>
                作者：shiling_02404 发表于2009/3/21 11:17:00 <a href="http://blog.csdn.net/shiling_02404/article/details/4011486">原文链接</a>
            </div>
            <div>
            阅读：207 评论：0 <a href="http://blog.csdn.net/shiling_02404/article/details/4011486#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
</channel>
</rss>
