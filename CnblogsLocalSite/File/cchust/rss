<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_天士梦</title>
  <subtitle type="text"></subtitle>
  <id>uuid:283f8d56-61ca-49a6-8cba-78657ba4eeb7;id=1067</id>
  <updated>2015-09-15T06:55:39Z</updated>
  <author>
    <name>天士梦</name>
    <uri>http://www.cnblogs.com/cchust/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4796717.html</id>
    <title type="text">SQLITE如何选择表类型 - 天士梦</title>
    <summary type="text">Sqlite中表类型主要有普通表，以及WITHOUT ROWID表以及临时表。临时表一般是是查询需要临时存储结果使用。这篇文章主要讨论普通表和WITHOUT ROWID表的区别，以及AUTOINCREMENT的特性。1.rowid的类型是什么？ sqlite中rowid是一个隐身存储的列，8...</summary>
    <published>2015-09-10T00:15:00Z</published>
    <updated>2015-09-10T00:15:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4796717.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4796717.html" />
    <content type="html">Sqlite中表类型主要有普通表，以及WITHOUT ROWID表以及临时表。临时表一般是是查询需要临时存储结果使用。这篇文章主要讨论普通表和WITHOUT ROWID表的区别，以及AUTOINCREMENT的特性。1.rowid的类型是什么？ sqlite中rowid是一个隐身存储的列，8...&lt;img src="http://counter.cnblogs.com/blog/rss/4796717" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4796717.html" target="_blank"&gt;SQLITE如何选择表类型&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4761814.html</id>
    <title type="text">Sqlite学习笔记(五)&amp;&amp;SQLite封锁机制 - 天士梦</title>
    <summary type="text">概述 SQLite虽然是一个轻量的嵌入式数据库，但这并不影响它支持事务。所谓支持事务，即需要在并发环境下，保持事务的ACID特性。事务的原子性，隔离性都需要通过并发控制来保证。那么Sqlite的并发控制是怎样的，如何实现，在这里跟大家分享下我的理解。 SQLite是一个文件数据库，所有的数据都在...</summary>
    <published>2015-08-27T03:57:00Z</published>
    <updated>2015-08-27T03:57:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4761814.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4761814.html" />
    <content type="html">概述 SQLite虽然是一个轻量的嵌入式数据库，但这并不影响它支持事务。所谓支持事务，即需要在并发环境下，保持事务的ACID特性。事务的原子性，隔离性都需要通过并发控制来保证。那么Sqlite的并发控制是怎样的，如何实现，在这里跟大家分享下我的理解。 SQLite是一个文件数据库，所有的数据都在...&lt;img src="http://counter.cnblogs.com/blog/rss/4761814" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4761814.html" target="_blank"&gt;Sqlite学习笔记(五)&amp;amp;&amp;amp;SQLite封锁机制&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4755729.html</id>
    <title type="text">自动kill慢查询 - 天士梦</title>
    <summary type="text">在生产环境中，DB服务器经常会被并发的慢查询压挂，因此事前进行sql审核避免烂SQL很重要。万一不小心慢sql还是跑到线上，并且并发还不小，这是dba肯定会收到告警。dba上线处理第一时间是定位并kill慢查询，避免慢查询其他正常的事务。本文主要围绕kill展开，并附带介绍几种相关的timeou...</summary>
    <published>2015-08-25T01:42:00Z</published>
    <updated>2015-08-25T01:42:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4755729.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4755729.html" />
    <content type="html">在生产环境中，DB服务器经常会被并发的慢查询压挂，因此事前进行sql审核避免烂SQL很重要。万一不小心慢sql还是跑到线上，并且并发还不小，这是dba肯定会收到告警。dba上线处理第一时间是定位并kill慢查询，避免慢查询其他正常的事务。本文主要围绕kill展开，并附带介绍几种相关的timeou...&lt;img src="http://counter.cnblogs.com/blog/rss/4755729" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4755729.html" target="_blank"&gt;自动kill慢查询&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4754619.html</id>
    <title type="text">Sqlite学习笔记(四)&amp;&amp;SQLite-WAL原理 - 天士梦</title>
    <summary type="text">Sqlite学习笔记(三)&amp;&amp;WAL性能测试中列出了几种典型场景下WAL的性能数据，了解到WAL确实有性能优势，这篇文章将会详细分析WAL的原理，做到知其然，更要知其所以然。WAL是什么 WAL(Write ahead logging)是一种日志模式，它是一种思想，普遍应用于关系型数据库。每...</summary>
    <published>2015-08-24T12:00:00Z</published>
    <updated>2015-08-24T12:00:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4754619.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4754619.html" />
    <content type="html">Sqlite学习笔记(三)&amp;amp;&amp;amp;WAL性能测试中列出了几种典型场景下WAL的性能数据，了解到WAL确实有性能优势，这篇文章将会详细分析WAL的原理，做到知其然，更要知其所以然。WAL是什么 WAL(Write ahead logging)是一种日志模式，它是一种思想，普遍应用于关系型数据库。每...&lt;img src="http://counter.cnblogs.com/blog/rss/4754619" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4754619.html" target="_blank"&gt;Sqlite学习笔记(四)&amp;amp;&amp;amp;SQLite-WAL原理&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4754580.html</id>
    <title type="text">Sqlite学习笔记(三)&amp;&amp;WAL性能测试 - 天士梦</title>
    <summary type="text">WAL是SQLite3.7.0版本引入的一个重大改进。SQLite官网宣称在很多使用场景下，WAL模型的性能都要好于默认的DELETE模式。下面将针对几个主要场景对WAL性能做测试，测试的硬件与xxx保持一致。纯写场景1) 测试说明 测试简单更新事务在WAL模式下与DELETE日志模式性能...</summary>
    <published>2015-08-24T05:56:00Z</published>
    <updated>2015-08-24T05:56:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4754580.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4754580.html" />
    <content type="html">WAL是SQLite3.7.0版本引入的一个重大改进。SQLite官网宣称在很多使用场景下，WAL模型的性能都要好于默认的DELETE模式。下面将针对几个主要场景对WAL性能做测试，测试的硬件与xxx保持一致。纯写场景1) 测试说明 测试简单更新事务在WAL模式下与DELETE日志模式性能...&lt;img src="http://counter.cnblogs.com/blog/rss/4754580" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4754580.html" target="_blank"&gt;Sqlite学习笔记(三)&amp;amp;&amp;amp;WAL性能测试&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4738002.html</id>
    <title type="text">Sqlite学习笔记(二)&amp;&amp;性能测试 - 天士梦</title>
    <summary type="text">测试目标获取SQlite的常规性能指标测试环境CPU：8核，Intel(R) Xeon(R) CPU E5-2430 0 @ 2.20GHz内存：16G磁盘：SSDLinux 2.6.32SQlite最新版本3.8.11测试场景1) 主键查询测试2) 主键更新测试3) 批量导入测试初始化1) 测试表...</summary>
    <published>2015-08-17T14:39:00Z</published>
    <updated>2015-08-17T14:39:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4738002.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4738002.html" />
    <content type="html">测试目标获取SQlite的常规性能指标测试环境CPU：8核，Intel(R) Xeon(R) CPU E5-2430 0 @ 2.20GHz内存：16G磁盘：SSDLinux 2.6.32SQlite最新版本3.8.11测试场景1) 主键查询测试2) 主键更新测试3) 批量导入测试初始化1) 测试表...&lt;img src="http://counter.cnblogs.com/blog/rss/4738002" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4738002.html" target="_blank"&gt;Sqlite学习笔记(二)&amp;amp;&amp;amp;性能测试&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4723672.html</id>
    <title type="text">sysbench测试工具 - 天士梦</title>
    <summary type="text">sysbench简介 Sysbench是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。它主要包括以下几种方式的测试：cpu性能，磁盘io性能，线程调度性能，内存分配及传输速度和数据库性能。由于本人是dba，因此重点关注sysbench测试数据库的场景...</summary>
    <published>2015-08-12T10:16:00Z</published>
    <updated>2015-08-12T10:16:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4723672.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4723672.html" />
    <content type="html">sysbench简介 Sysbench是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。它主要包括以下几种方式的测试：cpu性能，磁盘io性能，线程调度性能，内存分配及传输速度和数据库性能。由于本人是dba，因此重点关注sysbench测试数据库的场景...&lt;img src="http://counter.cnblogs.com/blog/rss/4723672" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4723672.html" target="_blank"&gt;sysbench测试工具&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4722931.html</id>
    <title type="text">Sqlite学习笔记(一)&amp;&amp;编译安装 - 天士梦</title>
    <summary type="text">Sqlite简介 sqlite是一个开源的嵌入式文件数据库，sqlite以动态链接库的方式供应用程序调用，所有的数据库对象都存储在同一个文件中。 sqlite动态库非常小，最新的3.8.11版本也只有500k左右。sqlite虽然小，但功能并不弱，它支持sql-92标准中大部分SQL规范， 支持...</summary>
    <published>2015-08-12T00:02:00Z</published>
    <updated>2015-08-12T00:02:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4722931.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4722931.html" />
    <content type="html">Sqlite简介 sqlite是一个开源的嵌入式文件数据库，sqlite以动态链接库的方式供应用程序调用，所有的数据库对象都存储在同一个文件中。 sqlite动态库非常小，最新的3.8.11版本也只有500k左右。sqlite虽然小，但功能并不弱，它支持sql-92标准中大部分SQL规范， 支持...&lt;img src="http://counter.cnblogs.com/blog/rss/4722931" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4722931.html" target="_blank"&gt;Sqlite学习笔记(一)&amp;amp;&amp;amp;编译安装&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4639397.html</id>
    <title type="text">MySQL online ddl原理 - 天士梦</title>
    <summary type="text">背景 dba的日常工作肯定有一项是ddl变更，ddl变更会锁表，这个可以说是dba心中永远的痛，特别是执行ddl变更，导致库上大量线程处于“Waiting for meta data lock”状态的时候。因此mysql 5.6的online ddl特性是dba们最期待的新特性，这个特性解决了执行...</summary>
    <published>2015-07-11T13:40:00Z</published>
    <updated>2015-07-11T13:40:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4639397.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4639397.html" />
    <content type="html">背景 dba的日常工作肯定有一项是ddl变更，ddl变更会锁表，这个可以说是dba心中永远的痛，特别是执行ddl变更，导致库上大量线程处于“Waiting for meta data lock”状态的时候。因此mysql 5.6的online ddl特性是dba们最期待的新特性，这个特性解决了执行...&lt;img src="http://counter.cnblogs.com/blog/rss/4639397" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4639397.html" target="_blank"&gt;MySQL online ddl原理&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/cchust/p/4603599.html</id>
    <title type="text">FLUSH TABLE WITH READ LOCK详解 - 天士梦</title>
    <summary type="text">FLUSH TABLES WITH READ LOCK简称(FTWRL)，该命令主要用于备份工具获取一致性备份(数据与binlog位点匹配)。由于FTWRL总共需要持有两把全局的MDL锁，并且还需要关闭所有表对象，因此这个命令的杀伤性很大，执行命令时容易导致库hang住。如果是主库，则业务无法...</summary>
    <published>2015-06-27T00:50:00Z</published>
    <updated>2015-06-27T00:50:00Z</updated>
    <author>
      <name>天士梦</name>
      <uri>http://www.cnblogs.com/cchust/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/cchust/p/4603599.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/cchust/p/4603599.html" />
    <content type="html">FLUSH TABLES WITH READ LOCK简称(FTWRL)，该命令主要用于备份工具获取一致性备份(数据与binlog位点匹配)。由于FTWRL总共需要持有两把全局的MDL锁，并且还需要关闭所有表对象，因此这个命令的杀伤性很大，执行命令时容易导致库hang住。如果是主库，则业务无法...&lt;img src="http://counter.cnblogs.com/blog/rss/4603599" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/cchust/p/4603599.html" target="_blank"&gt;FLUSH TABLE WITH READ LOCK详解&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>