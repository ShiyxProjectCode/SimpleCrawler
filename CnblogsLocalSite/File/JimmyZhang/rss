<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_张子阳</title>
  <subtitle type="text">平心静气 多思多闻 ...</subtitle>
  <id>uuid:a9715208-ba20-4b4a-98b1-a70df64202e6;id=5179</id>
  <updated>2015-09-11T07:20:54Z</updated>
  <author>
    <name>Jimmy Zhang</name>
    <uri>http://www.cnblogs.com/JimmyZhang/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/p/3504903.html</id>
    <title type="text">《.NET之美》消息及勘误 - Jimmy Zhang</title>
    <summary type="text">.NET之美 已经发售了，感谢大家的关注~！</summary>
    <published>2014-01-04T07:26:00Z</published>
    <updated>2014-01-04T07:26:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/p/3504903.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/p/3504903.html" />
    <content type="html">.NET之美 已经发售了，感谢大家的关注~！&lt;img src="http://counter.cnblogs.com/blog/rss/3504903" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/p/3504903.html" target="_blank"&gt;《.NET之美》消息及勘误&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2013/06/05/3118936.html</id>
    <title type="text">.Net 项目代码风格要求 - Jimmy Zhang</title>
    <summary type="text">代码风格没有正确与否，重要的是整齐划一，这是我拟的一份《项目代码风格要求》，供大家参考。</summary>
    <published>2013-06-05T06:59:00Z</published>
    <updated>2013-06-05T06:59:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2013/06/05/3118936.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2013/06/05/3118936.html" />
    <content type="html">代码风格没有正确与否，重要的是整齐划一，这是我拟的一份《项目代码风格要求》，供大家参考。&lt;img src="http://counter.cnblogs.com/blog/rss/3118936" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2013/06/05/3118936.html" target="_blank"&gt;.Net 项目代码风格要求&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2012/11/27/2790759.html</id>
    <title type="text">.NET框架 - Jimmy Zhang</title>
    <summary type="text">.NET平台这个话题最近比较火，那么就聊聊吧。没有将全部章节发布出来，是因为想给以后买书的朋友留点实惠。</summary>
    <published>2012-11-27T06:50:00Z</published>
    <updated>2012-11-27T06:50:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2012/11/27/2790759.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2012/11/27/2790759.html" />
    <content type="html">.NET平台这个话题最近比较火，那么就聊聊吧。没有将全部章节发布出来，是因为想给以后买书的朋友留点实惠。&lt;img src="http://counter.cnblogs.com/blog/rss/2790759" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2012/11/27/2790759.html" target="_blank"&gt;.NET框架&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/12/17/1356727.html</id>
    <title type="text">C#中的泛型 - Jimmy Zhang</title>
    <summary type="text">.Net 中泛型的由来。</summary>
    <published>2008-12-17T05:15:00Z</published>
    <updated>2008-12-17T05:15:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/17/1356727.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/17/1356727.html" />
    <content type="html">.Net 中泛型的由来。&lt;img src="http://counter.cnblogs.com/blog/rss/1356727" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/17/1356727.html" target="_blank"&gt;C#中的泛型&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349457.html</id>
    <title type="text">Asp.Net 用户验证(自定义IPrincipal和IIdentity) - Jimmy Zhang</title>
    <summary type="text">.NET的安全机制包括了几个部分，除了验证以外，还包括MemberShip、Profile、Role等，我们完全可以只使用它的验证机制，而绕过它的MemberShip、Profile和Role，来实现通常我们用Cookie+Session完成的功能，而且更高效更安全。这篇文章将快速地实现这样的一个流程。</summary>
    <published>2008-12-07T12:41:00Z</published>
    <updated>2008-12-07T12:41:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349457.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349457.html" />
    <content type="html">.NET的安全机制包括了几个部分，除了验证以外，还包括MemberShip、Profile、Role等，我们完全可以只使用它的验证机制，而绕过它的MemberShip、Profile和Role，来实现通常我们用Cookie+Session完成的功能，而且更高效更安全。这篇文章将快速地实现这样的一个流程。&lt;img src="http://counter.cnblogs.com/blog/rss/1349457" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349457.html" target="_blank"&gt;Asp.Net 用户验证(自定义IPrincipal和IIdentity)&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349454.html</id>
    <title type="text">从一个范例看XML的应用 - Jimmy Zhang</title>
    <summary type="text">这篇文章将构建一个简单的图书查询页面，通过这个程序，我们将会看到XML、XSD模式验证、XSLT样式转换，以及Asp.Net脚本回调功能的一个综合应用。</summary>
    <published>2008-12-06T18:04:00Z</published>
    <updated>2008-12-06T18:04:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349454.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349454.html" />
    <content type="html">这篇文章将构建一个简单的图书查询页面，通过这个程序，我们将会看到XML、XSD模式验证、XSLT样式转换，以及Asp.Net脚本回调功能的一个综合应用。&lt;img src="http://counter.cnblogs.com/blog/rss/1349454" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/12/07/1349454.html" target="_blank"&gt;从一个范例看XML的应用&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327711.html</id>
    <title type="text">[编]使用AutoCompleteExtender实现文本框自动匹配 - Jimmy Zhang</title>
    <summary type="text">这篇文章简单地介绍了Ajax Control Toolkit中的AutoCompleteExtender如何使用，顾名思义，它可以实现一个常见的效果：AutoComplete（自动匹配）。</summary>
    <published>2008-11-05T15:41:00Z</published>
    <updated>2008-11-05T15:41:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327711.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327711.html" />
    <content type="html">这篇文章简单地介绍了Ajax Control Toolkit中的AutoCompleteExtender如何使用，顾名思义，它可以实现一个常见的效果：AutoComplete（自动匹配）。&lt;img src="http://counter.cnblogs.com/blog/rss/1327711" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327711.html" target="_blank"&gt;[编]使用AutoCompleteExtender实现文本框自动匹配&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327710.html</id>
    <title type="text">[编]使用CascadingDropDown实现级联式下拉框 - Jimmy Zhang</title>
    <summary type="text">记得以前做Asp的时候，做一个级联式下拉框需要花费不少的力气，编写不少的javascript代码。如今到了Asp.Net时代，使用Ajax Control Toolkit中的CascadingDropDown控件，再配合普通的DropDownList控件以及Web Serive，实现这样一个功能变得非常得容易。本文将一步步来实现它。</summary>
    <published>2008-11-05T15:41:00Z</published>
    <updated>2008-11-05T15:41:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327710.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327710.html" />
    <content type="html">记得以前做Asp的时候，做一个级联式下拉框需要花费不少的力气，编写不少的javascript代码。如今到了Asp.Net时代，使用Ajax Control Toolkit中的CascadingDropDown控件，再配合普通的DropDownList控件以及Web Serive，实现这样一个功能变得非常得容易。本文将一步步来实现它。&lt;img src="http://counter.cnblogs.com/blog/rss/1327710" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327710.html" target="_blank"&gt;[编]使用CascadingDropDown实现级联式下拉框&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327709.html</id>
    <title type="text">Asp.Net Ajax的两种基本开发模式 - Jimmy Zhang</title>
    <summary type="text">这篇文章介绍了使用Asp.Net Ajax做开发时两种最常见的与服务端进行交互（客户端请求服务端执行逻辑，服务端返回结果）的开发模式。第一种我姑且称为UpdatePanel模式，第二种称为Web Service（WCF Service）模式。</summary>
    <published>2008-11-05T15:40:00Z</published>
    <updated>2008-11-05T15:40:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327709.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327709.html" />
    <content type="html">这篇文章介绍了使用Asp.Net Ajax做开发时两种最常见的与服务端进行交互（客户端请求服务端执行逻辑，服务端返回结果）的开发模式。第一种我姑且称为UpdatePanel模式，第二种称为Web Service（WCF Service）模式。&lt;img src="http://counter.cnblogs.com/blog/rss/1327709" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/11/05/1327709.html" target="_blank"&gt;Asp.Net Ajax的两种基本开发模式&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/JimmyZhang/archive/2008/10/02/1303137.html</id>
    <title type="text">四种简单的排序算法 - Jimmy Zhang</title>
    <summary type="text">本文简要描述了四种最简单的排序方法，插入排序、泡沫排序、选择排序、希尔排序，并分别使用C#和C++语言进行了实现。</summary>
    <published>2008-10-02T07:06:00Z</published>
    <updated>2008-10-02T07:06:00Z</updated>
    <author>
      <name>Jimmy Zhang</name>
      <uri>http://www.cnblogs.com/JimmyZhang/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/JimmyZhang/archive/2008/10/02/1303137.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/JimmyZhang/archive/2008/10/02/1303137.html" />
    <content type="html">本文简要描述了四种最简单的排序方法，插入排序、泡沫排序、选择排序、希尔排序，并分别使用C#和C++语言进行了实现。&lt;img src="http://counter.cnblogs.com/blog/rss/1303137" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/JimmyZhang/archive/2008/10/02/1303137.html" target="_blank"&gt;四种简单的排序算法&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>