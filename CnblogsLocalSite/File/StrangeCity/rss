<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_陌城</title>
  <subtitle type="text">—— 悟、底蕴、修罅隙、天道酬勤</subtitle>
  <id>uuid:8dc7efba-43f2-4416-95a0-534dced3b48f;id=4546</id>
  <updated>2015-09-17T03:34:11Z</updated>
  <author>
    <name>陌城</name>
    <uri>http://www.cnblogs.com/StrangeCity/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/StrangeCity/p/4795117.html</id>
    <title type="text">给各位聚聚和大大介绍一个开源项目 Expression2Sql - 陌城</title>
    <summary type="text">一、Expression2Sql介绍 Expression2Sql是一个可以将Expression表达式树解析成Transact-SQL的开源项目。简单易用，几分钟即可上手使用，因为博主在设计Expression2Sql的时候就尽可能的按照Transact-SQL的语法语义风格来设计，只要调用者...</summary>
    <published>2015-09-10T23:34:00Z</published>
    <updated>2015-09-10T23:34:00Z</updated>
    <author>
      <name>陌城</name>
      <uri>http://www.cnblogs.com/StrangeCity/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/StrangeCity/p/4795117.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/StrangeCity/p/4795117.html" />
    <content type="html">一、Expression2Sql介绍 Expression2Sql是一个可以将Expression表达式树解析成Transact-SQL的开源项目。简单易用，几分钟即可上手使用，因为博主在设计Expression2Sql的时候就尽可能的按照Transact-SQL的语法语义风格来设计，只要调用者...&lt;img src="http://counter.cnblogs.com/blog/rss/4795117" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/StrangeCity/p/4795117.html" target="_blank"&gt;给各位聚聚和大大介绍一个开源项目 Expression2Sql&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/StrangeCity/p/4372514.html</id>
    <title type="text">记一次随机字符串生成算法的随机概率与性能的提升 - 陌城</title>
    <summary type="text">一、前言背景前几天我部门一个和银行对接的项目中出现了业务Id重复的现象，导致了很多之前不可预见的bug。由于该项目有资金流动，涉及到金钱交易，故不敢有任何闪失。于是leader把同事写的Handler.ashx.cs发给我瞧了瞧，其中的一处流水号生成代码引起了我的注意。代码如下：string[] s...</summary>
    <published>2015-03-31T00:22:00Z</published>
    <updated>2015-03-31T00:22:00Z</updated>
    <author>
      <name>陌城</name>
      <uri>http://www.cnblogs.com/StrangeCity/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/StrangeCity/p/4372514.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/StrangeCity/p/4372514.html" />
    <content type="html">一、前言背景前几天我部门一个和银行对接的项目中出现了业务Id重复的现象，导致了很多之前不可预见的bug。由于该项目有资金流动，涉及到金钱交易，故不敢有任何闪失。于是leader把同事写的Handler.ashx.cs发给我瞧了瞧，其中的一处流水号生成代码引起了我的注意。代码如下：string[] s...&lt;img src="http://counter.cnblogs.com/blog/rss/4372514" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/StrangeCity/p/4372514.html" target="_blank"&gt;记一次随机字符串生成算法的随机概率与性能的提升&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/StrangeCity/p/4356009.html</id>
    <title type="text">基于队列且线程安全的日志打印控件 - 陌城</title>
    <summary type="text">一、前言背景 最近博主在做服务程序开发的时候，用的是控制台的非图形图像的界面。然后采用了log4net作为日志打印组件，在配置文件里面做了一些配置项。在控制台输出的时候，针对不同的日志级别，定义了不同的文字颜色在控制台中进行字符串输出。然后博主联想到winform程序也存在界面上的日志打印需求，...</summary>
    <published>2015-03-26T07:06:00Z</published>
    <updated>2015-03-26T07:06:00Z</updated>
    <author>
      <name>陌城</name>
      <uri>http://www.cnblogs.com/StrangeCity/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/StrangeCity/p/4356009.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/StrangeCity/p/4356009.html" />
    <content type="html">一、前言背景 最近博主在做服务程序开发的时候，用的是控制台的非图形图像的界面。然后采用了log4net作为日志打印组件，在配置文件里面做了一些配置项。在控制台输出的时候，针对不同的日志级别，定义了不同的文字颜色在控制台中进行字符串输出。然后博主联想到winform程序也存在界面上的日志打印需求，...&lt;img src="http://counter.cnblogs.com/blog/rss/4356009" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/StrangeCity/p/4356009.html" target="_blank"&gt;基于队列且线程安全的日志打印控件&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/StrangeCity/p/4352753.html</id>
    <title type="text">c#.net快学系列一之30分钟搞定代码生成器 - 陌城</title>
    <summary type="text">哇咔咔，离上次写文又有几个月了。不过上次写的《这些开源项目，你都知道吗？（持续更新中...）[原创]》受到广大读者的赞赏和推荐，也使得自己更有动力去写技术文章。好了，废话不多说，直接切入正题。 前方高能预警，由于此篇博文适合初学者入门或者各种大牛老男孩怀念那些年我们一起写过的代码生成器...</summary>
    <published>2015-03-20T00:50:00Z</published>
    <updated>2015-03-20T00:50:00Z</updated>
    <author>
      <name>陌城</name>
      <uri>http://www.cnblogs.com/StrangeCity/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/StrangeCity/p/4352753.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/StrangeCity/p/4352753.html" />
    <content type="html">哇咔咔，离上次写文又有几个月了。不过上次写的《这些开源项目，你都知道吗？（持续更新中...）[原创]》受到广大读者的赞赏和推荐，也使得自己更有动力去写技术文章。好了，废话不多说，直接切入正题。 前方高能预警，由于此篇博文适合初学者入门或者各种大牛老男孩怀念那些年我们一起写过的代码生成器...&lt;img src="http://counter.cnblogs.com/blog/rss/4352753" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/StrangeCity/p/4352753.html" target="_blank"&gt;c#.net快学系列一之30分钟搞定代码生成器&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/StrangeCity/p/OpenSourceProject.html</id>
    <title type="text">这些开源项目，你都知道吗？（持续更新中...） - 陌城</title>
    <summary type="text">Json.NEThttp://json.codeplex.com/Json.Net是一个读写Json效率比较高的.Net框架.Json.Net 使得在.Net环境下使用Json更加简单。通过Linq To JSON可以快速的读写Json，通过JsonSerializer可以序列化你的.Net对象。让...</summary>
    <published>2014-02-10T03:15:00Z</published>
    <updated>2014-02-10T03:15:00Z</updated>
    <author>
      <name>陌城</name>
      <uri>http://www.cnblogs.com/StrangeCity/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/StrangeCity/p/OpenSourceProject.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/StrangeCity/p/OpenSourceProject.html" />
    <content type="html">Json.NEThttp://json.codeplex.com/Json.Net是一个读写Json效率比较高的.Net框架.Json.Net 使得在.Net环境下使用Json更加简单。通过Linq To JSON可以快速的读写Json，通过JsonSerializer可以序列化你的.Net对象。让...&lt;img src="http://counter.cnblogs.com/blog/rss/3535052" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/StrangeCity/p/OpenSourceProject.html" target="_blank"&gt;这些开源项目，你都知道吗？（持续更新中...）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>