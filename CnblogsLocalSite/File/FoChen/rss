<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_一滩水</title>
  <subtitle type="text">一滴一世界</subtitle>
  <id>uuid:0bb2c06b-d269-4a25-bf66-9a76e4d41f13;id=4136</id>
  <updated>2015-08-29T13:46:16Z</updated>
  <author>
    <name>fochen</name>
    <uri>http://www.cnblogs.com/FoChen/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/4740814.html</id>
    <title type="text">rsa互通密钥对生成及互通加解密(c#,java,php) - fochen</title>
    <summary type="text">在数据安全上rsa起着非常大的作用，特别是数据网络通讯的安全上。当异构系统在数据网络通讯上对安全性有所要求时，rsa将作为其中的一种选择，此时rsa的互通性就显得尤为重要了。 本文参考网络资料，提供了rsa互通性的一种可行的解决方案(c#,java,php),而这种互通性是在一定的局限性上达成的，比如密钥是1024位的，基于PKCS1填充方式。 所编写的代码有一部分使用了硬编码，同时注重了功能的实现，在类结构设计上关注不多，有需要的可自行修改重构。 相关的程序集或包或代码请详见本文末尾附件。</summary>
    <published>2015-08-19T09:31:00Z</published>
    <updated>2015-08-19T09:31:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/4740814.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/4740814.html" />
    <content type="html">在数据安全上rsa起着非常大的作用，特别是数据网络通讯的安全上。当异构系统在数据网络通讯上对安全性有所要求时，rsa将作为其中的一种选择，此时rsa的互通性就显得尤为重要了。本文参考网络资料，提供了rsa互通性的一种可行的解决方案(c#,java,php),而这种互通性是在一定的局限性上达成的，比如密钥是1024位的，基于PKCS1填充方式。所编写的代码有一部分使用了硬编码，同时注重了功能的实现，在类结构设计上关注不多，有需要的可自行修改重构。相关的程序集或包或代码请详见本文末尾附件。&lt;img src="http://counter.cnblogs.com/blog/rss/4740814" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/4740814.html" target="_blank"&gt;rsa互通密钥对生成及互通加解密(c#,java,php)&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/4583313.html</id>
    <title type="text">JKS TO PEM - fochen</title>
    <summary type="text">tomcat 的ssl 会使用到jks，而haproxy的ssl（非tcp代理方式）会使用到pem如果从tomcat的ssl需要迁移到haproxy的ssl，就需要从jks中读取相关信息生成pem文件。========================先通过keytool导出成PKCS12格式(.p1...</summary>
    <published>2015-06-17T06:50:00Z</published>
    <updated>2015-06-17T06:50:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/4583313.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/4583313.html" />
    <content type="html">tomcat 的ssl 会使用到jks，而haproxy的ssl（非tcp代理方式）会使用到pem如果从tomcat的ssl需要迁移到haproxy的ssl，就需要从jks中读取相关信息生成pem文件。========================先通过keytool导出成PKCS12格式(.p1...&lt;img src="http://counter.cnblogs.com/blog/rss/4583313" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/4583313.html" target="_blank"&gt;JKS TO PEM&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/4570990.html</id>
    <title type="text">.net解决程序集版本冲突的方法 - fochen</title>
    <summary type="text">以log4net为例，分为两种情况1.不同version，相同publicKeyToken在bin里放较新版本的dll并在web|app.config的下放 ...</summary>
    <published>2015-06-12T02:07:00Z</published>
    <updated>2015-06-12T02:07:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/4570990.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/4570990.html" />
    <content type="html">以log4net为例，分为两种情况1.不同version，相同publicKeyToken在bin里放较新版本的dll并在web|app.config的下放 ...&lt;img src="http://counter.cnblogs.com/blog/rss/4570990" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/4570990.html" target="_blank"&gt;.net解决程序集版本冲突的方法&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/3739512.html</id>
    <title type="text">AlwaysOn添加高可用性自定义登陆用户的方法 - fochen</title>
    <summary type="text">1.在主服务器添加自定义登陆用户，比如TestUser2.在主服务器执行如下SQL，在master数据库创建存储过程sp_hexadecimal，sp_help_revloginUSE masterGOIF OBJECT_ID ('sp_hexadecimal') IS NOT NULL DROP...</summary>
    <published>2014-05-20T11:05:00Z</published>
    <updated>2014-05-20T11:05:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/3739512.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/3739512.html" />
    <content type="html">1.在主服务器添加自定义登陆用户，比如TestUser2.在主服务器执行如下SQL，在master数据库创建存储过程sp_hexadecimal，sp_help_revloginUSE masterGOIF OBJECT_ID (&amp;#39;sp_hexadecimal&amp;#39;) IS NOT NULL DROP...&lt;img src="http://counter.cnblogs.com/blog/rss/3739512" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/3739512.html" target="_blank"&gt;AlwaysOn添加高可用性自定义登陆用户的方法&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/3668688.html</id>
    <title type="text">兼容性js中setTimeout 传参“保值”方案 - fochen</title>
    <summary type="text">这里所谓“保值”，是指在setTimeout中指定的时间后，执行指定的方法所用到的“参数”值，跟执行setTimeout时该“参数”值一样。是不是有点懵？看如下例子：=========================================for(var i=0;i&lt;10;i++) { ...</summary>
    <published>2014-04-16T07:10:00Z</published>
    <updated>2014-04-16T07:10:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/3668688.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/3668688.html" />
    <content type="html">这里所谓“保值”，是指在setTimeout中指定的时间后，执行指定的方法所用到的“参数”值，跟执行setTimeout时该“参数”值一样。是不是有点懵？看如下例子：=========================================for(var i=0;i&amp;lt;10;i++) { ...&lt;img src="http://counter.cnblogs.com/blog/rss/3668688" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/3668688.html" target="_blank"&gt;兼容性js中setTimeout 传参“保值”方案&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/3443951.html</id>
    <title type="text">Windows 2008 R2 强制删除Cluster - fochen</title>
    <summary type="text">在正常删除Cluster 节点之后，再添加节点时，报“节点已经加入群集”，无法加入，注册表信息删除后可正常移除Cluster服务,如下:HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\ClusDiskHKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\ClusSvc转自：http://blog.csdn.net/snowfoxmonitor/article/details/7654593</summary>
    <published>2013-11-26T11:27:00Z</published>
    <updated>2013-11-26T11:27:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/3443951.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/3443951.html" />
    <content type="html">在正常删除Cluster 节点之后，再添加节点时，报“节点已经加入群集”，无法加入，注册表信息删除后可正常移除Cluster服务,如下:HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\ClusDiskHKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\ClusSvc转自：http://blog.csdn.net/snowfoxmonitor/article/details/7654593&lt;img src="http://counter.cnblogs.com/blog/rss/3443951" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/3443951.html" target="_blank"&gt;Windows 2008 R2 强制删除Cluster&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/p/3257566.html</id>
    <title type="text">asp.net4.0在Global中的Application_Start 中直接或间接使用 HttpUtility.UrlEncode等出现异常Response is not available in this context的解决方法 - fochen</title>
    <summary type="text">HttpUtility.HtmlEncode HttpUtility.HtmlDecode HttpUtility.UrlEncode HttpUtility.UrlDecode 也会出现此异常。这是asp.net的一个bug。http://connect.microsoft.com/VisualStudio/feedback/details/578670/httputility-htmlencode-fails-in-application-start-with-response-is-not-available-in-this-context装上 .net4.5即可解决。</summary>
    <published>2013-08-14T08:54:00Z</published>
    <updated>2013-08-14T08:54:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/p/3257566.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/p/3257566.html" />
    <content type="html">HttpUtility.HtmlEncode HttpUtility.HtmlDecode HttpUtility.UrlEncode HttpUtility.UrlDecode 也会出现此异常。这是asp.net的一个bug。http://connect.microsoft.com/VisualStudio/feedback/details/578670/httputility-htmlencode-fails-in-application-start-with-response-is-not-available-in-this-context装上 .net4.5即可解决。&lt;img src="http://counter.cnblogs.com/blog/rss/3257566" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/p/3257566.html" target="_blank"&gt;asp.net4.0在Global中的Application_Start 中直接或间接使用 HttpUtility.UrlEncode等出现异常Response is not available in this context的解决方法&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/archive/2013/04/11/3015279.html</id>
    <title type="text">T-SQL 随机生成中文 - fochen</title>
    <summary type="text">对应的unicode 范围：\u4e00-\u9FA5select nchar(19968+rand()*(40869-19968))</summary>
    <published>2013-04-11T12:01:00Z</published>
    <updated>2013-04-11T12:01:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3015279.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3015279.html" />
    <content type="html">对应的unicode 范围：\u4e00-\u9FA5select nchar(19968+rand()*(40869-19968))&lt;img src="http://counter.cnblogs.com/blog/rss/3015279" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3015279.html" target="_blank"&gt;T-SQL 随机生成中文&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/archive/2013/04/11/3014488.html</id>
    <title type="text">C#——db的数据类型对应 - fochen</title>
    <summary type="text">C#——db的数据类型对应AnsiString:VarCharBinary:VarBinaryByte:TinyIntBoolean:BitCurrency:MoneyDate:DateTimeDateTime:DateTimeDecimal:DecimalDouble:FloatGuid:UniqueIdentifierInt16:SmallIntInt32:IntInt64:BigIntObject:VariantSingle:RealString:NVarCharTime:DateTimeAnsiStringFixedLength:CharStringFixedLength:NCharX</summary>
    <published>2013-04-11T06:50:00Z</published>
    <updated>2013-04-11T06:50:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3014488.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3014488.html" />
    <content type="html">C#——db的数据类型对应AnsiString:VarCharBinary:VarBinaryByte:TinyIntBoolean:BitCurrency:MoneyDate:DateTimeDateTime:DateTimeDecimal:DecimalDouble:FloatGuid:UniqueIdentifierInt16:SmallIntInt32:IntInt64:BigIntObject:VariantSingle:RealString:NVarCharTime:DateTimeAnsiStringFixedLength:CharStringFixedLength:NCharX&lt;img src="http://counter.cnblogs.com/blog/rss/3014488" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/archive/2013/04/11/3014488.html" target="_blank"&gt;C#——db的数据类型对应&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/FoChen/archive/2013/04/08/3007178.html</id>
    <title type="text">T-SQL 在查询结果中添加一列不重复的随机数 - fochen</title>
    <summary type="text">如果 如下处理select *,rand()*1000 as rfrom t那生成的 r列 都是同一个数。解决方式：select *,rand(ABS(CHECKSUM(NEWID()))) as rfrom t结果：延伸应用场景：将原先的测试数据的操作时间打散到过去的近3个月内update [tbDoc] set OperateDate = DATEADD(dd,-90*rand(ABS(CHECKSUM(NEWID()))),getdate())注：如果 是-90*rand() 则被更新的列的值将是同一个数！</summary>
    <published>2013-04-08T04:27:00Z</published>
    <updated>2013-04-08T04:27:00Z</updated>
    <author>
      <name>fochen</name>
      <uri>http://www.cnblogs.com/FoChen/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/FoChen/archive/2013/04/08/3007178.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/FoChen/archive/2013/04/08/3007178.html" />
    <content type="html">如果 如下处理select *,rand()*1000 as rfrom t那生成的 r列 都是同一个数。解决方式：select *,rand(ABS(CHECKSUM(NEWID()))) as rfrom t结果：延伸应用场景：将原先的测试数据的操作时间打散到过去的近3个月内update [tbDoc] set OperateDate = DATEADD(dd,-90*rand(ABS(CHECKSUM(NEWID()))),getdate())注：如果 是-90*rand() 则被更新的列的值将是同一个数！&lt;img src="http://counter.cnblogs.com/blog/rss/3007178" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/FoChen/archive/2013/04/08/3007178.html" target="_blank"&gt;T-SQL 在查询结果中添加一列不重复的随机数&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>