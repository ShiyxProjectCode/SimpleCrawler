<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" title="XSL Formatting" href="/rss.xsl" media="all" ?>
<rss version="2.0">
<channel>
    <title>Hackbuteer1的专栏</title>
    <image>
    <link>http://blog.csdn.net</link>
    <url>http://static.blog.csdn.net/images/logo.gif</url>
    </image>
    <description>走别人没走过的路，让别人有路可走。</description>
	<link>http://blog.csdn.net/hackbuteer1</link>
	<language>zh-cn</language>
	<generator>http://blog.csdn.net</generator>
	<ttl>5</ttl>
	<copyright><![CDATA[Copyright &copy; Hackbuteer1]]></copyright> 
	<pubDate>2015/9/17 14:29:51</pubDate>
    <item>
        <title><![CDATA[[原]2015届华为校园招聘机试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/39253767</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/39253767</guid>
        <author>Hackbuteer1</author>
        <pubDate>2014/9/13 18:25:59</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:18px">第一题(60分)：<br>
&nbsp; &nbsp; &nbsp; &nbsp;按要求分解字符串，输入两个数M，N；M代表输入的M串字符串，N代表输出的每串字符串的位数，不够补0。例如：输入2,8， “abc” ，“123456789”，则输出为“abc00000”,“12345678“,”90000000”<br>
</span><span style="font-family:Verdana; font-size:18px"></span><pre name="code" class="cpp">转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/39253767
#include&lt;iostream&gt;
#include&lt;cstdio&gt;
using namespace std;

void solve(char *str , int n , int len)
{
	int i , j , k , quotient , remainder;
	quotient = len / n;                //原字符串被分解的个数
	remainder = len - n * quotient;    //剩余的字符串的个数

	for(i = 0 ; i &lt; len ; i += n)
	{
		if(len - i &lt; n)
		{
			 k = n - len + i;
			 for(j = i ; j &lt; len ; ++j)
				 printf(&quot;%c&quot; , str[j]);
			 for(j = 0 ; j &lt; k ; ++j)
				 putchar(&#39;0&#39;);
		}
		else
		{
			for(j = i ; j &lt; i + n ; ++j)
				printf(&quot;%c&quot; , str[j]);
		}
		putchar(&#39; &#39;);
	}
	printf(&quot;\n&quot;);
}

int main(void)
{
	int i , m , n , len;
	char str[1000];

	while(scanf(&quot;%d %d&quot;, &amp;m , &amp;n) != EOF)
	{
		for(i = 0 ; i &lt; m ; ++i)
		{
			scanf(&quot;%s&quot; , str);
			len = strlen(str);
			solve(str , n , len);
		}
	}
	return 0;
}</pre><span style="font-family:Verdana; font-size:18px">第一题：拼音转数字<br>
输入是一个只包含拼音的字符串，请输出对应的数字序列。转换关系如下：<br>
描述： &nbsp; &nbsp; &nbsp;拼音 &nbsp; &nbsp; &nbsp; &nbsp;yi &nbsp;er &nbsp;san &nbsp;si &nbsp;wu &nbsp;liu &nbsp;qi &nbsp;ba &nbsp;jiu<br>
&nbsp; &nbsp; &nbsp; 阿拉伯数字 &nbsp; &nbsp; &nbsp; &nbsp;1 &nbsp; 2 &nbsp; 3 &nbsp; &nbsp; &nbsp;4 &nbsp; 5 &nbsp; &nbsp;6 &nbsp; &nbsp;7 &nbsp; 8 &nbsp; 9<br>
输入字符只包含小写字母，所有字符都可以正好匹配<br>
<br>
运行时间限制：无限制<br>
内存限制： &nbsp; &nbsp; &nbsp; 无限制<br>
输入： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;一行字符串，长度小于1000<br>
输出： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;一行字符（数字）串<br>
样例输入： &nbsp; &nbsp; &nbsp; yiersansi<br>
样例输出： &nbsp; &nbsp; &nbsp; 1234</span><br style="font-family:Verdana; font-size:18px">
<span style="font-family:Verdana; font-size:18px"></span><pre name="code" class="cpp">转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/39253767
#include&lt;iostream&gt;
#include&lt;cstdio&gt;
using namespace std;

void solve(char *str , int len)
{
	int i;

	for(i = 0 ; i &lt; len ; )
	{
		switch(str[i])
		{
		case &#39;y&#39;:
			putchar(&#39;1&#39;);
			i += 2;
			break;
		case &#39;e&#39;:
			putchar(&#39;2&#39;);
			i += 2;
			break;
		case &#39;s&#39;:
			if(str[i + 1] == &#39;a&#39;)
			{
				putchar(&#39;3&#39;);
				i += 3;
			}
			else
			{
				putchar(&#39;4&#39;);
				i += 2;
			}
			break;
		case &#39;w&#39;:
			putchar(&#39;5&#39;);
			i += 2;
			break;
		case &#39;l&#39;:
			putchar(&#39;6&#39;);
			i += 3;
			break;
		case &#39;q&#39;:
			putchar(&#39;7&#39;);
			i += 2;
			break;
		case &#39;b&#39;:
			putchar(&#39;8&#39;);
			i += 2;
			break;
		case &#39;j&#39;:
			putchar(&#39;9&#39;);
			i += 3;
			break;
		}
	}
	printf(&quot;\n&quot;);
}

int main(void)
{
	int len;
	char str[1000];

	while(scanf(&quot;%s&quot; , str) != EOF)
	{
		len = strlen(str);
		solve(str , len);
	}
	return 0;
}</pre><span style="font-family:Verdana; font-size:18px">第二题：去除重复字符并排序<br>
运行时间限制：无限制<br>
内容限制： &nbsp; &nbsp; &nbsp; 无限制<br>
输入： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;字符串<br>
输出： &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;去除重复字符并排序的字符串<br>
样例输入： &nbsp; &nbsp; &nbsp; aabcdefff<br>
<span style="font-family:Verdana; font-size:18px"><span style="font-family:Verdana; font-size:18px">样例输出： &nbsp; &nbsp; &nbsp; abcdef</span></span><br style="font-family:Verdana; font-size:18px">
<span style="font-family:Verdana; font-size:18px"></span></span><pre name="code" class="cpp">转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/39253767
#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;memory&gt;
using namespace std;

void solve(char *str , int len)
{
	int i , hash[256];
	memset(hash , 0 , sizeof(hash));

	for(i = 0 ; i &lt; len ; ++i)
	{
		if(0 == hash[str[i]])
			hash[str[i]] = 1;
	}
	for(i = 0 ; i &lt; 256 ; ++i)
	{
		if(0 != hash[i])
			putchar(i);
	}
	printf(&quot;\n&quot;);
}

int main(void)
{
	int len;
	char str[1000];

	while(scanf(&quot;%s&quot; , str) != EOF)
	{
		len = strlen(str);
		solve(str , len);
	}
	return 0;
}</pre><span style="font-family:Verdana; font-size:18px">第三题：等式变换<br>
输入一个正整数X，在下面的等式左边的数字之间添加&#43;号或者-号，使得等式成立。<br>
1 2 3 4 5 6 7 8 9 = X<br>
比如：<br>
12-34&#43;5-67&#43;89 = 5<br>
1&#43;23&#43;4-5&#43;6-7-8-9 = 5<br>
请编写程序，统计满足输入整数的所有整数个数。<br>
输入： &nbsp; &nbsp; &nbsp; 正整数，等式右边的数字<br>
输出： &nbsp; &nbsp; &nbsp; 使该等式成立的个数<br>
样例输入：5<br>
样例输出：21<br>
</span><pre name="code" class="cpp">转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/39253767
#include&lt;iostream&gt;
#include&lt;cstdio&gt;
using namespace std;

int ops[21];
const char sym[3] = {&#39;+&#39; , &#39;-&#39; , &#39; &#39;};
int result , num;

void dfs(int layer, int currentResult, int lastOp, int lastSum)
{
	lastSum *= (layer &gt; 9) ? 100 : 10;
	lastSum += layer;
	if(layer == 9)
	{
		currentResult += (lastOp) ? (-1 * lastSum) : lastSum;
		if(currentResult == result)
		{
			++num;
			printf(&quot;1&quot;);
			for(int i = 2 ; i &lt;= 9 ; ++i)
			{
				if(sym[ops[i-1]] != &#39; &#39;)
					printf(&quot; %c &quot;, sym[ops[i-1]]);
				printf(&quot;%d&quot;, i);
			}
			printf(&quot; = %d\n&quot; , result);
		}
		return;
	}
	ops[layer] = 2;
	dfs(layer + 1 , currentResult , lastOp , lastSum);   //Continue
	currentResult += (lastOp)? (-1 * lastSum) : lastSum;
	ops[layer] = 0;
	dfs(layer + 1 , currentResult , 0 , 0);  //Plus
	ops[layer] = 1;
	dfs(layer + 1 , currentResult , 1 , 0);  //Minus
}

int main(void)
{
	while(scanf(&quot;%d&quot;, &amp;result) != EOF)
	{
		num = 0;
		dfs(1 , 0 , 0 , 0);
		printf(&quot;%d\n&quot; , num);
	}
	return 0;
}</pre><br>
<span style="color:#ff0000">转载请标明出处，原文地址：</span>http://blog.csdn.net/hackbuteer1/article/details/39253767<br>
<br>

            <div>
                作者：Hackbuteer1 发表于2014/9/13 18:25:59 <a href="http://blog.csdn.net/hackbuteer1/article/details/39253767">原文链接</a>
            </div>
            <div>
            阅读：22048 评论：27 <a href="http://blog.csdn.net/hackbuteer1/article/details/39253767#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]微软2014校园招聘笔试试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/12190807</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/12190807</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/30 12:04:42</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：</span><a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/12190807" style="font-family:Verdana; font-size:14px">http://blog.csdn.net/hackbuteer1/article/details/12190807</a><br>
<span style="font-family:Times New Roman; font-size:14px">1、Which statement(s) is(are) correct about thread and process？Select all that apply.(5 Points)<br>
A、Threads share the same address space of the parent process;Processes share the same address space of the parent process.<br>
<span style="color:#3333ff">B、Changes to the main thread(cancellation，priority change，etc.) may affect the behavior of the other threads of the process; Changes to the parent process does not affect child processes.</span><br>
C、Multiple threads mar cause deadlock,while multiple processes won't cause deadlock.<br>
<span style="color:#3333ff">D、Threads can directly communicate with other threads of its process; Processes must use inter-process communication to communicate with sibling processes.</span><br>
E、None of the above.</span><br>
<br>
<span style="font-family:Times New Roman; font-size:14px">2、Which statement(s) below regarding TCP(Transmission Control Protocol) is(are) correct? Select all that apply.(5 Points)<br>
A、TCP provides a way for applications to send encapsulated IP datagrams and send them without having to establish a connection.<br>
B、TCP supports multicasting.<br>
<span style="color:#3333ff">C、Port numbers below 1024 are called well-known ports and are reserved for standard services. For example,port 21 is reserved for FTP protocol, and port 25 is for SMTP protocol.</span><br>
<span style="color:#3333ff">D、TCP handles package loss reliably.</span><br>
</span><span style="font-family:Times New Roman; font-size:14px">E、None of the above.<br>
<br>
3、Initialize integer i as 0, what's the value of i after the following operation?(5 Points)</span>
<p></p>
<pre class="cpp" name="code">i += i &gt; 0 ? i++ : i --;</pre>
<p></p>
<span style="font-family:Times New Roman; font-size:14px">A、-2</span><br>
<span style="font-family:'Times New Roman'; font-size:14px; color:#3333ff">B、-1</span><br>
<span style="font-family:Times New Roman; font-size:14px">C、0</span><br>
<span style="font-family:Times New Roman; font-size:14px">D、1</span><br>
<span style="font-family:Times New Roman; font-size:14px">E、2</span><br>
<br>
<span style="font-family:Times New Roman; font-size:14px">4、Which of the follwing sequence(s) could not be a postorder tree walk result of a binary search tree?(5 Points)</span><br>
<span style="font-family:Times New Roman; font-size:14px">A、1,2,3,4,5</span><br>
<span style="font-family:'Times New Roman'; font-size:14px; color:#3333ff">B、3,5,1,4,2</span><br>
<span style="font-family:Times New Roman; font-size:14px">C、1,2,5,4,3</span><br>
<span style="font-family:Times New Roman; font-size:14px">D、5,4,3,2,1</span><br>
<br>
<span style="font-family:Times New Roman; font-size:14px">5、When a dll is loaded into memory, which part(s) can be shared between processes?(5 Points)</span><br>
<span style="font-family:'Times New Roman'; font-size:14px; color:#3333ff">A、code segment</span><br>
<span style="font-family:Times New Roman; font-size:14px">B、static variable</span><br>
<span style="font-family:'Times New Roman'; font-size:14px; color:#3333ff"><span style="color:#000000">C、global variable<br>
</span>D、external difinitions and references for linking</span><br>
<span style="font-size:14px"><span style="font-family:Times New Roman">E、BSS segment</span><span style="font-family:Times New Roman"><br>
<br>
</span><span style="font-family:Times New Roman">6、How many times is f() called when calculating f(10)?(5 Points)</span></span><br>
<span style="font-family:Times New Roman; font-size:14px"></span><pre class="cpp" name="code">int f(int x)
{
	if(x &lt;= 2)
		return 1;
	return f(x - 2) + f(x - 4) + 1;
}</pre><span style="font-family:'Times New Roman'; font-size:14px"><span style="font-family:'Times New Roman'; font-size:14px">A、14</span></span><br>
B、18<br>
C、20<br>
D、24<br>
<span style="color:#3333ff">E、None of the above.</span><br>
<br>
<span style="font-family:Times New Roman; font-size:14px">7、Asume you have an object to describe customer data:(5 Points)<br>
{<br>
&nbsp; ID（7 digit numeric）<br>
&nbsp; Family Name（string）<br>
&nbsp; Account Balance（currency）<br>
}<br>
If you have 500,000 Chinese customers records represented by instances of this object type , what set of data structures is best to get fast retrieval of customers (1) get IDs from Name and (2) get Name from ID?<br>
A、(1) Tree with Hash(100 bucket) at leaves(2) Tree with linked list at leaves.<br>
<span style="color:#3333ff">B、(1) Tree with linked list at leaves(2) Array.</span><br>
<span style="color:#000000">C、(1) Tree with linked list at leaves(2) Hash(10,000 buckets)</span><br>
D、(1) Sort linked list(2) Array.<br>
<br>
8、Let's assume one type of cancer may be mis-diagnosed in the examination. 5 out of 100 people with this cancer will be diagnosed as not having it , and 1 out of 100 people without this cancer will be diagnosed as having it. We know the chance of getting this
 cancer is around 0.1%. One person was examined and diagnosed of having this cancer, which of the following value if the closest to the chance of is really having it?(5 Points)<br>
A、90%<br>
B、50%<br>
C、30%<br>
<span style="color:#3333ff">D、10%</span><br>
<br>
9、In which case(s) would you use an outer join?(5 Points)<br>
A、The table being joined have NOT NULL columns.</span><span style="font-family:Times New Roman; font-size:14px"><br>
B、The table being joined have only matched data.<br>
<span style="color:#3333ff">C、The columns being joined have NULL values.</span><br>
<span style="color:#3333ff">D、The table being joined have only unmatched data.</span><br>
<span style="color:#3333ff">E、The table being joined have both matched and unmatched data.</span><br>
<br>
10、As shown in the graph , start from node B , traverse the nodes on a Depth-First Search(DFS) algorithm , which is(are) the possible traversa sequence(s)? Select all that apply.(5 Points)</span><br>
<img alt="" src="http://img.blog.csdn.net/20130930120101500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<span style="font-family:Times New Roman; font-size:14px">A、BADECF<br>
<span style="color:#3333ff">B、BADEFC</span><br>
C、BCAFDE<br>
<span style="color:#3333ff">D、BCFDEA</span><br>
<span style="color:#3333ff">E、BFDECA</span><br>
<br>
11、The best time complexity of quick sort algorithm is:(5 Points)<br>
A、O(lgn)<br>
B、O(n)<br>
<span style="color:#3333ff">C、O(nlgn)</span><br>
D、O(n*n)<br>
<br>
12、Which of the following method(s) CANNOT be used for Text-encryption:(5 Points)<br>
<span style="color:#3333ff">A、MD5</span><br>
B、RSA<br>
C、RC4<br>
D、DES</span><span style="font-size:14px"><span style="font-family:Times New Roman"><br>
<span style="color:#33cc00">MD5是不可逆加密，不可以用来加密文本，DES和RC4是对称加密，RSA是不对称加密，都可以用于文本加密。</span><br>
</span><span style="font-family:Times New Roman">13、To speed up data access , we build cache system. In one system , The L1 cache access time is 5 ns , the L2 cache access time is 50 ns and the memory access time is 400 ns. The L1 cache miss rate is 50% , the
 L2 cache miss rate is 10%. The average data access time of this system is:(5 Points)<br>
A、5<br>
B、30<br>
C、45<br>
<span style="color:#3333ff">D、50</span><br>
E、55<br>
<br>
14、Which is(are) valid function pointer declaration(s) below ? Select all that apply.(5 Points)<br>
A、void* f(int);<br>
<span style="color:#3333ff">B、int (*f)();</span><br>
<span style="color:#3333ff"><span style="color:#000000">C、void (*f(int , void(*)(int)))(int);</span><br>
D、void (*(*f)(int))();</span></span></span><br>
<br>
<span style="font-family:Times New Roman; font-size:14px">15、Which of the following method(s) could be used to optimize the speed of a program ? (5 Points)<br>
<span style="color:#3333ff">A、Improve memory access pattern to decrease cache misses.<br>
B、Use special instructions(e.g. vector instructions) to replace compiler generated assembly code.<br>
C、Change an algorithm from recursive implementation to iterative implementation.</span><br>
<span style="color:#3333ff">D、Loop unwinding.</span><br>
<br>
16、Which regular expression(s) matches the sentence &quot;www.microsoft.com&quot; ? (5 Points)<br>
<span style="color:#3333ff">A、^\w&#43;\.\w&#43;\.\w&#43;$<br>
B、[w]{0,3}.[a-z]*.[a-z]&#43;<br>
C、.[c-w.]{3,10}[.][c-w.][.][a]|.&#43;</span><br>
D、[w][w][w][microsoft]&#43;[com]&#43;<br>
E、\w*<br>
<br>
17、In the image below , if the function is designed to multiply two positive numbers which line number in the image contains the biggest functional bug(assume no overflow)? (5 Points)</span><br>
<span style="font-family:Verdana; font-size:14px"><img alt="" src="http://img.blog.csdn.net/20130930163752062?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"></span><br>
<span style="font-family:Times New Roman; font-size:14px">A、Line 1<br>
B、Line 2<br>
C、Line 3<br>
<span style="color:#3333ff">D、Line 4</span><br>
E、Line 5<br>
<br>
18、Which of the following can be referred to as attack method(s)? Select all that apply.(5 Points)<br>
<span style="color:#3333ff">A、Vulnerability scan</span><br>
<span style="color:#3333ff">B、SQL Injection<br>
C、Drive-by downloading</span><br>
<span style="color:#3333ff">D、Brute force</span><br>
<br>
19、A table CANNOT have one or more of the following index configurations.(5 Points)<br>
A、No indexes<br>
B、A clustered index<br>
C、clustered index and many non-clustered indexes<br>
<span style="color:#3333ff">D、Many clustered index</span></span><span style="font-family:Times New Roman; font-size:14px"><br>
<br>
20、Which of the following is(are) true about providing security to database servers ? Select all that apply.(5 Points)<br>
<span style="color:#3333ff">A、Do not host a database server on the same server as your web server</span><br>
<span style="color:#3333ff">B、Do not host a database server on a server based system<br>
C、Do not use blank password for SA account</span><br>
<span style="color:#3333ff">D、Employ a centralized administration model</span><br>
</span><br>
<span style="font-family:Times New Roman; font-size:14px">第二部分测试时间为60分钟，满分50分。请务必在回答问题前仔细阅读变成题目。您可以选用C、C&#43;&#43;、C#或者Java 其中任何一种编程语言，并且保证您的代码可以正确编译和有正确的结果。另外，请一定要注意您的代码的质量。<br>
21、Given a singly linked list L: (L0 , L1 , L2...Ln-1 , Ln). Write a program to reorder it so that it becomes(L0 , Ln , L1 , Ln-1 , L2 , Ln-2...).</span><br>
<pre class="cpp" name="code">struct Node
{
	int val_;
	Node* next;
};</pre><span style="font-family:Times New Roman; font-size:14px">Notes:<br>
1、Space Complexity should be O(1)&nbsp;<br>
2、Only the &quot;.next&quot; field of a node is modifiable.<br>
代码：</span><br>
<pre class="cpp" name="code">//转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/12190807
struct Node
{  
    int val_;  
    Node* next;  
};
Node* reverse_list(Node* phead)   //链表反转
{
	Node *temp ,*curr , *pre , *reverse_head;
	pre = NULL;
	curr = phead;
	while(curr-&gt;next)
	{
		temp = curr-&gt;next;
		curr-&gt;next = pre;
		pre = curr;
		curr = temp;
	}
	curr-&gt;next = pre;
	reverse_head = curr;
	return reverse_head;
}

Node* Merge(Node* slow , Node* fast)
{
	if(fast == NULL)
		return slow;
	if(slow == NULL)
		return fast;
	Node *head , *result;
	result = NULL;
	int i = 0;
	while(slow &amp;&amp; fast)
	{
		if(0 == i)
		{
			if(NULL == result)
			{
				head = result = slow;
				slow = slow-&gt;next;
			}
			else
			{
				result-&gt;next = slow;
				slow = slow-&gt;next;
				result = result-&gt;next;
			}
		}
		else
		{
			if(NULL == result)
			{
				head = result = fast;
				fast = fast-&gt;next;
			}
			else
			{
				result-&gt;next = fast;
				fast = fast-&gt;next;
				result = result-&gt;next;
			}
		}
		i ^= 1;
	}//while
	if(slow)
	{
		result-&gt;next = slow;
	}
	if(fast)
	{
		result-&gt;next = fast;
	}
	return head;
}

Node* reorder_list(Node* phead)
{
	Node *r_head , *slow , *fast;
	r_head = slow = fast = phead;
	while(fast-&gt;next != NULL &amp;&amp; fast-&gt;next-&gt;next != NULL)
	{
		slow = slow-&gt;next;
		fast = fast-&gt;next-&gt;next;
	}
	if(slow-&gt;next == NULL)
		return r_head;
	fast = slow-&gt;next;
	slow-&gt;next = NULL;
	slow = phead;
	fast = reverse_list(fast);      //链表的后半部分反转
	r_head = Merge(slow , fast);    //链表归并
	return r_head;
}</pre><br>
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/12190807">http://blog.csdn.net/hackbuteer1/article/details/12190807</a></span><br>
<br>
<br>
<br>
<img alt="" src="http://img.blog.csdn.net/20130930121404359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121427343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121444015?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121459375?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121526593?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121542593?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121602921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121654140?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<img alt="" src="http://img.blog.csdn.net/20130930121717031?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<span style="font-family:Verdana; font-size:18px"></span><pre name="code" class="cpp">转载请标明出处，原文地址：http://blog.csdn.net/hackbuteer1/article/details/12190807
struct Node
{
	int val_;
	Node* next;
};

//将链表分成前后两部分，前一个链表长度 &gt;=  后一链表长度
Node* list_half(Node* head)
{
	Node* half = NULL;
	Node* fast = head, *slow = head;

	while(fast &amp;&amp; fast-&gt;next &amp;&amp; fast-&gt;next-&gt;next)
	{
		slow = slow-&gt;next;
		fast = fast-&gt;next-&gt;next;
	}
	if(slow)
	{
		half = slow-&gt;next;
		slow-&gt;next = NULL;
	}
	return half;
}

//反转后一个链表
Node* list_reverse(Node* head)
{
	if(NULL == head)
		return NULL;
	Node* prev, *curr, *reverse_head, *temp;
	prev = NULL, curr = head;
	while(curr-&gt;next)
	{
		temp = curr-&gt;next;
		curr-&gt;next = prev;
		prev = curr;
		curr = temp;
	}
	curr-&gt;next = prev;
	reverse_head = curr;
	return reverse_head;
}

//合并两个链表
Node* list_merge(Node* first, Node* second)
{
	Node* head = first;
	Node* temp;

	while(second)
	{
		temp = first-&gt;next;
		first-&gt;next = second;
		second = second-&gt;next;
		first-&gt;next-&gt;next = temp;
		first = temp;
	}
	return head;
}

Node* list_reorder(Node *head)
{
	Node* half = list_half(head);
	Node* half_head = list_reverse(half);
	head = list_merge(head, half_head);
	return head;
}</pre><br>
转载请标明出处处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/12190807">http://blog.csdn.net/hackbuteer1/article/details/12190807</a><br>

            <div>
                作者：Hackbuteer1 发表于2013/9/30 12:04:42 <a href="http://blog.csdn.net/hackbuteer1/article/details/12190807">原文链接</a>
            </div>
            <div>
            阅读：19296 评论：37 <a href="http://blog.csdn.net/hackbuteer1/article/details/12190807#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]阿里巴巴集团2014秋季校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11931173</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11931173</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/23 14:51:56</pubDate>
        <description><![CDATA[
            
<p><span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11931173">http://blog.csdn.net/hackbuteer1/article/details/11931173</a><br>
第一部分 单选题（前10题，每题2分；后10题，每题3分，共50分，选对得满分，选错倒扣1分，不选得0分）<br>
<br>
1、假设把整数关键码K散列到有N个槽的散列表，以下哪些散列函数是好的散列函数（）<br>
A、h(K)=K mod N;<br>
B、h(K)=1;<br>
C、h(K)=K/N;<br>
<span style="color:#3333ff">D: h(K)=(K&#43;rand(N)) mod N, rand(N)返回一个0到N-1的整数</span><br>
<br>
2. 下面排序算法中，初始数据集的排列顺序对算法的性能无影响的是（）<br>
<span style="color:#3333ff">A、堆排序 </span>&nbsp; &nbsp; &nbsp;B、插入排序<br>
C、冒泡排序 &nbsp; &nbsp;D、快速排序<br>
<br>
3、下面说法错误的是：<br>
A、CISC计算机比RISC计算机指令多<br>
B、冯诺依曼机体系结构的主要特征是存储程序的工作方式<br>
C、增加流水线段数理论上可以提高CPU频率<br>
<span style="color:#3333ff">D、在指令&#26684;式中，采用扩展操作码设计方案的目的是为了保持指令字长不变而增加寻址空间</span><br>
<br>
4、不属于冯诺依曼机体系结构必要组成部分的是：<br>
A、CPU &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">B、Cache</span> &nbsp; &nbsp; &nbsp; &nbsp;C、RAM &nbsp; &nbsp; &nbsp; &nbsp;D、ROM<br>
<br>
5、一个栈的入栈序列式ABCDE，则不可能的出栈序列是:<br>
A、DECBA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、DCEBA &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">&nbsp;C、ECDBA </span>&nbsp; &nbsp; &nbsp; D、ABCDE<br>
<br>
6.你认为可以完成编写一个C语言编译器的设计语言是：<br>
A、汇编语言 &nbsp; &nbsp; &nbsp; &nbsp;B、C语言 &nbsp; &nbsp; &nbsp; C、VB语言 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">D、以上皆可</span><br>
<br>
7. 关于C&#43;&#43;/JAVA类中的static成员和对象成员的说法正确的是：<br>
<span style="color:#3333ff">A、虚成员函数不可能是static成员函数</span><br>
B、static成员函数在对象成员函数中无法调用<br>
C、static成员变量在对象构造时生成<br>
D、static成员函数不能访问static成员变量<br>
8、</span></p>
<p><span style="font-family:Verdana; font-size:14px"><img src="http://img.blog.csdn.net/20130923170459421?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></p>
<p><span style="font-family:Verdana; font-size:14px"><span style="color:#3333ff">C、13个<br>
</span>9、某进程在运行过程中需要等待从磁盘上读入数据，此时该进程的状态将：<br>
A、从就绪变为运行 &nbsp; &nbsp; &nbsp; B、从运行变为就绪<br>
<span style="color:#3333ff">C、从运行变为阻塞 </span>&nbsp; &nbsp; &nbsp; D、从阻塞变为就绪<br>
<br>
10、下面算法的时间复杂度为：<br>
</span></p>
<pre class="cpp" name="code">int f(unsigned int n)
{
	if(n == 0 || n == 1)
		return 1;
	else
		return n*f(n-1);
}</pre>
A、O(1) &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">B、O(n) </span>&nbsp; &nbsp; &nbsp; &nbsp;C、O(N*N) &nbsp; &nbsp; &nbsp; D、O(n!)<br>
<br>
11、n从1开始，每个操作可以选择对n加1或者对n加倍。若想获得整数2013，最少需要多少个操作。<br>
A、24 &nbsp; &nbsp; &nbsp; &nbsp;B、21 &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">C、18 </span>&nbsp; &nbsp; &nbsp; D、不可能<br>
<br>
12、对于一个具有n个顶点的无向图，若采用邻接表数据结构表示，则存放表头节点的数组大小为：<br>
<span style="color:#3333ff">A、n</span> &nbsp; &nbsp; &nbsp; &nbsp; B、n&#43;1 &nbsp; &nbsp; &nbsp; C、n-1 &nbsp; &nbsp; &nbsp;D、n&#43;边数<br>
<br>
<img alt="" src="http://img.blog.csdn.net/20130923150419437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><br>
<br>
14：如下函数，在32bit系统foo(2^31-3)的&#20540;是：<br>
<pre class="cpp" name="code">int foo(int x)
{
	return x&amp;-x;
}</pre>
A、0 &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">B、1 &nbsp; &nbsp;</span> &nbsp; &nbsp; &nbsp;C、2 &nbsp; &nbsp; &nbsp; &nbsp; D、4<br>
<br>
15、对于顺序存储的线性数组，访问节点和增加、删除节点的时间复杂度为：<br>
A、O(n),O(n) &nbsp; &nbsp; &nbsp; &nbsp; B、O(n),O(1) &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">C、O(1),O(n) </span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、O(1),O(1)<br>
<br>
16、在32位系统环境中，编译选项为4字节对齐，那么sizeof(A)和sizeof(B)是：<br>
<pre class="cpp" name="code">struct A
{
	int a;
	short b;
	int c;
	char d;
};
struct B
{
	int a;
	short b;
	char d;
	int c;
};</pre>
A、16,16 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">B、16,12</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、13,12 &nbsp; &nbsp; &nbsp; D、11,16<br>
<br>
17、袋中有红球，黄球，白球各一个，每次任意取一个又放回，如此连续抽取3次，则下列事件中概率是8/9的是：<br>
<span style="color:#3333ff">A、颜色不全相同 &nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、颜色全相同 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、颜色全不同 &nbsp; &nbsp; &nbsp; &nbsp; D、颜色无红色<br>
<br>
18、一个洗牌程序的功能是将n张牌的顺序打乱，以下关于洗牌程序的功能定义说法最恰当的是：<br>
A、任何连续位置上的两张牌的内容独立<br>
B、n张牌的任何两个不同排列出现的概率相等<br>
<span style="color:#3333ff">C、每张牌出现在n个位置上的概率相等</span><br>
D、每张牌出现在n个位置上的概率独立<br>
<br>
19、用两种颜色去染排成一个圈的6个棋子，如果通过旋转得到则只算一种，一共有多少种染色模式。<br>
A、10 &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">B、14 &nbsp;</span> &nbsp; &nbsp; &nbsp; C、15 &nbsp; &nbsp; &nbsp; &nbsp; D、16<br>
<br>
20、递归式的先序遍历一个n节点，深度为d的二叉树，则需要栈空间的大小为：<br>
A: O(logn) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; B:O(nlogn) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C:O(n) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff"> D:(d)</span><br>
<br>
第二部分 不定向选项（4题，每题5分，完全正确计5分，漏选计2分，不选计0分，多选、错选计-2分）<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11931173">http://blog.csdn.net/hackbuteer1/article/details/11931173</a><br>
21、两个线程运行在双核机器上，每个线程主线程如下，线程1：x=1;r1=y;线程2：y=1;r2=x;<br>
x和y是全局变量，初始为0。以下哪一个是r1和r2的可能&#20540;：<br>
A、r1=0,r2=0<br>
<span style="color:#3333ff">B、r1=1,r2=0<br>
C、r1=1,r2=1<br>
D、r1=0,r2=1</span><br>
<br>
22、关于Linux系统的负载（Load），以下表述正确的是：<br>
A: Load:2.5,1.3,1.1表示系统的负载压力在逐渐减小<br>
B: 通过就绪和运行的进程数来反映<br>
<span style="color:#3333ff">C: 通过TOP命令查看<br>
D: 通过uptime查看</span><br>
<br>
23、关于排序算法的以下说法，错误的是：<br>
<span style="color:#3333ff">A、归并排序的平均时间复杂度O(nlogn)，最坏时间复杂度O(n^2)</span><br>
B、堆排序平均时间复杂度O(nlogn)，最坏时间复杂度O(nlogn)<br>
C、冒泡排序平均时间复杂度O(n^2)，最坏时间复杂度O(n^2)<br>
D、快速排序的平均时间复杂度O(nlogn)，最坏时间复杂度O(N^2)<br>
<br>
24、假设函数rand_k会随机返回一个【1，k】之间的随机数（k&gt;=2）,并且每个证书出现的概率相等。目前有rand_7,通过调用rand_7（）和四则运算符，并适当增加逻辑判断和循环控制逻辑，下列函数可以实现的有：<br>
<span style="color:#3333ff">A、rand_3 &nbsp; &nbsp; &nbsp; &nbsp; B、rand_21 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、rand_23 &nbsp; &nbsp; &nbsp; &nbsp; D、rand_47</span><br>
<br>
第三部分 填空与问答<br>
<br>
<br>
25、某二叉树的前序遍历序列为-&#43;a*b-cd/ef，后序遍历序列为abcd-*&#43;ef/-，问其中序遍历序列是：<br>
<br>
26、某缓存系统采用LRU淘汰算法，假定缓存容量为4，并且初始为空，那么在顺序访问以下数据项的时候，1、5、1、3、5、2、4、1、2，出现缓存直接命中的次数是（），最后缓存中即将准备淘汰的数据项是（）<br>
<br>
27、有两个较长的单向链表a和b，为了找出节点node满足node in a 并且 node in b，请设计空间使用尽量小的算法。（用C/C&#43;&#43;/JAVA或伪码表示都可以）<br>
<br>
28、当存储数据量超出单节点数据管理能力的时候，可以采取的办法有数据库sharding的解决方案，也就是按照一定的规律把数据分散存储在多个数据管理节点N中（节点编号0.1.2...N-1）。假设存储的数据是a，请完成为数据a计算存储节点的程序。（没学过C语言的同学也可以用伪码完成）<br>
<pre name="code" class="cpp">#define N 5
int hash(int element)
{
	return element*2654435761;
}
int shardingIndex(int a)
{
	int p = hash(a);
	//1
	return p;
}</pre>
空&#26684;1处： &nbsp; &nbsp; p %= N;<br>
29、宿舍内5个同学一起玩对战游戏，每场比赛有一些人作为红方，另一些人作为蓝方，请问至少需要多少场比赛，才能使任意两个人之间有一场红方对蓝方和一场蓝方对红方的比赛？<br>
答案为4场。<br>
<img src="http://img.blog.csdn.net/20130924104053671?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>
第四部分 JAVA选做题<br>
1、以下每个线程输出的结果是什么？（不用关注输出的顺序，只需写出输出的结果集即可）<br>
<br>
<br>
2、一个有10亿条记录的文本文件，已按照关键字排好序存储，请设计算法，可以快速的从文件中查找关键字的记录。<br>
<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11931173">http://blog.csdn.net/hackbuteer1/article/details/11931173</a><br>
C&#43;&#43;选做题<br>
Part I<br>
假设你有一台计算机，配置如下：<br>
48GB内存<br>
16核CPU，3.0GHz<br>
12块2TB SATA硬盘<br>
有两个数据文件A和B，A的大小是40GB，B的大小是2TB，A和B的文件&#26684;式一样，都包含等长的100字节的记录，记录的前20个字节表示key，后80个字节表示value，所有的key和value都由数字和大小写字母组成（0-9 A-Z a-z），同一个文件中的key没有排序，也没有重复。<br>
文件A和B都切成了1GB（1*10^9字节）的数据块（名为A000001、A000002......A000010、B000001、B000002......B002000），均匀分布在6块硬盘上。<br>
请问如何用最快的方法找到A和B之间共同的key，以及他们对应的value&#20540;（建议输出&#26684;式如下所示：&lt;key&gt;&lt;空&#26684;&gt;&lt;A中对应value&gt;&lt;空&#26684;&gt;&lt;B中对应value&gt;）<br>
<br>
<br>
请描述你的方法里面用到的关键的数据结构和算法，估算这个方法需要的内存空间和运算时间，并说明你的推导过程。<br>
<br>
<br>
Part II<br>
如果你有100台服务器，每台配置如上描述，它们通过千兆网络组成一个集群，任意两台之间的带宽可以达到1000Mbps，同时假设文件A和B的大小也放大100倍（各位4TB和200TB），并且被切分成1GB的碎片，均匀分布在100台服务器上。<br>
请问如何用最快的方法找到A和B之间共同的key，以及他们对应的value&#20540;（建议输出&#26684;式如下所示：&lt;key&gt;&lt;空&#26684;&gt;&lt;A中对应value&gt;&lt;空&#26684;&gt;&lt;B中对应value&gt;）<br>
<br>
<br>
请描述你的方法里面用到的关键的数据结构和算法，估算这个方法需要的内存空间、网络流和运算时间，并说明你的推导过程。<br>
<br>
<br>
<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11931173">http://blog.csdn.net/hackbuteer1/article/details/11931173</a><br>
<br>
<br>
代码

            <div>
                作者：Hackbuteer1 发表于2013/9/23 14:51:56 <a href="http://blog.csdn.net/hackbuteer1/article/details/11931173">原文链接</a>
            </div>
            <div>
            阅读：31011 评论：26 <a href="http://blog.csdn.net/hackbuteer1/article/details/11931173#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]迅雷2014校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11482103</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11482103</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/9 16:26:51</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11482103">http://blog.csdn.net/hackbuteer1/article/details/11482103</a><br>
温馨提示：客观题和主观题得分都要超过一定标准，才能获得面试资&#26684;，如果一项得分很高，而另外一项得分很低，可能无法获得面试资&#26684;。<br>
一、单选题（20题，每题2分）<br>
1、有变量int i = 0; int a = i&#43;&#43;; int b=&#43;&#43;a; int c = a&#43;b; 请问表达式 a?b:c 的&#20540;是（）<br>
A、0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">B、1</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D、3<br>
<br>
2、32位环境下，int *p=new int[10];请问sizeof(p)的&#20540;为（）<br>
<span style="color:#3333ff">A、4 </span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、40 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D、8<br>
<br>
3、有语句char str[] = &quot;abcde&quot;;请问表达式sizeof(str)的&#20540;是（） &nbsp; &nbsp;后面还有\0<br>
A、1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; C、5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">D、6</span><br>
<br>
4、有函数int func(int i)的实现为（）<br>
</span>
<pre name="code" class="cpp">int func(int i)
{
	if(i &gt; 1)
		return i*func(i-1);
	else
		return 1;
}</pre>
请问函数调用f(5)的返回&#20540;是多少（）阶乘计算<br>
A、5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、15 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff"> D、120</span><br>
<br>
5、请问以下说法，哪个是正确的（）<br>
A、每个类都有一个无参数的构造函数<br>
B、每个类都有一个拷贝构造函数<br>
<span style="color:#3333ff">C、每个类能有多个构造函数</span><br>
D、每个类能有多个析构函数<br>
<br>
6、用class关键字定义的类，其成员默认的访问属性为（）<br>
<span style="color:#3333ff">A、private </span>&nbsp; &nbsp; &nbsp; &nbsp; B、protected &nbsp; &nbsp; &nbsp;C、public &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D、无定义<br>
<br>
7、类的成员有三种访问属性，分别是public、protected、private，子类能够访问的成员是（）<br>
A、都能访问<br>
<span style="color:#3333ff">B、public和protected</span><br>
C、public和private<br>
D、protected和private<br>
<br>
8、请问对一个排好序的数组进行查找，时间复杂度为（）<br>
A、O(n) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">&nbsp;B、O(lgn)</span><span style="color:#3366ff"> &nbsp;</span>&nbsp; &nbsp; &nbsp; C、O(nlgn) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、O(1)<br>
<br>
9、以下二叉树：<br>
<table cellpadding="0" cellspacing="0" align="left">
</table>
<table cellpadding="0" cellspacing="0" align="left">
</table>
<img src="http://img.blog.csdn.net/20130909163855453?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFja2J1dGVlcjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>
后序遍历的结果是（）<br>
A、丙乙丁甲戊己 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、甲乙丙丁戊己 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">C、丙丁乙己戊甲</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、丙丁己乙戊甲<br>
<br>
10、看以下代码：<br>
A *pa = new A[10];<br>
delete pa;<br>
则类A的构造函数和析构函数分别执行了几次（）<br>
A、1 &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、10 &nbsp; 10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、1 &nbsp; 10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">D、10 &nbsp; 1</span><br>
<br>
11、看以下代码：<br>
<span style="font-family:Verdana; font-size:14px"></span>
<pre name="code" class="cpp">class A
{
public:
	~A();
};
A::~A()
{
	printf(&quot;delete A &quot;);
}

class B : public A
{
public:
	~B();
};
B::~B()
{
	printf(&quot;delete B &quot;);
}</pre>
请问执行以下代码<br>
A *pa = new B();<br>
delete pa;<br>
输出的串是（）A<br>
<span style="color:#3333ff">A、delete A </span>&nbsp; &nbsp; &nbsp; B、delete B &nbsp; &nbsp; &nbsp; &nbsp;C、delete B delete A &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、delete A delete B<br>
<br>
12、文件长度是一个大于0的整数，用变量unsigned file_length; 来表示，把文件分成块，每块的长度也是一个大于0的整数，用变量unsigned block_length; 来表示，则文件被分成的块数为（）<br>
A、file_length/block_length &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、file_length/block_length&#43;1 &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>
C、(file_length&#43;block_length-1)/block_length &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#000099">D、((file_length-1)/block_length&#43;1&nbsp;</span><br>
<br>
13、整数int i = 0xFE78DA45; int k = 0xAC3189B2;则i^k的&#20540;为（）<br>
<span style="color:#3333ff">A、0x524953f7</span> &nbsp; &nbsp; &nbsp; &nbsp; B、0xAC308800 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、0xFE79DBF7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D、0X0000001<br>
<br>
14、看以下代码：<br>
<pre name="code" class="cpp">class parent
{
public:
	virtual void output();
};
void parent::output()
{
	printf(&quot;parent!&quot;);
}

class son : public parent
{
public:
	virtual void output();
};
void son::output()
{
	printf(&quot;son!&quot;);
}</pre>
则以下程序段：<br>
son s;<br>
::memset(&amp;s , 0 , sizeof(s));<br>
parent&amp; p = s;<br>
p.output();<br>
执行结果是（）<br>
A、parent! &nbsp; &nbsp; &nbsp; B、son! &nbsp; &nbsp; &nbsp; C、son!parent! &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">
D、没有输出结果，程序运行出错</span><br>
<br>
15、函数的局部变量所需存储空间，是在哪里分配的（）<br>
A、进程的数据段 &nbsp; &nbsp; &nbsp;B、进程的栈上 &nbsp; &nbsp;C、进程的堆上 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">D、以上都可以</span><br>
<br>
16、以下STL的容器存放的数据，哪个肯定是排好序的（）<br>
A、vector &nbsp; &nbsp; &nbsp; &nbsp;B、deque &nbsp; &nbsp; &nbsp; &nbsp; C、list &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">D、map</span><br>
<br>
17、int a[][3]={{1},{3,2},{6,7,8},{9}};中a[2][1]的&#20540;是（）<br>
A、3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、6 &nbsp; &nbsp; &nbsp; &nbsp;C、2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">&nbsp;D、7</span><br>
<br>
18、以下关于头文件，说法正确的是（）<br>
A、#include&lt;filename.h&gt;，编译器寻找头文件时，会从当前编译的源文件所在的目录去找<br>
B、#include“filename.h”，编译器寻找头文件时，会从通过编译选项指定的目录去找<br>
<span style="color:#3333ff">C、多个源文件同时用到的全局整数变量，它的声明和定义都放在头文件中，是好的编程习惯</span><br>
D、在大型项目开发中，把所有自定义的数据类型、全局变量、函数声明都放在一个头文件中，各个源文件都只需要包含这个头文件即可，省去了要写很多#include语句的麻烦，是好的编程习惯。<br>
<br>
<span style="font-family:Verdana; font-size:14px">19、某棵完全二叉树上有699个节点，则该二叉树的叶子节点数为（）<br>
A、349 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">B、350 &nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C、188 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、187<br>
n0=n2&#43;1;<br>
n=n0&#43;n1&#43;n2=n0&#43;n1&#43;n0-1=699&nbsp;<br>
由于完全二叉树中度为1的节点只有0个或1个两种情况，所以，将0或1带入上面公式，整理后得： &nbsp;n0=（n&#43;1）/2或者n0=n/2; &nbsp;看看n是否能被2整除，能则用n0=n/2。否则用n0=（n&#43;1）/2 既叶子节点为n0=（n&#43;1）/2=350</span><br>
<br>
20、在一个指向字符串的指针char *p_str，要把字符串中第4个字符的&#20540;改为'a'，正确的做法是（）<br>
A、p_str[3]='a' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#000099">B、*(ptr&#43;3)='a' </span><span style="color:#3333ff">&nbsp;</span> &nbsp; &nbsp; C、p_str[4]='a' &nbsp; &nbsp; &nbsp; D、*(ptr&#43;4)='a'<br>
<br>
二、多选题（10题，每题3分，错选漏选都不得分）<br>
1、已知一段文本有1382个字符，使用了1382个字节进行存储，这段文本全部是由a、b、c、d、e这5个字符组成，a出现了354次，b出现了483次，c出现了227次，d出现了96次，e出现了232次，对这5个字符使用哈夫曼（Huffman）算法进行编码，则以下哪些说法正确（）<br>
<span style="color:#3333ff">A、使用哈夫曼算法编码后，用编码&#20540;来存储这段文本将花费最少的存储空间</span><br>
B、使用哈夫曼算法进行编码，a、b、c、d、e这5个字符对应的编码&#20540;是唯一确定的<br>
<span style="color:#3333ff">C、使用哈夫曼算法进行编码，a、b、c、d、e这5个字符对应的编码&#20540;可以有多套，但每个字符编码的位（bit）数是确定的<br>
D、b这个字符的哈夫曼编码&#20540;位数应该最短，d这个字符的哈夫曼编码&#20540;位数应该最长</span><br>
<br>
2、下列表达式中，不合法的是（）<br>
已知：double d = 3.2; int n = 3;<br>
<span style="color:#3333ff">A、d&lt;&lt;2;</span><br>
B、d/n<br>
C、!d &amp;&amp; (n-3)<br>
<span style="color:#3333ff">D、(d-0.2)|n</span><br>
<br>
3、下面描述正确的是（）<br>
A、while循环语句的循环体至少执行1次<br>
<span style="color:#3333ff">B、do-while循环可以写成while循环的&#26684;式<br>
C、continue语句可以出现在各种循环体中</span><br>
D、break语句不可以出现在循环体内<br>
<br>
4、关于内联函数正确的是（）<br>
A、类的私有成员函数不能作为内联函数<br>
<span style="color:#3333ff">B、在所有类说明中内部定义的成员函数都是内联函数</span><br>
C、类的保护成员函数不能作为内联函数<br>
D、使用内联函数的地方会在运行阶段用内联函数体替换掉<br>
<br>
5、下面模板声明中，哪些是非法的（）<br>
A、template&lt;class Type&gt;class C1;<br>
<span style="color:#3333ff">B、template&lt;class T,U , class V&gt;class C2;</span><br>
C、template&lt;class C1 , typename C2&gt;class C3{};<br>
<span style="color:#3333ff">D、template&lt;typename myT , class myT&gt;class C4{};</span><br>
<br>
6、在使用浏览器打开一个网页的过程中，浏览器会使用的网络协议包括（）<br>
<span style="color:#3333ff">A、DNS &nbsp; &nbsp; &nbsp; &nbsp; B、TCP &nbsp; &nbsp; &nbsp; &nbsp;C、HTTP &nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、Telnet<br>
<br>
7、下面属于构造散列函数的方法是（）<br>
<span style="color:#3333ff">A、直接定址法<br>
B、数字分析法<br>
C、乘余取整法<br>
D、平方取中法</span><br>
<br>
8、拷贝构造函数的特点是（）<br>
A、该函数名同类名，也是一种构造函数，该函数返回自身引用<br>
<span style="color:#3333ff">B、该函数只有一个参数，必须是对某个对象的引用</span><br>
C、每个类都必须有一个拷贝初始化构造函数，如果类中没有说明拷贝构造函数，则编译器系统会自动生成一个缺省拷贝构造函数，作为该类的保护成员<br>
<span style="color:#3333ff">D、拷贝初始化构造函数的作用是将一个已知对象的数据成员&#20540;拷贝给正在创建的另一个同类的对象</span><br>
<br>
<span style="font-size:14px"><span style="font-family:Verdana">9、下列关于虚函数的说法正确的是（）<br>
A、在构造函数中调用类自己的虚函数，虚函数的动态绑定机制还会生效。<br>
<span style="color:#3333ff">B、在析构函数中调用类自己的虚函数，虚函数的动态绑定机制还会生效。<br>
C、静态函数不可以是虚函数</span><br>
<span style="color:#990000">因为静态成员函数没有this，也就没有存放vptr的地方，同时其函数的指针存放也不同于一般的成员函数，其无法成为一个对象的虚函数的指针以实现由此带来的动态机制。静态是编译时期就必须确定的，虚函数是运行时期确定的。</span><br>
<span style="color:#3333ff">D、虚函数可以声明为inline</span></span><span style="font-family:Verdana"><span style="color:#3333ff"></span><br>
inline函数和virtual函数有着本质的区别，inline函数是在程序被编译时就展开，在函数调用处用整个函数体去替换，而virtual函数是在运行期才能够确定如何去调用的，因而inline函数体现的是一种编译期机制，virtual函数体现的是一种运行期机制。<br>
因此，内联函数是个静态行为，而虚函数是个动态行为，他们之间是有矛盾的。<br>
函数的inline属性是在编译时确定的， 然而，virtual的性质则是在运行时确定的，这两个不能同时存在，只能有一个选择，文件中声明inline关键字只是对编译器的建议，编译器是否采纳是编译器的事情。<br>
我并不否认虚函数也同样可以用inline来修饰，但你必须使用对象来调用，因为对象是没有所谓多态的，多态只面向行为或者方法，但是C&#43;&#43;编译器，无法保证一个内联的虚函数只会被对象调用，所以一般来说，编译器将会忽略掉所有的虚函数的内联属性。</span></span><br>
<br>
<span style="font-size:14px; font-family:Verdana">相关知识点：</span><span style="font-size:14px; font-family:Verdana; color:rgb(255,0,0)">什么函数不能声明为虚函数？</span><br style="font-family:Verdana; font-size:14px">
<span style="font-size:14px; font-family:Verdana">一个类中将所有的成员函数都尽可能地设置为虚函数总是有益的。</span><span style="font-family:Verdana; font-size:14px">&nbsp;</span><br>
<span style="font-family:Verdana; font-size:14px">设置虚函数须注意：&nbsp;</span><br>
<span style="font-family:Verdana; font-size:14px">1：</span><span style="font-size:14px; font-family:Verdana; color:rgb(0,153,0)">只有类的成员函数才能说明为虚函数；&nbsp;<br>
2：静态成员函数不能是虚函数；&nbsp;<br>
3：内联函数不能为虚函数；&nbsp;<br>
4：构造函数不能是虚函数；&nbsp;<br>
5：析构函数可以是虚函数，而且通常声明为虚函数。</span><br>
<br>
<span style="font-family:Verdana; font-size:14px">10、下列对函数double add(int a , int b)进行重载，正确的是（）</span><br>
<span style="font-size:14px; font-family:Verdana; color:rgb(51,51,255)">A、int add(int a ,int b ,int c)<br>
B、int add(double a , double b)<br>
C、double add(double a , double b)</span><br>
<span style="font-family:Verdana; font-size:14px">D、int add(int a , int b)<br>
三、填空题（15空，每空2分）<br>
1、以下代码是用来计算100以内的素数的个数，请把相应的空填上。<br>
</span>
<pre name="code" class="cpp">struct prime_number_node
{
	int prime_number;
	prime_number_node* next;
};

int calc_prime_number()
{
	prime_number_node* list_head = new prime_number_node();
	list_head-&gt;next = NULL;
	list_head-&gt;prime_number = 2;
	prime_number_node* list_tail = list_head;
	for(int number = 3 ; number &lt; 100 ; number&#43;&#43;)
	{
		int remainder;
		prime_number_node* cur_node_ptr = list_head;
		while(cur_node_ptr != NULL)
		{
			remainder = number%cur_node_ptr-&gt;prime_number;
			if(remainder == 0)
			{
				//1
			}
			else
			{
				//2
			}
		}
		if(remainder != 0)
		{
			prime_number_node* new_node_ptr = new prime_number_node(); 
			new_node_ptr-&gt;prime_number = number;
			new_node_ptr-&gt;next = NULL;
			list_tail-&gt;next = new_node_ptr;
			//3
		}
	}
	int result = 0;
	while(list_head != NULL)
	{
		result&#43;&#43;;
		prime_number_node* temp_ptr = list_head;
		list_head = list_head-&gt;next;
		//4
	}
	return result;
}</pre>
<span style="font-family:Verdana; font-size:14px">1、2、3、4四行代码依次为：break;<br>
cur_node_ptr = cur_node_ptr-&gt;next;<br>
list_tail = list_tail-&gt;next;&nbsp;<br>
delete temp_ptr;<br>
<br>
2、已知集合A和B的元素分别用不含头结点的单链表存储，函数difference()用于求解集合A与B的差集，并将结果保存在集合A的单链表中。例如，若集合A={5,10,20,15,25,30}，集合B={5,15,35,25}，完成计算后A={10,20,30}。<br>
链表结点的结构类型定义如下：<br>
</span>
<pre name="code" class="cpp">struct node
{
	int elem;
	node* next;
};

void difference(node** LA , node* LB)
{
	node *pa , *pb , *pre , *q;
	pre = NULL;
	            //1
	while(pa)
	{
		pb = LB;
		while(   )                 //2
			pb = pb-&gt;next;
		if(    )                   //3
		{
			if(!pre)
				*LA =      ;     //4
			else
				 = pa-&gt;next;     //5
			q = pa;
			pa = pa-&gt;next;
			free(q);
		}
		else
		{
			       ;             //6
			pa = pa-&gt;next;
		}
	}
}</pre>
<span style="font-family:Verdana; font-size:14px">1、2、3、4、5、6六行代码依次为<br>
pa = *LA;<br>
pb &amp;&amp; pa-&gt;elem != pb-&gt;elem<br>
pb<br>
pa-&gt;next<br>
pre-&gt;next<br>
pre = pa;<br>
代码中的指针pa用于指向集合A的元素；pb指向集合B的元素；临时指针q指向需要被删除的元素；pre用于实现删除时结点的链接，与pa保持所指结点的前后继关系。</span><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：</span><a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11482103" style="font-size:14px; font-family:Verdana">http://blog.csdn.net/hackbuteer1/article/details/11482103</a>

            <div>
                作者：Hackbuteer1 发表于2013/9/9 16:26:51 <a href="http://blog.csdn.net/hackbuteer1/article/details/11482103">原文链接</a>
            </div>
            <div>
            阅读：27924 评论：49 <a href="http://blog.csdn.net/hackbuteer1/article/details/11482103#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]PPS2013校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11473405</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11473405</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/9 11:41:25</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11473405">http://blog.csdn.net/hackbuteer1/article/details/11473405</a><br>
一、简答题<br>
（1）一位老师有2个推理能力很强的学生，他告诉学生他手里有以下的牌：<br>
黑桃：2 ， 5 ， 7 ， 9 ， J ， K<br>
红心：3 ， 4 ， 9 ， J ， K<br>
梅花：5 ， 8 ， 9 ， Q<br>
方块：2 ， 7 ， 8<br>
然后从中拿出一张牌，告诉A这张牌的大小，告诉了B这张牌的花色；<br>
A：我不知道这张是什么牌<br>
B：我就知道你肯定不知道这张是什么牌<br>
A：现在我知道<br>
B：现在我也知道了<br>
请问这张是什么牌？<br>
答：方块8<br>
<br>
（2）有11个乒乓球，其中有一个球是伪劣产品并存在质量较轻的问题，现有一个没有砝码的天平，只能称3次把那个假货给称出来。<br>
答：<br>
第一次，天平两端各放5个乒乓球，如果天平平衡，那么剩下的那个就是伪劣产品。<br>
如果不平衡，则将天平较轻那端的5个乒乓球选出来，然后在天平两端各放2个乒乓球，如果天平平衡，那么剩下的那个就是伪劣产品。否则，将天平较轻那端的2个乒乓球选出来，放在天平上重新测量，天平较轻端的那个乒乓球就是伪劣产品。<br>
<br>
（3）说明指针与引用的区别。<br>
答：<span style="font-family:Verdana; font-size:14px">●</span>指针是一个实体，而引用仅是个别名；<br>
●引用只能在定义时被初始化一次，之后不可变；指针可变；引用“从一而终”，指针可以“见异思迁”；<br>
●引用没有const，指针有const，const的指针不可变；<br>
●引用不能为空，指针可以为空；<br>
●“sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身的大小；<br>
●指针和引用的自增(&#43;&#43;)运算意义不一样；<br>
●引用是类型安全的，而指针不是 (引用比指针多了类型检查<br>
从内存分配上看：程序为指针变量分配内存区域，而引用不分配内存区域。指针：指向另一个内存空间的变量，我们可以通过它来索引另一个内存空间的内容，本身有自己的内存空间。&nbsp;<br>
<br>
（4）列出C&#43;&#43;类型转换操作符，并分别举例。<br>
dynamic_cast: 在多态类型转换时使用，用来执行继承体系中&quot;安全的向下转型或跨系转型动作&quot;,就是子类对象指针转化为父类对象指针。实现在运行时，并进行运行时检测，如果转换失败，返回&#20540;是NULL。<br>
static_cast：与dynamic_cast相反，static_cast是在编译时转换类型的，故称为static_cast，它可以用在&#20540;类型转换中<br>
const_cast：一般用于去除const, volatile等修饰属性上.<br>
reinterpret_cast：特意用于底层的强制转型，这个操作符能够在非相关的类型之间转换。操作结果只是简单的从一个指针到别的指针的&#20540;的二进制拷贝。在类型之间指向的内容不做任何类型的检查和转换。<br>
<br>
（5）写个简单的函数，用于判断CPU的字节序（little endian/big endian）<br>
</span><pre name="code" class="cpp">//若处理器是Big_endian的，则返回0；若是Little_endian的，则返回1。
int checkCPU(void)
{
	union
	{
		int a;
		char b;
	}c;
	c.a = 1;
	return (c.b == 1);
}</pre><span style="font-size:14px"><span style="font-family:Verdana">（6）实现一个128位整数的类，并且完成后面的函数，测试一个数是否为素数。<br>
class int128<br>
{<br>
};<br>
bool isPrime(int128 &amp; number)<br>
{<br>
...<br>
}<br>
答：<br>
</span></span><pre name="code" class="cpp">#include&lt;bitset&gt;
#include&lt;algorithm&gt;
#include&lt;iostream&gt;
#include&lt;string&gt;
#include&lt;deque&gt;
using namespace std;

class int128;

void shift(int128 &amp; in,deque&lt;bool&gt; &amp; de);

template&lt;size_t N&gt;
bool operator&lt;(bitset&lt;N&gt; const&amp; b1,bitset&lt;N&gt; const&amp; b2)
{
	int i=N;
	while( i-- &amp;&amp; b1[i]==b2[i] ) { }

	return ((-1 == i) ? false : (b1[i]&lt;b2[i]));
}

class int128
{
    bitset&lt;128&gt; number;
public:
    explicit int128(string str):number(str){}
    int128(bitset&lt;128&gt;const&amp; b):number(b){}
    int128(int a = 0 , int b = 0 , int c = 0 , int d = 0)
	{
        bitset&lt;32&gt; b1(a),b2(b),b3(c),b4(d);
		int i, k = 128;
		for(i = 32 ; i ; number[--k] = b1[--i]) { }
		for(i = 32 ; i ; number[--k] = b2[--i]) { }
		for(i = 32 ; i ; number[--k] = b3[--i]) { }
		for(i = 32 ; i ; number[--k] = b4[--i]) { }
    }
    bool operator[](size_t i)const
	{
        return number[i];
    }
    bitset&lt;128&gt;::reference operator[](size_t i)
	{
        return number[i];
    }
    friend bool operator&lt;(int128 const&amp; i1,int128 const&amp; i2)
	{
        return i1.number &lt; i2.number;
    }

    friend int128 operator+(int128 const&amp; i1,int128 const&amp; i2)
	{
        if(i1 == 0)
			return i2;
		if(i2 == 0)
			return i1;
        int128 result;
        bitset&lt;2&gt; sum;

        for(int i = 0 ; i &lt; 128 ; ++i)
		{
            sum=i1[i]+i2[i]+sum.to_ulong();
            result[i]=sum[0];
            sum&gt;&gt;=1;
        }
        return result;
    }

    friend int128 operator-(int128 const&amp; i1,int128 const&amp; i2)
	{
        if(i2==0)
			return i1;

        int128 result=i1;

        for(int i = 0 ; i &lt; 128 ; ++i)
		{
            if(i2[i] == 0)   {}
            else
			{
                if(result[i] == 1)
					result[i] = 0;
                else
				{
                    int k = i;
                    while(k &lt; 128 &amp;&amp; result[k] == 0)
					{
						result[k] = 1;
						++k;
					}
                    if(k != 128)
						result[k] = 0;
                }
            }
        }

        return result;
    }
    friend int128 operator*(int128 const&amp; i1,int128 const&amp; i2)
	{
        if(i1==0 || i2==0)
			return int128();
        if(i1==1)
			return i2;
		if(i2==1)
			return i1;

        int128 acc=int128();

        for(int i=0;i&lt;128;++i)
		{
            if(i2[i]==1)
			{
                acc=acc+(i1&lt;&lt;i);
            }
        }

        return acc;
    }
    friend int128 operator/(int128 const&amp; i1,int128 const&amp; i2)
	{
        if(i1 &lt; i2)
			return int128();
        deque&lt;bool&gt; de;
        bool flag = 0;
        for(int i = 127 ; i &gt;= 0 ; --i)
		{
            if(flag == 0 &amp;&amp; i1[i] == 0)   {}
            else
			{
                flag = 1;
                de.push_back(i1[i]);
            }
        }

        int128 div = int128();
        int128 result = int128();

        while(!de.empty())
		{
            shift(div,de);
            if(div &lt; i2)
			{
                result = result&lt;&lt;1;
            }
            else
			{
                result = (result&lt;&lt;1) + int128(0,0,0,1);
                div = div - i2;
            }
        }

        return result;
    }
    friend int128 operator%(int128 const&amp; i1,int128 const&amp; i2)
	{
        if(i1 &lt; i2)
			return i1;
        deque&lt;bool&gt; de;
        bool flag = 0;
        for(int i = 127 ; i &gt;= 0 ; --i)
		{
            if(flag == 0 &amp;&amp; i1[i] == 0)   {}
            else
			{
                flag = 1;
                de.push_back(i1[i]);
            }
        }

        int128 div = int128();
        int128 result = int128();

        while(!de.empty())
		{
            shift(div,de);
            if(div &lt; i2)
			{
                result = result&lt;&lt;1;
            }
            else
			{
                result = (result&lt;&lt;1) + int128(0,0,0,1);
                div = div - i2;
            }
        }

        return div;
    }
    friend bool operator==(int128 const&amp; i,int const k)
	{
        bitset&lt;32&gt; bb(k);
        for(int g = 0 ; g &lt; 32 ; ++g)
		{
            if(i[g] != bb[g])
				return 0;
        }
        return 1;
    }
    void operator=(bitset&lt;128&gt;const&amp; b)
	{
        number = b;
    }
    friend ostream&amp; operator&lt;&lt;(ostream&amp; o,int128 const&amp; i)
	{
        o&lt;&lt;i.number;
        return o;
    }
    int128 operator&lt;&lt;(size_t step)const
	{
        return int128(number&lt;&lt;step);
    }
    unsigned long to_ulong()const
	{
		return *((unsigned long*)&amp;number);
    }

public:
	bool ToDecimalStr(std::string &amp;str)
	{
		str.clear();
		char buf[128] = {0};
		int128 Radix(0, 0, 0, 10);
		for(int128 num = number; !(num == 0); num = num/Radix)
		{
			if( sprintf_s(buf, 64, &quot;%d&quot;, ((int)(num%Radix).to_ulong())) &lt; 0 )
			{
				return false;
			}
			str = buf + str;
		}
		return true;
	}

	static void Print(int128 &amp; data, bool bEndl = true)
	{
		string str;
		if( data.ToDecimalStr(str) )
		{
			printf(&quot;%s%s&quot;, str.c_str(), (bEndl?&quot;\n&quot;:&quot;&quot;));
		}
	}
};

static int128 const one = int128(0,0,0,1);

template&lt;size_t N&gt;
void add_one(bitset&lt;N&gt;&amp; b)
{
    int i = 0;
    while(i &lt; N &amp;&amp; b[i] == 1)
	{
        b[i] = 0;
        ++i;
    }
    if(i == N)
		return;
    b[i] = 1;
}

void add_one(int128&amp; k)
{
    int i = 0;
    while(i &lt; 128 &amp;&amp; k[i] == 1)
	{
        k[i] = 0;
        ++i;
    }
    if(i == 128)
		return;
    k[i] = 1;
}

void shift(int128 &amp; in,deque&lt;bool&gt; &amp; de)
{
    if(de.front()==1)
	{
        de.pop_front();
        in=(in&lt;&lt;1)+one;
    }
    else
	{
        de.pop_front();
        in=in&lt;&lt;1;
    }
}

bool IsPrime(int128 const&amp; number)
{
    for(int128 i = int128(0,0,0,2) ; i &lt; number ; add_one(i))
	{
        if(number%i == 0)
			return 0;
    }
    return 1;
}</pre>（7）对<span style="font-family:Verdana">二叉树进行排序，排序后的结果为二叉排序树。<br>
二叉排序树又称二叉查找树，它或者是一棵空树，或者是具有下列性质的二叉树：（1）若左子树不空，则左子树上所有结点的&#20540;均小于它的根结点的&#20540;；（2）若右子树不空，则右子树上所有结点的&#20540;均大于它的根结点的&#20540;；（3）左、右子树也分别为二叉排序树；</span><br>
<span style="font-family:Verdana; font-size:14px">struct STreeNode</span><br>
<span style="font-family:Verdana; font-size:14px">{</span><br>
<span style="font-family:Verdana; font-size:14px">int key;</span><br>
<span style="font-family:Verdana; font-size:14px">STreeNode* left_child;</span><br>
<span style="font-family:Verdana; font-size:14px">STreeNode* right_child;</span><br>
<span style="font-family:Verdana; font-size:14px">};</span><br>
<span style="font-family:Verdana; font-size:14px">//返回&#20540;为排序后的根节点</span><br>
<span style="font-family:Verdana; font-size:14px">STreeNode* bt2bst(STreeNode* root_node)</span><br>
<span style="font-family:Verdana; font-size:14px">{</span><br>
<span style="font-family:Verdana; font-size:14px">}</span><br>
<pre name="code" class="cpp">struct STreeNode
{
	int key;
	STreeNode* left_child;
	STreeNode* right_child;
};

void InsertBST(STreeNode* t , int key)
{
    if(NULL == t)
    {
        t = new STreeNode; 
        t-&gt;left_child = t-&gt;right_child = NULL;
        t-&gt;key = key;
        return; 
    }

    if(key &lt; t-&gt;key) 
        InsertBST(t-&gt;left_child , key);
    else
        InsertBST(t-&gt;right_child , key ); 
}

//先序遍历树并插入建立排序树
void PreOrder(STreeNode* t , STreeNode* tBST)
{
   if(NULL != t)
   {
	   InsertBST(tBST , t-&gt;key);
	   PreOrder(t-&gt;left_child , tBST);
	   PreOrder(t-&gt;right_child , tBST);
   }
}

//目标函数
STreeNode* bt2bst(STreeNode* root_node)
{
    STreeNode* bstTreeRoot = NULL;
    PreOrder(root_node , bstTreeRoot);
    return bstTreeRoot;
}</pre><span style="font-family:Verdana; font-size:14px">二、扩展题<br>
（1）列出几种你了解的IPC机制。<br>
答：共享内存：是一片指定的物理内存区域，这个区域通常是在存放正常程序数据区域的外面, 它允许两个或多个进程共享一给定的存储区，是针对其他通信机制运行效率较低而设计的。使得多个进程可以访问同一块内存空间，是最快的可用IPC形式。往往与其它通信机制，如信号量结合使用，来达到进程间的同步及互斥。<br>
信号量（semaphore）：主要作为进程间以及同一进程不同线程之间的同步手段。<br>
套接口（Socket）：更为一般的进程间通信机制，可用于不同机器之间的进程间通信。起初是由Unix系统的BSD分支开发出来的，但现在一般可以移植到其它类Unix系统上。<br>
消息队列(MessageQueue)是一个结构化的排序内存段表，这个队列是进程存放或检索数据的地方，是一个消息的链表，可以被多个进程所共享。<br>
（2）列举一种死锁发生的场景，并给出解决方案。<br>
答：最经典的场景就是生产者/消费者，生产者线程生产物品，然后将物品放置在一个空缓冲区中供消费者线程消费。消费者线程从缓冲区中获得物品，然后释放缓冲区。由于生产者/消费者都在操作缓冲区，容易导致死锁的发生。<br>
可以通过添加锁的保护来对缓冲区进行互斥的访问，保证某一时刻只有一个线程对缓冲区进行操作，当缓冲区满的时候，生产者线程就会挂起，同时通知消费者线程。而缓冲区空的时候，消费者线程就会挂起，同时通知生产者线程。<br>
（3）列举编写一个TCP的服务器端程序可能需要用到的socket API，如果这些API的调用有先后关系，请按先后关系列出。<br>
（4）举例说明什么是MVC。<br>
答：MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。<br>
视图是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。<br>
模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。<br>
控制器接受用户的输入并调用模型和视图去完成用户的需求。所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后用确定用哪个视图来显示模型处理返回的数据。<br>
<br>
<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11473405">http://blog.csdn.net/hackbuteer1/article/details/11473405</a><br>
</span>

            <div>
                作者：Hackbuteer1 发表于2013/9/9 11:41:25 <a href="http://blog.csdn.net/hackbuteer1/article/details/11473405">原文链接</a>
            </div>
            <div>
            阅读：5831 评论：10 <a href="http://blog.csdn.net/hackbuteer1/article/details/11473405#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013豆瓣校园招聘研发类笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11263443</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11263443</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/6 19:35:42</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">2013豆瓣校园招聘研发类笔试题<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11263443">http://blog.csdn.net/hackbuteer1/article/details/11263443</a><br>
1、将一个递归算法改为对应的非递归算法时，通常需要使用（）<br>
A、优先队列 &nbsp; B、队列 &nbsp; &nbsp; C、循环队列 &nbsp; &nbsp; <span style="color:#3333ff">D、栈</span><br>
<br>
2、爸爸、妈妈、妹妹、小强，至少两个人同一生肖的概率是多少？<br>
<span style="color:#3333ff">A、41/96 &nbsp;</span> &nbsp; &nbsp;B、55/96 &nbsp; &nbsp; C、72/128 &nbsp; &nbsp; &nbsp;D、90/128<br>
<br>
3、已知*p=NULL， *q=new char[100]，sizeof(p) 和 sizeof(q)的&#20540;各为多少？<br>
A、4和100 &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">B、4和4 </span>&nbsp; &nbsp; &nbsp;C、不确定<br>
<br>
4、求以下程序的输出结果（）<br>
</span>
<pre name="code" class="cpp">int foo(int x , int y)
{
	if(x &lt;= 0 || y &lt;= 0)
		return 1;
	return 4*foo(x - 1 , y/2);
}
cout&lt;&lt;foo(3,5)&lt;&lt;endl;</pre>
A、256 &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">B、64 &nbsp;</span> &nbsp;C、16 &nbsp; &nbsp; &nbsp;D、4 &nbsp; &nbsp; &nbsp; &nbsp;E、1<br>
<br>
5、已知一张员工数据表A的表结构如图，请用一条SQL语句列出所有的工作岗位（JOB字段）的平均工资，并将其按照平均工资用升序排列。<br>
A {<br>
&nbsp; &nbsp; &nbsp;ENAME VARCHAR(20)<br>
&nbsp; &nbsp; &nbsp;JOB &nbsp; VARCHAR(20)<br>
&nbsp; &nbsp; &nbsp;SALARY NUMBER(5)<br>
}<br>
<br>
<br>
6、描述在浏览器中敲入一个网址并按下回车后所发生的事情（尽量详细）<br>
答：浏览器输入网址之后，首先<br>
步骤1：需要查找域名的IP地址，DNS查找过程如下：<br>
（1）浏览器缓存 – 浏览器的缓存DNS记录一段时间。 有趣的是，操作系统没有告诉浏览器储存DNS记录的时间，这样不同浏览器会储存各自固定的一个时间（2分钟到30分钟不等）。<br>
（2）系统缓存 – 如果在浏览器缓存里没有找到需要的记录，浏览器会做一个系统调用（windows里是gethostbyname）。这样便可获得系统缓存中的记录。<br>
（3）路由器缓存 – 接着，前面的查询请求发向路由器，它一般会有自己的DNS缓存。<br>
（4）ISP DNS 缓存 – 接下来要check的就是ISP缓存DNS的服务器。在这一般都能找到相应的缓存记录。<br>
（5）递归搜索 – 你的ISP的DNS服务器从跟域名服务器开始进行递归搜索，从.com顶级域名服务器到Facebook的域名服务器。一般DNS服务器的缓存中会有.com域名服务器中的域名，所以到顶级服务器的匹配过程不是那么必要了。<br>
步骤2：浏览器给web服务器发送一个HTTP请求。请求中也包含浏览器存储的该域名的cookies。可能你已经知道，在不同页面请求当中，cookies是与跟踪一个网站状态相匹配的键&#20540;。这样cookies会存储登录用户名，服务器分配的密码和一些用户设置等。Cookies会以文本文档形式存储在客户机里，每次请求时发送给服务器。<br>
步骤3：服务的永久重定向响应<br>
步骤4：浏览器跟踪重定向地址<br>
步骤5：服务器“处理”请求<br>
步骤6：服务器发回一个HTML响应<br>
步骤7：浏览器开始显示HTML<br>
步骤8：浏览器发送获取嵌入在HTML中的对象<br>
<br>
<span style="font-family:Verdana; font-size:14px">7、有一个在给定字符串中查找子串的函数strstr，该函数从给定的字符串src中查找substr并返回一个整数，指明substr第一次出现的位置（从0开始计数），如果找不到则返回-1。<br>
要求：<br>
1、实现该函数。<br>
2、为该函数设计与实现单元测试。<br>
说明：<br>
1、代码中不允许使用系统已有的库函数，所有用到的库函数都需要自己实现<br>
2、允许使用任何编程语言，函数原型自行给定。参考的C语言函数原型为 int strstr(char* src , char* substr)</span><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11263443">http://blog.csdn.net/hackbuteer1/article/details/11263443</a></span><br>
代码<br>

            <div>
                作者：Hackbuteer1 发表于2013/9/6 19:35:42 <a href="http://blog.csdn.net/hackbuteer1/article/details/11263443">原文链接</a>
            </div>
            <div>
            阅读：8958 评论：5 <a href="http://blog.csdn.net/hackbuteer1/article/details/11263443#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]网新恒天2013年校园招聘笔试]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11194703</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11194703</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/6 10:02:05</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11194703">http://blog.csdn.net/hackbuteer1/article/details/11194703</a><br>
一、英语<br>
1、请将以下短文翻译成英文<br>
电子商务是基于计算机技术、网络技术和远程通信技术，实现买卖双方不谋面地进行各种商贸活动，比如产品和服务的买卖。电子商务的蓬勃发展离不开当今人们的网购热情，根据一项网购习惯的调查显示，84%的中国内陆调查对象表示他们上网的主要目的就是网购。网上购物有很多优点，购物者足不出户就可以货比三家，买到心仪的商品。<br>
<br>
<br>
二、基础知识（选择题）<br>
1、下面程序的输出是：（）<br>
char s[] = &quot;Welcometohengtian&quot;; &nbsp; &nbsp;printf(&quot;%s%d&quot;,s&#43;7,sizeof(s));<br>
A、Welcometohengtian17<br>
<span style="color:#3333ff">B、tohengtian18<br>
</span>C、tohengtian17<br>
<span style="color:#000000">D、Welcometohengtian18<br>
</span>2、在操作系统中最常用来被作为存储文件关系的数据结构是（）<br>
A、链表 &nbsp; &nbsp; &nbsp; B、数组 &nbsp; &nbsp; &nbsp; &nbsp;C、堆栈 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">D、树</span><br>
3、下列哪一项不属于应用程序在操作系统中的内存分配方式（）<br>
<span style="color:#3333ff">A、队列上分配</span> &nbsp; &nbsp; B、静态存储区分配 &nbsp; &nbsp;C、栈上分配 &nbsp; &nbsp; &nbsp;D、堆上分配<br>
4、下列的排序算法中，初始数据集的排列顺序对算法的性能无影响的是（）<br>
A、插入排序 &nbsp; &nbsp;<span style="color:#3333ff">B、堆排序</span> &nbsp; &nbsp;C、冒泡排序 &nbsp; &nbsp;D、快速排序<br>
5、下列关于一个类的静态成员的描述中，不正确的是（）<br>
A、该类的对象共享其静态成员变量的&#20540;<br>
B、静态成员变量可被该类的所有方法访问<br>
C、该类的静态方法只能访问该类的静态成员变量<br>
<span style="color:#3333ff">D、该类的静态数据成员变量的&#20540;不可修改</span><br>
6、操作系统中，以下哪种方式无法实现进程同步？ &nbsp; &nbsp;<br>
<span style="color:#3333ff">A、Ctitical Section</span> &nbsp; &nbsp;B、Mutex &nbsp; &nbsp;C、Semaphore &nbsp; D、Event<br>
7、在一个具有n个顶点的无向图中，要连通全部顶点至少需要（）条边。<br>
A、N &nbsp; &nbsp;<span style="color:#3333ff">B、N-1</span> &nbsp; &nbsp;C、N&#43;1 &nbsp; &nbsp; D、N/2<br>
8、下面哪一种操作不是 stack 的基本操作？（）<br>
A、入栈 &nbsp; &nbsp;B、出栈 &nbsp; &nbsp;C、检查是否为空 &nbsp; &nbsp;<span style="color:#3333ff">D、排序栈中元素</span><br>
9、在带有头结点的单链表HL中，要向表头插入一个由指针p指向的结点，则执行（）<br>
<span style="color:#3333ff">A、p-&gt;next = HL-&gt;next ; HL-&gt;next = p ;&nbsp;</span><br>
B、p-&gt;next = HL ; HL = p ;&nbsp;<br>
C、p-&gt;next = HL ; p = HL ;<br>
D、HL = p ; p-&gt;next = HL ;<br>
10、对于线性表（7,34,55,25,64,46,20,10）进行散列存储时，若选用H(K) = K%9 作为散列函数，则散列地址为1的元素有（）个。<br>
<span style="color:#3333ff">A、4 </span>&nbsp; &nbsp; &nbsp;B、5 &nbsp; &nbsp; &nbsp; C、2 &nbsp; &nbsp; &nbsp; D、3<br>
11、下列代码运行后，result的&#20540;是多少（）<br>
List&lt;int&gt; ints = new List&lt;int&gt;(){1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};<br>
var query = from i in ints<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; where i%2 == 0 || i%3 == 0<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select i;<br>
ints.RemoveAt(1);<br>
int result = query.Count();<br>
A、7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; B、8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; C、9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#3333ff">D、10</span><br>
12、下面这段代码，当T分别是引用类型和&#20540;类型的时候，分别产生了多少个T对象（）<br>
T t = new T();<br>
Func(t);<br>
Func定义如下：<br>
public void Func(T t)<br>
{<br>
}<br>
A、1 &nbsp;1 &nbsp; &nbsp; &nbsp; B、2 &nbsp;1 &nbsp; &nbsp; &nbsp;C、2 &nbsp;2 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">D、1 &nbsp;2</span><br>
13、在.NET中，char类型占几个字节（）<br>
A、1 &nbsp; &nbsp; &nbsp;B、2 &nbsp; &nbsp; C、4 &nbsp; &nbsp; <span style="color:#3333ff">D、运行时根据平台确定</span><br>
14、下列哪个是C#中运行时常量的定义方法（）<br>
<span style="color:#3333ff">A、public static readonly int Port = 47896</span><br>
B、public const int Port = 47896<br>
C、public static const int Port = 47896<br>
D、public static sealed int Port = 47896<br>
15、在C#中类的默认访问级别是什么（该类不是内部类）（）<br>
<span style="color:#3333ff">A、internal </span>&nbsp; &nbsp; &nbsp; B、public &nbsp; &nbsp; C、protected internal &nbsp; &nbsp; &nbsp;D、private<br>
16、下面的代码发生了多少次装箱操作（）<br>
String.Format(&quot;{0}:{1} , {2} , {3}}&quot; , 2012 , 1.ToString() , &quot;2&quot; , DateTime.Now);<br>
A、1 &nbsp; &nbsp; &nbsp; B、2 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">C、3</span> &nbsp; &nbsp; &nbsp; D、4<br>
17、下面代码的输出结果是（）<br>
</span>
<pre class="cpp" name="code">try
{
	try
	{
		int i = 0;
		object value = 1/i;
	}
	catch(NullReferenceException Exception)
	{
		Console.Write(&quot;Null Re Ex&quot;);
	}
	finally
	{
		Console.Write(&quot;Cleanup &quot;);
	}
}
catch
{
	Console.Write(&quot;Generic catch &quot;);
}</pre>
A、Null Re Ex Cleanup Generic catch<br>
B、Null Re Ex Cleanup<br>
C、Cleanup Generic catch<br>
D、Generic catch Cleanup<br>
<br>
18、下面这段代码的输出结果是（）<br>
B b = new B();<br>
类定义如下：<br>
<pre class="cpp" name="code">class B : A
{
	static B()
	{
		Console.Write(&quot;B static &quot;);
	}
	public B()
	{
		Console.Write(&quot;B base &quot;);
	}
};
class A
{
	static A()
	{
		Console.Write(&quot;A static &quot;);
	}
	public A()
	{
		Console.Write(&quot;A base &quot;);
	}
};</pre>
A、A static A base B static B base&nbsp;<br>
B、B static B base A static A base<br>
C、B static A static A base B base<br>
D、A static B static B base A base<br>
<br>
19、下面代码的输出结果是（）<br>
object obj = &quot;2.0&quot;;<br>
Console.Write(string.Format(&quot;{0:0.00}&quot;,obj));<br>
A、2 &nbsp; &nbsp; &nbsp;B、2.00 &nbsp; &nbsp; &nbsp; C、2.0 &nbsp; &nbsp; &nbsp;D、空（无输出）<br>
<br>
20、下面代码运行后，对象c的items列表有几个&#20540;（）<br>
<pre class="cpp" name="code">class C
{
	static void Main()
	{
		C c = new C();
		c.Func(c.items);
	}
	private List&lt;int&gt; items = new List&lt;int&gt;();
	private void Func(List&lt;int&gt; items)
	{
		items.Add(1);
		this.items.Add(2);
		items = new List&lt;int&gt;();
		items.Add(1);
		this.items.Add(2);
	}
};</pre>
<span style="font-family:Verdana; font-size:14px">A、1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B、2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; C、3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D、4</span><span style="font-family:Verdana; font-size:14px"><br>
<br>
21、以下哪个表达式是不合法的（）<br>
A、 String x=&quot;Hello&quot; ; int y = 9; x&#43;=y;<br>
B、String x=&quot;Hello&quot; ; int y = 9; if(x==y) &nbsp;{ &nbsp;}<br>
C、String x=&quot;Hello&quot; ; int y = 9; x=x&#43;y;<br>
D、String x3=null ; boolean y3=(x3!=null) &amp;&amp; (x3.length()&gt;0);<br>
22、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class MathTest
{
	int add(int a , int b)
	{
		int result;
		result = a &#43; b;
		return result;
	}
	public static void main(String[] args)
	{
		MathTest mathTest = new MathTest();
		int i = 2;
		int j = 3;
		System.out.println(mathTest.add(i&#43;&#43;,&#43;&#43;j));
	}
}</pre>
A、5 &nbsp; &nbsp; &nbsp; B、6 &nbsp; &nbsp; &nbsp;C、7 &nbsp; &nbsp; &nbsp;D、局部变量没有初始化，程序有错<br>
<br>
23、下面关于new关键字的表述错误的是（）<br>
A、new关键字在生成一个对象时会为对象开辟内存空间<br>
B、new关键字在生成一个对象时会调用类的构造方法<br>
C、new关键字在生成一个对象时会将生成的对象的地址返回<br>
D、Java中只能通过new关键字来生成一个对象<br>
<br>
24、下面程序的运行结果是（）<br>
<pre name="code" class="cpp">public class Person
{
	boolean flag;
	int age = 25;
	static String name = &quot;zhangsan&quot;;
	public static void main(String[] args)
	{
		Person person1 = new Person();
		Person person2 = new Person();
		person1.age = 26;
		person1.name = &quot;lisi&quot;;
		if(person1.flag)
		{
			person2 = person1;
			System.out.println(person1.name &#43; &quot; : &quot; &#43; person1.age);
			System.out.println(person2.name &#43; &quot; : &quot; &#43; person2.age);
		}
		else
		{
			System.out.println(person1.name &#43; &quot; : &quot; &#43; person1.age);
			System.out.println(person2.name &#43; &quot; : &quot; &#43; person2.age);
		}
	}
}</pre>
<span style="font-family:Verdana; font-size:14px">A、lisi : 26<br>
&nbsp; &nbsp; lisi : 25<br>
B、lisi : 26<br>
&nbsp; &nbsp; zhangsan : 25<br>
C、zhangsan : 26<br>
&nbsp; &nbsp; &nbsp;lisi : 25<br>
D、程序有错误<br>
25、下面程序编译时生成几个class文件？程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class Persons
{
	public void changePersonInformation(Person person)
	{
		person = new Person();
		person.name = &quot;ZhangSan&quot;;
		person.age = 25;
	}
	public static void main(String[] args)
	{
		Persons persons = new Persons();
		Person person = new Person();
		persons.changePersonInformation(person);

		System.out.println(person.name);
		System.out.println(person.age);
;	}
}
class Person
{
	String name = &quot;LiSi&quot;;
	int age = 26;
};</pre>
<span style="font-family:Verdana; font-size:14px">A、2个 LiSi &nbsp; 26 &nbsp; &nbsp; B、1个 LiSi &nbsp; &nbsp;26 &nbsp; &nbsp; &nbsp;C、2个 ZhangSan &nbsp; &nbsp; 25 &nbsp; &nbsp; &nbsp; &nbsp; D、1个 ZhangSan &nbsp; &nbsp;25<br>
26、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class ConstructorTest
{
	public ConstructorTest()
	{
		this(6);
		System.out.println(&quot;this is a constructor.&quot;);
	}
	public ConstructorTest(int i)
	{
		this(i-1 , --i);
		System.out.println(i);
	}
	public ConstructorTest(int i , int j)
	{
		System.out.println(i&#43;j);
	}
	public static void main(String[] args)
	{
		ConstructorTest col = new ConstructorTest();
	}
};</pre>
<span style="font-family:Verdana; font-size:14px">A、6 this is a constructor. 9<br>
B、10 5 this is a constructor.<br>
C、5 9 this is a constructor.<br>
D、5 10 this is a constructor.<br>
27、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class Father
{
	public Father()
	{
		System.out.println(&quot;i am father.&quot;);
	}
	public void read()
	{
		System.out.println(&quot;Father is reading.&quot;);
	}
	public static void main(String[] args)
	{
		Father father = new Son();
		father.read();
	}
};
class Son extends Father
{
	public Son()
	{
		System.out.println(&quot;i am Son.&quot;);
	}
	public void read()
	{
		System.out.println(&quot;Son is reading.&quot;);
	}
};</pre>
<span style="font-family:Verdana; font-size:14px">A、 i am father.<br>
&nbsp; &nbsp; &nbsp;Father is reading.<br>
B、 i am Son.<br>
&nbsp; &nbsp; &nbsp;Son is reading.<br>
C、 i am father.<br>
&nbsp; &nbsp; &nbsp;i am Son.<br>
&nbsp; &nbsp; &nbsp;Son is reading.<br>
D、 i am Son.<br>
&nbsp; &nbsp; &nbsp; i am father.<br>
&nbsp; &nbsp; &nbsp; Son is reading.<br>
28、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class Father
{
	public Father()
	{
		System.out.println(&quot;i am father.&quot;);
	}
	public void read()
	{
		System.out.println(&quot;Father is reading.&quot;);
	}
	public static void main(String[] args)
	{
		Father father = new Son();
		father.write();
	}
};
class Son extends Father
{
	public Son()
	{
		System.out.println(&quot;i am Son.&quot;);
	}
	public void write()
	{
		System.out.println(&quot;Son is writting.&quot;);
	}
	public void read()
	{
		System.out.println(&quot;Son is reading.&quot;);
	}
};</pre>
<span style="font-family:Verdana; font-size:14px">A、 i am father.<br>
&nbsp; &nbsp; i am Son.<br>
&nbsp; &nbsp; Son is writting.<br>
B、 i am Son.<br>
&nbsp; &nbsp; Son is writting.<br>
C、 i am father.<br>
&nbsp; &nbsp; Son is writting.<br>
D、 程序有错误，无法运行<br>
29、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class OuterClass
{
	private class InterClass()
	{
		public InterClass()
		{
			System.out.println(&quot;InterClass Create&quot;);
		}
	}
	public OuterClass()
	{
		InterClass ic = new InterClass();
		System.out.println(&quot;OuterClass Create&quot;);
	}
	public static void main(String[] args)
	{
		OuterClass oc = new OuterClass();
	}
};</pre>
<span style="font-family:Verdana; font-size:14px">A、 OuterClass Create<br>
B、 InterClass Create<br>
C、 InterClass Create<br>
&nbsp; &nbsp; &nbsp;OuterClass Create<br>
D、OuterClass Create<br>
&nbsp; &nbsp; &nbsp;InterClass Create<br>
30、下面程序的运行结果是（）<br>
</span>
<pre name="code" class="cpp">public class StringTest
{
	public static void main(String[] args)
	{
		String hello = &quot;hello&quot;;
		String hel = &quot;hel&quot;;
		String lo = &quot;lo&quot;;
		System.out.println(hello == &quot;hel&quot; &#43; &quot;lo&quot;);
		System.out.println(hello == &quot;hel&quot; &#43; lo);
	}
};</pre>
A、true<br>
&nbsp; &nbsp; &nbsp; true<br>
B、false<br>
&nbsp; &nbsp; &nbsp; false<br>
C、true<br>
&nbsp; &nbsp; &nbsp; &nbsp;false<br>
D、false<br>
&nbsp; &nbsp; &nbsp; &nbsp;true<br>
<br>
<span style="font-family:Verdana; font-size:14px">三、编程题<br>
1、已知memcpy的函数为： void* memcpy(void *dest , const void* src , size_t count)其中dest是目的指针，src是源指针。不调用c&#43;&#43;/c的memcpy库函数，请编写memcpy。</span><br>
<pre class="cpp" name="code">void* memcpy(void *dest , const void* src , size_t count)
{
	assert( (dest != NULL) &amp;&amp; (src != NULL));     //安全检查
	assert(count &gt; 0);
	char* psrc = (char *)src;
	char* pdest = (char *)dest;
	while(count--)
	{
		*pdest&#43;&#43; = *psrc&#43;&#43;;
	}
	return dest;
}</pre>
<span style="font-family:Verdana; font-size:14px">四、附加题<br>
1、用适当的方法统计出下面字符串中出现次数最多的字符，已知字符串为：<br>
Welcome to our company Software Engineer Recruitment Examination.<br>
</span>
<pre class="cpp" name="code">char MostTimes(char* str)
{
	int i , max ,  hash[256];
	char ch;
	for(i = 0 ; i &lt; 256 ; &#43;&#43;i)
		hash[i] = 0;
	for(i = 0 ; str[i] != '\0' ; &#43;&#43;i)
	{
		if((str[i] &gt;= 'a' &amp;&amp; str[i] &lt;= 'z') || (str[i] &gt;= 'A' &amp;&amp; str[i] &lt;= 'Z'))
			&#43;&#43;hash[str[i]];
	}
	for(i = 0 , max = 0; i &lt; 256 ; &#43;&#43;i)
	{
		if(hash[i] &gt; max)
		{
			max = hash[i];
			ch = i;
		}
	}
	return ch;
}</pre>
2、已知有一个object类型的输入obj，我们不清楚他到底是什么内容，请使用C#写一个函数将其转化为int类型。基本的函数签名可以是 int ParseInt(object obj)，但不仅限于此。<br>
<br>
<br>
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11194703">http://blog.csdn.net/hackbuteer1/article/details/11194703</a></span><br>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/9/6 10:02:05 <a href="http://blog.csdn.net/hackbuteer1/article/details/11194703">原文链接</a>
            </div>
            <div>
            阅读：6179 评论：9 <a href="http://blog.csdn.net/hackbuteer1/article/details/11194703#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2012届华为校园招聘机试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11161557</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11161557</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/5 17:12:06</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">1、选秀节目打分，分为专家评委和大众评委，score[] 数组里面存储每个评委打的分数，judge_type[] 里存储与 score[] 数组对应的评委类别，judge_type[i] == 1，表示专家评委，judge_type[i] == 2，表示大众评委，n表示评委总数。打分规则如下：专家评委和大众评委的分数先分别取一个平均分（平均分取整），然后，总分 = 专家评委平均分 &nbsp;* 0.6 &#43; 大众评委 *
 0.4，总分取整。如果没有大众评委，则 总分 = 专家评委平均分，总分取整。函数最终返回选手得分。<br>
&nbsp; &nbsp; &nbsp; <span style="color:#009900">函数接口 &nbsp; int cal_score(int score[], int judge_type[], int n)&nbsp;<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11161557">http://blog.csdn.net/hackbuteer1/article/details/11161557</a></span><br>
</span><pre name="code" class="cpp">int cal_score(int score[], int judge_type[], int n)
{
	int i , TotalExpertScore , TotalPublictScore , ExpertNum , PublicNum;
	double res = 0;
	TotalExpertScore = TotalPublictScore = 0;
	ExpertNum = PublicNum = 0;
	for(i = 0 ; i &lt; n ; ++i)
	{
		if(1 == judge_type[i])      //专家评委
		{
			TotalExpertScore += score[i];
			++ExpertNum;
		}
		else                        //大众评委
		{
			TotalPublictScore += score[i];
			++PublicNum;
		}
	}
	if(0 == PublicNum)              //没有大众评委
	{
		return TotalExpertScore/ExpertNum;
	}
	else
	{
		res = 0.6*TotalExpertScore/ExpertNum + 0.4*TotalPublictScore/PublicNum;
		return (int)res;
	}
}</pre>&nbsp; &nbsp; <span style="font-family:Verdana; font-size:14px">&nbsp;2、给定一个数组input[] ，如果数组长度n为奇数，则将数组中最大的元素放到 output[] 数组最中间的位置，如果数组长度n为偶数，则将数组中最大的元素放到 output[] 数组中间两个位置偏右的那个位置上，然后再按从大到小的顺序，依次在第一个位置的两边，按照一左一右的顺序，依次存放剩下的数。<br>
&nbsp; &nbsp; &nbsp; 例如：input[] = {3, 6, 1, 9, 7} &nbsp; output[] = {3, 7, 9, 6, 1}; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input[] = {3, 6, 1, 9, 7, 8} &nbsp; &nbsp;output[] = {1, 6, 8, 9, 7, 3}<br>
&nbsp; &nbsp; &nbsp;</span><span style="color:rgb(0,153,0)"><span style="font-family:Verdana; font-size:14px">函数接口 &nbsp; void sort(int input[[, int n, int output[])<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11161557">http://blog.csdn.net/hackbuteer1/article/details/11161557</a></span></span><br>
<pre name="code" class="cpp">void sort(int input[] , int n , int output[])
{
	int i , j , k , temp , mid;
	for(i = 0 ; i &lt; n - 1 ; ++i)       //冒泡排序（降序）
	{
		for(j = 0 ; j &lt; n - i - 1 ; ++j)
		{
			if(input[j] &lt; input[j+1])
			{
				temp = input[j];
				input[j] = input[j+1];
				input[j+1] = temp;
			}
		}
	}//for
	mid = n&gt;&gt;1;
	j = mid - 1;
	k = mid + 1;
	output[mid] = input[0];
	for(i = 1 ; i &lt; n ; )               //按照一左一右的顺序
	{
		if(j &gt;= 0)
			output[j--] = input[i++];
		if(k &lt; n)
			output[k++] = input[i++];
	}
}</pre>&nbsp; &nbsp; &nbsp; <span style="font-family:Verdana; font-size:14px">3、操作系统任务调度问题。操作系统任务分为系统任务和用户任务两种。其中，系统任务的优先级 &lt; 50，用户任务的优先级 &gt;= 50且 &lt;= 255。优先级大于255的为非法任务，应予以剔除。现有一任务队列task[]，长度为n，task中的元素&#20540;表示任务的优先级，数&#20540;越小，优先级越高。函数scheduler实现如下功能，将task[] 中的任务按照系统任务、用户任务依次存放到
 system_task[] 数组和 user_task[] 数组中（数组中元素的&#20540;是任务在task[] 数组中的下标），并且优先级高的任务排在前面，优先级相同的任务按照入队顺序排列（即先入队的任务排在前面），数组元素为-1表示结束。<br>
&nbsp; &nbsp; &nbsp; 例如：task[] = {0, 30, 155, 1, 80, 300, 170, 40, 99} &nbsp; &nbsp;system_task[] = {0, 3, 1, 7, -1} &nbsp; &nbsp;user_task[] = {4, 8, 2, 6, -1}<br>
&nbsp; &nbsp; &nbsp;&nbsp;</span><span style="color:#009900"><span style="font-family:Verdana; font-size:14px">函数接口 &nbsp; &nbsp;void scheduler(int task[], int n, int system_task[], int user_task[])<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11161557">http://blog.csdn.net/hackbuteer1/article/details/11161557</a><br>
</span></span><pre name="code" class="cpp">void scheduler(int task[] , int n , int system_task[] , int user_task[])
{
	int i , j , k , index_user , index_system , temp;
	j = k = 0;
	index_user = index_system = 0;
	for(i = 0 ; i &lt; n ; ++i)
	{
		if(task[i] &gt; 255)
		{
			printf(&quot;This is illegal task!\n&quot;);
		}
		else if(task[i] &gt;= 50 &amp;&amp; task[i] &lt;= 255)      //用户任务
		{
			user_task[index_user++] = i;              //存储用户任务的下标
		}
		else         //系统任务
		{
			system_task[index_system++] = i;          //存储系统任务的下标
		}
	}//for
	//对每个类型组中的任务进行优先级排序
	for(i = 0 ; i &lt; index_user - 1 ; ++i)        //冒泡排序
	{
		for(j = 0 ; j &lt; index_user - i - 1 ; ++j)
		{
			if( task[user_task[j]] &gt; task[user_task[j+1]] )
			{
				temp = user_task[j];
				user_task[j] = user_task[j+1];
				user_task[j+1] = temp;
			}
		}
	}//for
	if(index_user &lt; n)
		user_task[index_user] = -1;

	for(i = 0 ; i &lt; index_system - 1 ; ++i)        //冒泡排序
	{
		for(j = 0 ; j &lt; index_system - i - 1 ; ++j)
		{
			if( task[system_task[j]] &gt; task[system_task[j+1]] )
			{
				temp = system_task[j];
				system_task[j] = system_task[j+1];
				system_task[j+1] = temp;
			}
		}
	}//for
	if(index_system &lt; n)
		system_task[index_system] = -1;
}</pre><br>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/9/5 17:12:06 <a href="http://blog.csdn.net/hackbuteer1/article/details/11161557">原文链接</a>
            </div>
            <div>
            阅读：4817 评论：5 <a href="http://blog.csdn.net/hackbuteer1/article/details/11161557#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013届华为校园招聘机试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11150519</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11150519</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/5 16:10:47</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">笔试题目（机试，共两题）&nbsp;<br>
题目一：子串分离&nbsp;<br>
题目描述： &nbsp;&nbsp;<br>
通过键盘输入任意一个字符串序列，字符串可能包含多个子串，子串以空&#26684;分隔。请编写一个程序，自动分离出各个子串，并使用’,’将其分隔，并且在最后也补充一个’,’并将子串存储。&nbsp;<br>
如果输入“abc def gh i &nbsp; &nbsp; &nbsp; &nbsp;d”，结果将是abc,def,gh,i,d,&nbsp;<br>
&nbsp;<br>
要求实现函数： &nbsp;&nbsp;<br>
void DivideString(const char *pInputStr, long lInputLen, char *pOutputStr);&nbsp;<br>
&nbsp;<br>
【输入】 &nbsp;pInputStr： &nbsp;输入字符串&nbsp;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lInputLen： &nbsp;输入字符串长度 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>
【输出】 &nbsp;pOutputStr： &nbsp;输出字符串，空间已经开辟好，与输入字符串等长；&nbsp;<br>
【注意】只需要完成该函数功能算法，中间不需要有任何IO 的输入输出&nbsp;<br>
示例 &nbsp;&nbsp;<br>
输入：“abc def gh i &nbsp; &nbsp; &nbsp; &nbsp;d”<br>
输出：“abc,def,gh,i,d,”<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11150519">http://blog.csdn.net/hackbuteer1/article/details/11150519</a></span><br>
<pre name="code" class="cpp">void DivideString(const char* pInputStr , long lInputLen , char* pOutputStr)
{
	int i , j;
	bool flag;
	for(i = 0 ; pInputStr[i] == ' ' ; ++i)   //跳过字符串前面的空格
		;
	flag = true;
	for(j = 0 ; i &lt; lInputLen ; ++i)
	{
		if(pInputStr[i] != ' ')
		{
			if(!flag)
				flag = true;
			pOutputStr[j++] = pInputStr[i];    //将各个子串分离保存下来
		}
		else
		{
			if(flag)
				pOutputStr[j++] = ',';
			flag = false;
		}
	}
	pOutputStr[j++] = ',';
	pOutputStr[j++] = '\0';
}</pre>&nbsp;<br>
<span style="font-family:Verdana; font-size:14px">题目二：逆序链表输出。&nbsp;<br>
题目描述： &nbsp;&nbsp;<br>
将输入的一个单向链表，逆序后输出链表中的&#20540;。链表定义如下：&nbsp;<br>
typedef struct tagListNode&nbsp;<br>
{&nbsp;<br>
&nbsp; &nbsp; &nbsp; int value;&nbsp;<br>
&nbsp; &nbsp; &nbsp; struct tagListNode *next;&nbsp;<br>
}ListNode;&nbsp;<br>
&nbsp;<br>
要求实现函数： &nbsp;&nbsp;<br>
void converse(ListNode **head);&nbsp;<br>
【输入】head： &nbsp; &nbsp;链表头节点，空间已经开辟好&nbsp;<br>
【输出】head： &nbsp; &nbsp;逆序后的链表头节点<br>
【返回】无&nbsp;<br>
【注意】只需要完成该函数功能算法，中间不需要有任何IO 的输入输出&nbsp;</span><br>
<pre name="code" class="cpp">// 返回新链表头节点
LinkNode *reverse_link(LinkNode *head)
{
	if(head == NULL)
		return NULL;
	LinkNode *prev , *curr , *reverse_head , *temp;
	prev = NULL , curr = head;
	while(curr-&gt;next)
	{
		temp = curr-&gt;next;
		curr-&gt;next = prev;
		prev = curr;
		curr = temp;
	}
	curr-&gt;next = prev;
	reverse_head = curr;
	return reverse_head;
}</pre><span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11150519">http://blog.csdn.net/hackbuteer1/article/details/11150519</a></span><br>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/9/5 16:10:47 <a href="http://blog.csdn.net/hackbuteer1/article/details/11150519">原文链接</a>
            </div>
            <div>
            阅读：7351 评论：2 <a href="http://blog.csdn.net/hackbuteer1/article/details/11150519#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2014届华为校园招聘机试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/11132567</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/11132567</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/9/5 14:14:58</pubDate>
        <description><![CDATA[
            
<p><span style="font-family:Verdana; font-size:14px">华为2014校园招聘的机试题目和2013年的完全一样。<br>
一、题目描述（60分）：<br>
通过键盘输入一串小写字母(a~z)组成的字符串。请编写一个字符串过滤程序，若字符串中出现多个相同的字符，将非首次出现的字符过滤掉。<br>
比如字符串“abacacde”过滤结果为“abcde”。</span></p>
<p>要求实现函数：<span style="font-family:Verdana; font-size:14px">void stringFilter(const char *pInputStr, long lInputLen, char *pOutputStr);</span></p>
<p><span style="font-family:Verdana; font-size:14px">【输入】 pInputStr：&nbsp; 输入字符串<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; lInputLen：&nbsp; 输入字符串长度&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
【输出】 pOutputStr： 输出字符串，空间已经开辟好，与输入字符串等长；</span><span style="font-family:Verdana; font-size:14px">&nbsp;</span></p>
<p><span style="font-family:Verdana; font-size:14px">【注意】只需要完成该函数功能算法，中间不需要有任何IO的输入输出</span></p>
<p><span style="font-family:Verdana; font-size:14px">示例 <br>
输入：“deefd”&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 输出：“def”<br>
输入：“afafafaf”&nbsp;&nbsp;&nbsp;&nbsp; 输出：“af”<br>
输入：“pppppppp”&nbsp;&nbsp;&nbsp;&nbsp; 输出：“p”</span></p>
<p><span style="font-family:Verdana; font-size:14px">main函数已经隐藏，这里保留给用户的测试入口，在这里测试你的实现函数，可以调用printf打印输出<br>
当前你可以使用其他方法测试，只要保证最终程序能正确执行即可，该函数实现可以任意修改，但是不要改变函数原型。一定要保证编译运行不受影响。<br>
&nbsp;</span><span style="font-family:Verdana; font-size:14px"><br>
二、题目描述（40分）：<br>
通过键盘输入一串小写字母(a~z)组成的字符串。请编写一个字符串压缩程序，将字符串中连续出席的重复字母进行压缩，并输出压缩后的字符串。<br>
压缩规则：<br>
1、仅压缩连续重复出现的字符。比如字符串&quot;abcbc&quot;由于无连续重复字符，压缩后的字符串还是&quot;abcbc&quot;。<br>
2、压缩字段的&#26684;式为&quot;字符重复的次数&#43;字符&quot;。例如：字符串&quot;xxxyyyyyyz&quot;压缩后就成为&quot;3x6yz&quot;。</span></p>
<p><span style="font-family:Verdana; font-size:14px">要求实现函数： <br>
void stringZip(const char *pInputStr, long lInputLen, char *pOutputStr);</span></p>
<p><span style="font-family:Verdana; font-size:14px">【输入】 pInputStr：&nbsp; 输入字符串<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lInputLen：&nbsp; 输入字符串长度<br>
【输出】 pOutputStr： 输出字符串，空间已经开辟好，与输入字符串等长；</span></p>
<p><span style="font-family:Verdana; font-size:14px">【注意】只需要完成该函数功能算法，中间不需要有任何IO的输入输出</span></p>
<p><span style="font-family:Verdana; font-size:14px">示例 <br>
输入：“cccddecc”&nbsp;&nbsp; 输出：“3c2de2c”<br>
输入：“adef”&nbsp;&nbsp;&nbsp;&nbsp; 输出：“adef”<br>
输入：“pppppppp” 输出：“8p”</span></p>
<p><span style="font-family:Verdana; font-size:14px">三、题目描述（50分）： <br>
通过键盘输入100以内正整数的加、减运算式，请编写一个程序输出运算结果字符串。<br>
输入字符串的&#26684;式为：“操作数1 运算符 操作数2”，“操作数”与“运算符”之间以一个空&#26684;隔开。</span></p>
<p><span style="font-family:Verdana; font-size:14px">补充说明：<br>
1、操作数为正整数，不需要考虑计算结果溢出的情况。<br>
2、若输入算式&#26684;式错误，输出结果为“0”。</span></p>
<p><span style="font-family:Verdana; font-size:14px">要求实现函数： <br>
void arithmetic(const char *pInputStr, long lInputLen, char *pOutputStr);</span></p>
<p><span style="font-family:Verdana; font-size:14px">【输入】 pInputStr：&nbsp; 输入字符串<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lInputLen：&nbsp; 输入字符串长度&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
【输出】 pOutputStr： 输出字符串，空间已经开辟好，与输入字符串等长；</span><span style="font-family:Verdana; font-size:14px">&nbsp;</span></p>
<p><span style="font-family:Verdana; font-size:14px">【注意】只需要完成该函数功能算法，中间不需要有任何IO的输入输出</span></p>
<p><span style="font-family:Verdana; font-size:14px">示例 <br>
输入：“4 &#43; 7”&nbsp; 输出：“11”<br>
输入：“4 - 7”&nbsp; 输出：“-3”<br>
输入：“9 &#43;&#43; 7”&nbsp; 输出：“0” 注：&#26684;式错误<br>
</span></p>
<pre class="cpp" name="code">#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;stdlib.h&gt;

#define MAXCHAR 256

void stringFilter(const char* pInputStr , long lInputLen , char* pOutputStr)
{
	bool hash[26] = {0};    //统计字符是否出现
	int i , j;
	for(i = 0 , j = 0 ; i &lt; lInputLen; ++i)
	{
		if(false == hash[pInputStr[i] - 'a'])     //该字符还木有出现过
		{
			hash[pInputStr[i] - 'a'] = true;
			pOutputStr[j++] = pInputStr[i];
		}
	}
	pOutputStr[j] = '\0';
}

void stringZip(const char* pInputStr , long lInputLen , char* pOutputStr)
{
	int i , j , k , num;
	char buffer[20];
	for(i = 0 , k = 0; i &lt; lInputLen; )
	{
		num = 0;
		for(j = i + 1 ; j &lt; lInputLen ; ++j)
		{
			if(pInputStr[i] == pInputStr[j])     //统计字符串中每个字符后面连续出现的重复字母次数
				++num;
			else
				break;
		}//for
		if(0 != num)    //num可能是两位或三位或更多位的整数
		{
			memset(buffer , 0 , sizeof(buffer));
			itoa(num + 1 , buffer , 10);      //将整数按10进制转换为字符串
			strcpy(pOutputStr + k , buffer);
			k += strlen(buffer);
		}
		pOutputStr[k++] = pInputStr[i];
		i = i + num + 1;
	}//for
	pOutputStr[k] = '\0';
}

void arithmetic(const char* pInputStr , long lInputLen , char* pOutputStr)
{
	int i , j , num1 , num2 , result , num_space;
	char buffer[4];
	bool add , sub;
	add = sub = false;
	for(i = 0 , num_space = 0 ; i &lt; lInputLen ; ++i)
	{
		if(pInputStr[i] == ' ')
			++num_space;
	}
	if(2 != num_space)     //空格数非法
	{
		pOutputStr[0] = '0';
		pOutputStr[1] = '\0';
		return ;
	}
	num1 = num2 = 0;
	for(i = 0 ; pInputStr[i] != ' ' ; ++i)
	{
		if(pInputStr[i] &gt;= '0' &amp;&amp; pInputStr[i] &lt;= '9')
			num1 = num1 * 10 + pInputStr[i] - '0';
		else                 //第一个操作数中有非法字符
		{
			pOutputStr[0] = '0';
			pOutputStr[1] = '\0';
			return ;
		}
	}
	for(j = i + 1 ; pInputStr[j] != ' ' ; ++j);
	if(1 != j - i - 1)     //运算符长度不合法
	{
		pOutputStr[0] = '0';
		pOutputStr[1] = '\0';
		return ;
	}
	else    //操作符的长度为1
	{
		if('+' != pInputStr[i+1] &amp;&amp; '-' != pInputStr[i+1])    //操作符号非法
		{
			pOutputStr[0] = '0';
			pOutputStr[1] = '\0';
			return ;
		}
		else
		{
			if('+' == pInputStr[i+1])
				add = true;
			if('-' == pInputStr[i+1])
				sub = true;
			for(i = j + 1 ; i &lt; lInputLen ; ++i)
			{
				if(pInputStr[i] &gt;= '0' &amp;&amp; pInputStr[i] &lt;= '9')
					num2 = num2 * 10 + pInputStr[i] - '0';
				else          //第二个操作数中有非法字符
				{
					pOutputStr[0] = '0';
					pOutputStr[1] = '\0';
					return ;
				}
			}//for
			if(add)
				result = num1 + num2;
			else if(sub)
				result = num1 - num2;
			memset(buffer , 0 , sizeof(buffer));
			itoa(result , buffer , 10);      //将整数按10进制转换为字符串
			strcpy(pOutputStr , buffer);
		}//esle
	}//else
}


int main(void)
{
	printf(&quot; -- 2014年华为校园招聘机试题 (http://blog.csdn.net/hackbuteer1) --\n\n&quot;);
	char pInputStr1[] = {&quot;aaabbbcccdde&quot;};
	char pInputStr2[] = {&quot;aaaaaaaaaaaabbcddddddddddddddddde&quot;};
	char pInputStr3[] = {&quot;3 + 4&quot;};
	char pOutputStr1[MAXCHAR] = {0};
	char pOutputStr2[MAXCHAR] = {0};
	char pOutputStr3[MAXCHAR] = {0};
	stringFilter(pInputStr1 , strlen(pInputStr1) , pOutputStr1);
	stringZip(pInputStr2 , strlen(pInputStr2) , pOutputStr2);
	arithmetic(pInputStr3 , strlen(pInputStr3) , pOutputStr3);
	puts(pOutputStr1);
	puts(pOutputStr2);
	puts(pOutputStr3);
	return 0;
}</pre>
<p><span style="font-family:Verdana; font-size:18px">转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/11132567">http://blog.csdn.net/hackbuteer1/article/details/11132567</a></span><br>
</p>

            <div>
                作者：Hackbuteer1 发表于2013/9/5 14:14:58 <a href="http://blog.csdn.net/hackbuteer1/article/details/11132567">原文链接</a>
            </div>
            <div>
            阅读：34977 评论：27 <a href="http://blog.csdn.net/hackbuteer1/article/details/11132567#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]【强烈推荐】《剑指Offer：名企面试官精讲典型编程题》一书中IT名企经典面试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/9156289</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/9156289</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/6/23 19:00:38</pubDate>
        <description><![CDATA[
            
<span style="">各位程序猿：&nbsp;</span><br style="">
<br style="">
<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="http://click.union.jd.com/JdClick/?unionId=20492&amp;t=1&amp;to=http://book.jd.com/10873980.html" style="">《剑指Offer》</a><span style="">一书源自该书作者何海涛坚持更新与编写的博客（</span><a href="http://zhedahht.blog.163.com/" style="">http://zhedahht.blog.163.com/</a><span style="">），该博客收集整理了大量如微软、Google等知名IT企业的经典面试题。</span><a href="http://click.union.jd.com/JdClick/?unionId=20492&amp;t=1&amp;to=http://book.jd.com/10873980.html" style="">《剑指Offer》</a><span style="">一书在此基础上选取了50个典型的程序员面试题，从基础知识、代码质量、解题思路、优化效率和综合能力五个方面系统整理了影响面试的5个要点，难度适中，讲解清晰，非常适合程序猿用于准备求职面试。&nbsp;</span><br style="">
<p><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目前国内外越来越多公司将在线机试的方式引入求职招聘中，或者通过各种在线比赛和比赛平台搜寻各类编程人才。在线编程练习可以培养求职者良好的编程习惯，提高编程水平，其自动判题功能也能大大节约求职者验证代码的时间。<a href="http://ac.jobdu.com">九度在线测试系统</a>现将书中题目收录进九度题库中，供广大求职者学习使用。&nbsp;</span></p>
<p style="text-align:center"><span style="color:#FFFFFF"><span style=""><span style="color:rgb(51,51,51); font-family:'MicroSoft Yahei',Helvetica,Arial,Georgia,Simsun; font-size:18px; line-height:27px"></span></span></span>
<table style="font-weight:400; border-top-width:1px; border-right-width:1px; border-bottom-width:1px; border-left-width:1px; border-top-style:solid; border-right-style:solid; border-bottom-style:solid; border-left-style:solid; border-color:initial; border-collapse:collapse; width:770px; border-top-color:rgb(209,209,209); border-right-color:rgb(209,209,209); border-bottom-color:rgb(209,209,209); border-left-color:rgb(209,209,209)">
<thead>
<tr class="tc f16" style="text-align:center; font-size:16px; height:25px; line-height:25px; color:rgb(255,255,255); background-color:rgb(41,41,41)">
<th colspan="6" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
《剑指Offer》面试题集收录汇总</th>
</tr>
</thead>
<tbody>
<tr class="tl bg-first f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(229,229,229)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题1</td>
<td align="center" valign="middle" class="f14" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse; font-size:14px">
赋&#20540;运算符函数</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
不适合在线模式</td>
</tr>
<tr class="tl bg-first f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(229,229,229)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题2</td>
<td align="center" valign="middle" class="f14" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse; font-size:14px">
实现Singleton模式</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
不适合在线模式</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题3</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1384" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二维数组中的查找</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题4</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1510" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">替换空&#26684;</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题5</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1511" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">从头到尾打印链表</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题6</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1385" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">重建二叉树</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题7</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1512" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">用两个栈实现队列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题8</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1386" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">旋转数组的最小数字</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题9</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1387" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">斐波那契数列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题9(变形)</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1388" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">跳台阶</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题9(变形)</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1389" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">变态跳台阶</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题9(变形)</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1390" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">矩形覆盖</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题10</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1513" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二进制中1的个数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题11</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1514" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">数&#20540;的整数次方</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题12</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1515" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">打印1到最大的N位数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl bg-first f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(229,229,229)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题13</td>
<td align="center" valign="middle" class="f14" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse; font-size:14px">
在O(1)时间删除链表结点</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
不适合在线模式</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题14</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1516" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">调整数组顺序使奇数位于偶数前面</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题15</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1517" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">链表中倒数第k个结点</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题16</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1518" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">反转链表</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题17</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1519" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">合并两个排序的链表</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题18</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1520" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">树的子结构</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题19</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1521" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二叉树的镜像</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题20</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1391" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">顺时针打印矩阵</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题21</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1522" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">包含min函数的栈</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题22</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1366" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">栈的压入、弹出序列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题23</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1523" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">从上往下打印二叉树</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题24</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1367" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二叉搜索树的后序遍历序列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题25</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1368" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二叉树中和为某一&#20540;的路径</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题26</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1524" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">复杂链表的复制</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题27</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1503" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二叉搜索树与双向链表</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题28</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1369" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">字符串的排列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题29</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1370" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">数组中出现次数超过一半的数字</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题30</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1371" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">最小的K个数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题31</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1372" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">连续子数组的最大和</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题32</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1373" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">从1到n整数中1出现的次数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题33</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1504" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">把数组排成最小的数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题34</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1214" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">丑数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题35</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1283" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">第一个只出现一次的字符</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题36</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1348" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">数组中的逆序对</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题37</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1505" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">两个链表的第一个公共结点</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题38</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1349" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">数字在排序数组中出现的次数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题39</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1350" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">二叉树的深度</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题40</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1351" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">数组中只出现一次的数字</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题41</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1352" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">和为S的两个数字</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题41</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1354" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">和为S的连续正数序列</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题42</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1361" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">翻转单词顺序</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题42</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1362" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">左旋转字符串</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题43</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1360" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">N个骰子的点数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题44</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1355" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">扑克牌的顺子</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题45</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1356" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">圆圈中最后剩下的数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题46</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1506" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">求1&#43;2&#43;……&#43;n</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题47</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1507" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">不用加减乘除做加法</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl bg-first f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(229,229,229)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题48</td>
<td align="center" valign="middle" class="f14" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse; font-size:14px">
不能被继承的类</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
不适合在线模式</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题49</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1508" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">把字符串转换成整数</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
<tr class="tl f14" style="text-align:left; font-size:14px; height:25px; line-height:25px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(209,209,209); background-color:rgb(255,255,255)">
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
面试题50</td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
<a class="cBlue f14" href="http://ac.jobdu.com/problem.php?pid=1509" style="text-decoration:none; color:rgb(35,118,174); font-size:14px">树中两个结点的最低公共祖先</a></td>
<td align="center" valign="middle" style="margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:8px; font-weight:400; border-top-width:0px; border-right-width:0px; border-bottom-width:0px; border-left-width:0px; border-top-style:none; border-right-style:none; border-bottom-style:none; border-left-style:none; border-color:initial; border-collapse:collapse">
已收录</td>
</tr>
</tbody>
</table>
<br>
</p>

            <div>
                作者：Hackbuteer1 发表于2013/6/23 19:00:38 <a href="http://blog.csdn.net/hackbuteer1/article/details/9156289">原文链接</a>
            </div>
            <div>
            阅读：18684 评论：10 <a href="http://blog.csdn.net/hackbuteer1/article/details/9156289#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]【强烈推荐】程序猿们，九度Online Judge开始举办月赛啦！！会编程才是王道！！！！！]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8888744</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8888744</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/5/6 8:52:10</pubDate>
        <description><![CDATA[
            
<span style="font-family:微软雅黑; font-size:18px"><span style="border-collapse:collapse"><span style="border-collapse:collapse; color:rgb(68,68,68); font-family:Verdana,Helvetica,Arial,sans-serif; font-size:14px; line-height:22px"></span></span></span>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:center">
<span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#0000ff; word-wrap:break-word; line-height:normal">程序猿们，九度Online
 Judge开始举办月赛啦！！会编程才是王道！！</span></span></span></span></p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:center">
<span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#0000ff; word-wrap:break-word; line-height:normal"><br style="word-wrap:break-word; line-height:normal">
</span></span></span></span></p>
<br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="color:#0000ff; word-wrap:break-word; line-height:normal">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;</span><span style="color:#000000; word-wrap:break-word; line-height:normal">在国内计算机考研中，已经有越来越多的高校采用ACM上机考试的形式，在复试中来考察考生的实际动手编程能力，并且机试在复试中所占的比例非常高，很多高校甚至规定复试成绩不及&#26684;者，一律不得录取。目前国内高校开展ACM机试教学的高校非常少，因此</span><span style="color:red; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal"><strong>提早开始准备和练习，对于一个完全没有接触过ACM的计算机考研人来说，是必须的！</strong></span></span></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal"></span></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal"></span></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal"></span></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal"><strong>在针对程序猿的校园招聘中，各大IT名企也非常青睐在各种程序设计竞赛中获得好成绩的人才，使用ACM上机考试的方式考核面试者实际动手编程能力的趋势正在兴起。</strong></span>&nbsp;
 &nbsp;<br style="word-wrap:break-word; line-height:normal">
</span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
 &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<br style="word-wrap:break-word; line-height:normal">
<span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span><span style="font-size:18px; word-wrap:break-word; line-height:normal"><span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">&nbsp;
 &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;ACM</span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">上机考试相比传统的笔试、面试而言，更能有效的考察程序猿的编程能力、编程素养以及编程习惯，结合程序猿在面试中的表达和沟通能力的评判，高校和企业能够非常准确的把握程序猿的综合能力。在与很多企业HR交流中得知，每年招聘进入公司的人员中，总有不少通过美化简历和工作经历、在面试中能说会道、夸夸其谈的程序猿，招入公司后才发现编程能力极差。对于这种情况，传统的</span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">笔试、面试没有办法高效地筛选，</span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">而</span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">ACM</span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">上机考试能让真正的程序猿不被埋没。</span></span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp; &nbsp;&nbsp; &nbsp;基于以上现实，从2013年5月开始，九度Online Judge将定期举办月赛，给大家一个学习编程、练习编程、交流编程的平台，同时，对于在月赛中取得优异成绩的程序猿，我们会在即将开始的校园招聘中，通过九度的绿色通道，将其简历直接推送给负责各名企负责招聘的高层。现将九度月赛详情说明如下：</span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><br style="word-wrap:break-word; line-height:normal">
</span><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal"><strong>题目来源：</strong></span></span></span></span><br style="word-wrap:break-word; line-height:normal">
<span style="word-wrap:break-word; line-height:normal; font-size:15pt"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;各大IT名企（如Facebook，Google，微软，百度，腾讯等）的面试题库，题目有代表性、有针对性、且面试中考到的频率高。</span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><br style="word-wrap:break-word; line-height:normal">
</span><br style="word-wrap:break-word; line-height:normal">
<span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal">题目难度：</span></span></span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;参照国内知名IT及互联网公司面试题难度。</span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><br style="word-wrap:break-word; line-height:normal">
</span><br style="word-wrap:break-word; line-height:normal">
<span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal">九度月赛的时间：</span></span></span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;自2013年5月（含）起，每月第三个星期日的晚上19：00-22：00。第一次比赛时间为：2013年5月19日</span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">晚上19：00-22：00。</span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><br style="word-wrap:break-word; line-height:normal">
</span><br style="word-wrap:break-word; line-height:normal">
<span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal">九度月赛的形式：</span></span></span></span><br style="word-wrap:break-word; line-height:normal">
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;九度月赛使用九度Online Judge（</span></span><a href="http://ac.jobdu.com/" target="_blank" style="word-wrap:break-word; text-decoration:none; color:rgb(0,102,153); line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal">http://ac.jobdu.com</span></a><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">）作为比赛平台，每次月赛使用5~6道题目。每道题目包含5个测试案例，比赛成绩以用户通过的测试案例总得分计算。</span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px"></span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp;
 &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;</span></span><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:20px">&nbsp;
 &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span><br style="word-wrap:break-word; line-height:normal">
<p><span style="font-family:Verdana,Helvetica,Arial,sans-serif; word-wrap:break-word; line-height:normal"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:14px"><span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal">参与方式：</span></span></span></span></span></span></span></p>
<p><span style="font-family:Verdana,Helvetica,Arial,sans-serif; word-wrap:break-word; line-height:normal"><span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal; font-size:14px"><span style="word-wrap:break-word; text-align:left; font-style:normal; line-height:normal; font-weight:bold"><span style="font-family:黑体; word-wrap:break-word; line-height:normal"><span style="font-size:24px; word-wrap:break-word; line-height:normal"><span style="color:#ff0000; word-wrap:break-word; line-height:normal">&nbsp;&nbsp;&nbsp;</span></span></span></span></span></span></span></p>
<span style="font-family:微软雅黑; word-wrap:break-word; line-height:normal"><span style="font-size:18px; word-wrap:break-word; line-height:normal"></span></span>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'">1.&nbsp;&nbsp;注册：<br style="word-wrap:break-word; line-height:normal">
&nbsp; &nbsp;&nbsp; &nbsp; 登录<a href="http://ac.jobdu.com/" target="_blank" style="word-wrap:break-word; text-decoration:none; color:rgb(0,102,153); line-height:normal">http://ac.jobdu.com</a>进行注册（如果已经有王道账户或是九度论坛账户的同学可以直接凭王道账户或是九度论坛账户登录）。</span></span></span></p>
<span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'"><br style="word-wrap:break-word; line-height:normal">
</span></span></span>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'">2.&nbsp;&nbsp;参与比赛：</span></span></span></span></span></p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'">登录九度OJ后点击导航栏的“在线比赛与考试
 ”下的“<a href="http://ac.jobdu.com/contest.php" target="_blank" style="word-wrap:break-word; text-decoration:none; color:rgb(0,102,153); line-height:normal">比赛及考试</a>”查看比赛和考试列表。</span></span></span></span></span></p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'"><br style="word-wrap:break-word; line-height:normal">
</span></span></span></span></span></p>
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'"><span style="color:#000000; word-wrap:break-word; line-height:normal"></span></span></span></span></span>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="font-size:18px"><span style="font-family:'Microsoft YaHei'">3.&nbsp;&nbsp;比赛平台：<br style="word-wrap:break-word; line-height:normal">
&nbsp; &nbsp;&nbsp; &nbsp; 实战测试选用的判题平台为九度OJ<span style="word-wrap:break-word; line-height:normal">（</span><a href="http://ac.jobdu.com/" target="_blank" style="word-wrap:break-word; text-decoration:none; color:rgb(0,102,153); line-height:normal">http://ac.jobdu.com</a><span style="word-wrap:break-word; line-height:normal">）</span>，参加测试的同学可以先在OJ上进行练习以熟悉九度OJ，在测试中可以更加自如地发挥自己的水平。</span></span></p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="color:#000000; word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'"><br style="word-wrap:break-word; line-height:normal">
</span></span></span></span></span></p>
<span style="word-wrap:break-word; line-height:normal"><span style="word-wrap:break-word; line-height:normal"><span style="font-size:18px"><span style="font-family:'Microsoft YaHei'"><span style="color:#000000; word-wrap:break-word; line-height:normal"></span></span></span></span></span>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<span style="font-size:18px"><span style="font-family:'Microsoft YaHei'">4.&nbsp;&nbsp;比赛讨论<br style="word-wrap:break-word; line-height:normal">
&nbsp; &nbsp;&nbsp; &nbsp;在比赛结束之后，参加测试的同学可以登录<span style="word-wrap:break-word; line-height:normal">论坛</span>进行测试题目的讨论交流。</span></span></p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<br>
</p>
<p style="word-wrap:break-word; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; padding-top:0px; padding-right:0px; padding-bottom:0px; padding-left:0px; line-height:30px; text-indent:2em; text-align:left">
<br>
</p>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/5/6 8:52:10 <a href="http://blog.csdn.net/hackbuteer1/article/details/8888744">原文链接</a>
            </div>
            <div>
            阅读：5138 评论：2 <a href="http://blog.csdn.net/hackbuteer1/article/details/8888744#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013百度校园招聘-机器学习和数据挖掘工程师-笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8887818</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8887818</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/5/5 20:26:40</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">一、简答题（30分）<br>
1、简述数据库操作的步骤（10分）<br>
2、TCP/IP的四层结构（10分）<br>
3、什么是MVC结构，简要介绍各层结构的作用（10分）<br>
二、算法与程序设计（45分）<br>
1、由a-z、0-9组成3位的字符密码，设计一个算法，列出并打印所有可能的密码组合（可用伪代码、C、C&#43;&#43;、Java实现）（15分）<br>
2、实现字符串反转函数（15分）<br>
3、百度凤巢系统，广告客户购买一系列关键词，数据结构如下：（15分）<br>
User1 手机 智能手机 iphone 台式机 …<br>
User2 手机 iphone 笔记本电脑 三星手机 …<br>
User3 htc 平板电脑 手机 …<br>
（1）根据以上数据结构对关键词进行KMeans聚类，请列出关键词的向量表示、距离公式和KMeans算法的整体步骤<br>
（2）计算给定关键词与客户关键词的文字相关性，请列出关键词与客户的表达符号和计算公式<br>
三、系统设计题（25分）<br>
一维数据的拟合，给定数据集{xi,yi}(i=1,…,n)，xi是训练数据，yi是对应的预期&#20540;。拟使用线性、二次、高次等函数进行拟合<br>
线性：f(x)=ax&#43;b<br>
二次：f(x)=ax^2&#43;bx&#43;c<br>
三次：f(x)=ax^3&#43;bx^2&#43;cx&#43;d<br>
（1）请依次列出线性、二次、三次拟合的误差函数表达式（2分）<br>
（2）按照梯度下降法进行拟合，请给出具体的推导过程。（7分）<br>
（3）下图给出了线性、二次和七次拟合的效果图。请说明进行数据拟合时，需要考虑哪些问题。在本例中，你选择哪种拟合函数。（8分）<br>
（4）给出实验方案（8分）</span>

            <div>
                作者：Hackbuteer1 发表于2013/5/5 20:26:40 <a href="http://blog.csdn.net/hackbuteer1/article/details/8887818">原文链接</a>
            </div>
            <div>
            阅读：12440 评论：2 <a href="http://blog.csdn.net/hackbuteer1/article/details/8887818#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]一个应届计算机毕业生的2012求职之路]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8501605</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8501605</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/1/14 16:40:58</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">1、简介<br>
毕业答辩搞定，总算可以闲一段时间，把这段求职经历写出来，也作为之前三个半月的求职的回顾。<br>
首先说说我拿到的offer情况：<br>
微软，3面-&gt;终面，搞定<br>
百度，3面-&gt;终面，口头offer<br>
搜狗，2面，悲剧<br>
腾讯，1面，悲剧<br>
布丁移动，3面，搞定<br>
涂鸦游戏，3面，搞定<br>
友盟，3面-&gt;CEO面，搞定<br>
雅虎，4面-&gt;终面，搞定<br>
微策略，2面，悲剧<br>
人民搜索，3面-&gt;终面，搞定<br>
人人，2面&#43;终面&#43;Special面，搞定<br>
Google，7面，搞定<br>
求职经历分为定位、准备、简历、笔试和面试这五个部分，大家挑感兴趣的看就成。<br>
<br>
我的求职经历适用但不限于码农，不适用与企事业单位（据说是完全不同的考察标准和流程）。废话比较多，大家耐心忍受，有什么问题可以跟帖提问。<br>
<br>
2、定位<br>
<br>
教育经历：本科在大连某工科院校，由于GPA比较惨烈&#43;挂科，所以没保成研，毕业后修了一年英语双学位，然后到帝都计算机职业教育学院接受再教育。<br>
技术能力：属于半码农半产品的类型，代码编的过去（搞过compiler），也有一些拿的出手的产品（几十w的用户量），一句话描述：几十w代码&#43;几十w用户的Coder。<br>
专业能力：非ACM出身，算法拙计但基础扎实。由于单身所以看了N多书（CS&#43;心理&#43;经管&#43;历史），扯淡能力强大，碰到非专业的各种秒杀，碰到专业各种拙计。<br>
实习经历：大四在一家ds公司实习过一年，攒了不少代码量；后来在MS断断续续的待了一年多，虽说是打酱油，但在众大神的光环&#31548;罩下，水平至少提了三个档。<br>
目标公司：由于百度给我的印象实在很差，而MS给我的印象又实在很好，所有就有了下面的排名：<br>
外企（Google、MS、Yahoo等）&gt;国内互联网（阿里、腾讯、百度、网易等）&gt;企事业单位（基本不考虑）<br>
<br>
3、准备<br>
<br>
经常在论坛里看到各种求职抱怨贴，其实在抱怨前应该仔细想一想，为了求职，你付出了多少？看到人家找工作找的顺找的爽，有没有想过人家背地里付出了多少努力和心血？别拿官二代和富二代啥的说事，真ds只会拿一堆自身以外的理由掩饰自己的懒惰。<br>
<br>
不要认为求职就是发个简历等面试通知，对于大神来说不用发简历牛&#36924;公司也会围着你转，对于ds来说就是预则立不预则废，中国缺什么就是不缺人，不下功夫准备很有可能连个P都没有。<br>
<br>
其实很多屌丝就是怕预也废所以干脆不准备直接上，这样搞不定的话，就有借口说不是自己蠢而是自己没准备，可以捍卫自己的智商高地不被侵犯。身边有不少这样的实例，典型的死要面子活受罪，活该你找不到工作。<br>
<br>
我的微软mentor曾提到过，我的实习面试表现一般，但后来表现出的动手能力大大超出之前面试的预估，而有些面试表现很出色，问题对答如流的选手，入职之后反而不是很理想，至少没有达到面试时发挥出的水准。<br>
<br>
这说明一个问题，就是笔试面试，准备和不准备会差异很大。如果你的简历不是那么NB，那就只能靠笔试和面试的加分撑场面。身边经常有同学纳闷这样代码都编不利索的傻屌都能进MS为什么我不能进，答案往往很简单：人家比你多准备了一个月。平时电脑上写程序可能很利索，笔试面试时在纸上写写试试你就知道什么叫拙计。<br>
<br>
IT公司的笔试和面试的题量都不大（相对于企事业单位和银行动辄上百道选择题的题量，算是很少），一般十几道选择题，三四道大题就算题量很大。但计算机的东西实在又是太多，程序设计、数据结构、算法设计、操作系统、体系结构、编译原理、数据库、软件工程等分支，编译的话太难（一千个码农里也没几个人能在纸上写一个最基础的递归下降LLParser），软件工程、体系结构、数据库这些太水（不是说这些分支没用，而是它们很难考察，尤其对应届生来说这些都是些文字游戏，比如说面向对象的三要素五原则，有个鸟用），这么一排除，再把数据结构和算法设计一合并，就剩下程序设计、算法和操作系统。没错，这三项搞定，国内外IT公司通杀。<br>
<br>
因此我的笔试和面试准备很简单，就是重温&#43;突击程序设计、算法和操作系统。下面是我的笔试&#43;面试准备内容：<br>
<br>
程序设计：<br>
1、把基础的数据结构的C语言实现在纸上写三遍以上，用我能想到的最精简最优化的方法<br>
2、阅读CARM和TCPL，确保不会遗漏C语言的每个细节<br>
3、重温之前自己做过的靠谱项目，并总结里面的关键难题和解决思路<br>
4、重读Writing Solid Code、Elements of Programming、Practice of programming<br>
5、阅读Science of Programming，做到可以证明自己的程序的正确性（前条件&#43;后条件&#43;不变式）<br>
算法：<br>
1、重读Algorithm Design Manual，重点阅读Dynamic Programming和Backtraverse<br>
2、重读Programming Pearls和More Programming Pearls，并完成所有课后题<br>
3、独立解决编程之美里面的题目（国内不少企业选题用的这本书）<br>
4、完成Careercup里Amazon、Google和Microsoft这三个分类下面的前20页面试题<br>
5、完成TopCoder的数十道D1L2~D2L1难度区间的算法题目<br>
<br>
操作系统：<br>
1、重读Modern Operating System，重温OS的核心概念<br>
2、重读Computer Systems a Programmer's Perspective的关键章节，回顾里面的关键点<br>
从七月底开始一直到十一月，花了接近四个月，很多东西都是一边面试一边准备：面试-&gt;发现盲点-&gt;修复盲点。<br>
<br>
此外列出一些面试笔试题的资源，此外感谢基友@codewarrior之前的推荐：<br>
<br>
1、Crack over the code interview<br>
很靠谱的笔试面试指导手册<br>
<br>
2、CareerCup<br>
集齐了大量的真实笔试面试题，去外企的一定得看<br>
<br>
3、TopCoder<br>
如果不是ACM，练这个就够，其实面试也不会问太难的算法，哪怕是google<br>
<br>
4、编程之美<br>
尽管题目有些过时，但依然很实用，三星题目适合一个人仔细想<br>
此外也说下一些不靠谱的资源：<br>
<br>
1、IT公司面试100题<br>
这个恐怕是国内传的最多的IT面试题<br>
题目本身还可以，但那个出题人本身代码功底一般，给出的答案包含大量错误和缺陷，导致参考价&#20540;骤降<br>
2、程序员面试宝典<br>
</span><span style="font-family:Verdana; font-size:14px">翔一样的书，各种错误概念的堆积，如果一个错误给我一块钱，我能从这本书搞成万元户。如果去正规公司拿这本书准备，包你被黑出翔。</span><span style="font-family:Verdana; font-size:14px"><br>
4、简历<br>
在MS时，老大曾让我帮忙招几个靠谱的实习生，因此我收到了几百封简历，过了一把HR的瘾。这里说说自己在看简历时发现的几点：<br>
1、可读性。不要用Word或压缩包，用PDF。此外在邮件里面用纯文本加上自己的简介，简化对方阅读的操作。要记住HR一天看的简历海的去了，压缩包是HR最痛恨的&#26684;式，因为解压了就不知道扔哪去了，有时干脆就不看；Word有版本问题，10的docx到了07往往被黑出翔。还有就是对方有可能不在PC上读邮件，因此纯文本的简介非常有必要。<br>
2、群发。不要给人群发的嫌疑，看清楚目标职位和目标公司，我发的工程院招聘贴，收到的几百封简历里面有十余封是投到微软亚洲研究院，有几个干脆写“敬爱的某领导”，&#23612;玛这不找抽么。<br>
<br>
3，设计。特别提一下设计，很多电工的简历就是翔，丑的一&#36924;，对齐没有，字体拙计，要点不明。再放到几百份几千份简历里面，活该你被忽略。建议所有电工投简历前阅读《给大家看的设计书》，至少搞明白里面的C.R.A.P四原则。不要小看设计的威力，在简历内容接近的情况下，良好的设计会大大加分。<br>
4、篇幅。控制在一页以内。倒不是说不能写两页，而是HR没时间看两页这么多。而且就我看过的几百封简历而言，凡是超过两页的没一个靠谱，有这么高的先验概率，HR才没工夫一个个筛，反正中国有的是人。<br>
5、重点。一定要有重点，做到让HR通过简历在20秒内确定你靠不靠谱。可以用加黑字体进行视觉引导。<br>
6、措辞。甭搞“渴望得到这份工作”、“期待在xxx的工作机会”这样的句式，除了显得你低端，其它毛用没有。<br>
7、别字。千万不要出现错别字，别字简历一般直接干掉。一页的简历都能出问题，一般不会靠谱。<br>
<br>
因为看了很多不靠谱的简历，我对简历重要性的理解要比其他人深刻很多。首先花了一周把原来两页半的纸缩到一页内，然后找UI朋友帮忙调整了版式、缩进和字体，并找UX朋友帮忙进行重点调整以进行视觉引导，然后在PC和手机上进行了简历可读性测试。从而获得了100%的简历通过率。<br>
此外，优先走内部推荐，这样最有效率，所以结识各个公司的朋友是非常有必要的。<br>
海投简历既没必要也没效率，有这个时间不如改改简历来的实在。<br>
相关书目：<br>
1、给大家看的设计书，让你的简历看起来不像一坨翔。<br>
2、Google Resume，如何写出靠谱的简历，进行靠谱的求职。<br>
5、笔试<br>
如之前所说，IT公司的笔试相对单纯（程序设计、算法和操作系统），而且范围较窄，有不少题目被出了一遍又一遍。因此市面上存在大量面试/笔试宝典之类的书籍和题集。<br>
准备国内的小公司，这些面试/笔试题集还靠的住，因为小公司往往不会在招人环节上下太大的成本，因此他们的试卷一般就是东拼西凑的网上题目；对于大型公司来说，这些题库或是宝典就显的不够用了，尤其是外企。<br>
<br>
所以不要把希望放在运气或是临阵磨枪上。就我自己而言，笔试准备了一个多月，尽管这个时间并不算多，但由于自己平时一直在阅读CS的基础书籍，并做了大量的纸上代码练习，因此笔试通过率也达到了100%（实际上是由于我笔试的公司题目都略简单，据说EMC和网易游戏的笔试难度很高，但当时由于时间冲突没有去成，因此搞出了这个数据）。<br>
<br>
多说无益，这里拿搜狗、腾讯、微软和雅虎这四家公司的笔试试卷为例，简单的介绍下IT公司的笔试题型和题目组成。<br>
<br>
搜狗：<br>
题型由十余道不定项选择题和三道算法题目组成，要求在两个小时完成。选择题难度一般，比较杂，也有一些原题；三道算法题目有点意思，至少网上是很难找到，需要一定的算法设计能力（主要是动态规划）才能给出解决。<br>
搜狗的笔试试题按职位分的很细，从C&#43;&#43;开发工程师到iOS开发工程师再到数据挖掘研究工程师十余个职位，每个职位的题目都有一套独立的试卷。但是研发的算法题是一样的，最后一道算法题很有意思，我花了一个多小时才想到利用组合数学里面的知识（多元一次方程非负解）给出设计方案，后来和面试官聊这道题时他们也挺吃惊，因为我的方案比他们的答案还要优化。<br>
<br>
腾讯：<br>
题型由二十道单项选择题、六道填空题和两道算法题组成，其中两道算法题是二选一。难度比较简单，题型很广，既有程序设计语言的细节也有概率统计的基本知识，甚至还有C语言的创始人是谁这样的搞笑问题，从选择题上能看得出腾讯在笔试题上还是下了点功夫的，但算法题就太简单了点，至少我认为考不出什么区分度。<br>
</span><span style="font-family:Verdana; font-size:14px">腾讯的笔试试题也是按职位划分的，但就没有搜狗那么细了，研发类笔试题目是统一的，要求一个半小时完成，印象里自己四十分钟就搞定收工，很多人都提前交了试卷，因为确实很简单。</span><span style="font-family:Verdana; font-size:14px"><br>
<br>
微软：<br>
题型只有二十道不定项选择题，难度较难，要求在一小时四十分钟完成。难度较难，覆盖面非常广，从设计模式，算法分析，代码阅读到C&#43;&#43;语言特性，甚至连冷门的函数式程序设计语言都有涉及。<br>
<br>
微软的笔试题目BT之处在于其独特的积分机制：答对了加分，不答无分，答错了倒扣。这就使得很多ds答完试卷感觉自我良好但实际已经被倒扣出翔。以最后一道题为例，答对了加7分，答错倒扣13分，相当于一下子损失20分。所以微软的笔试题会做就得做对，不会做就别蒙，要不更惨。<br>
<br>
此外，微软的笔试题是英文的，加上时间比较短，有些人题都读不完，有些ds连functional language是什么都不知道，自然败的很惨。<br>
<br>
雅虎：<br>
题型由十余道单项选择题，一道设计题目和六道算法题目组成，其中六道算法题目是六选二，要求在两个小时完成。难度尚可，主要考察编程能力和算法设计能力。由于时间充裕，尽管是六选二，为了炫技，我直接答了里面的五道题目。然而面试时发现面试官判卷子时并没有把多答的题目考虑在内，囧tz。<br>
<br>
相对于微软，雅虎的题目覆盖面就窄了许多，没有一道题目跳出程序设计、算法和操作系统这个圈的，只要勤加准备，很容易通过。<br>
<br>
雅虎的笔试题也是英文，因此英语作答较为合适，此外，由于算法题目简单，给出optimal solution是必须的，比如说在logN的时间内算fibonacci number是必备的知识，能写binary search就不要写sequential search等等。<br>
<br>
从笔试题可以明显看出，国外的大型IT公司（比如雅虎，微软和谷歌等）并不在意你现在的skill set，而更看重你的potential，因此题目大多很基础，并具备相当的深度，以确保你对CS有深刻的理解并能够走的很远；而国内的IT公司（比如百度、搜狗和人人等）更看重你现在的skill set，因此会出现不少语言特性，OS操作之类的具体题目，以确保你能够以尽快的速度上手干活，至于能发展到啥程度他们就不care了。<br>
<br>
因此，准备笔试题的时候要确定自己的目标公司：主攻国内公司的话，C&#43;&#43;的语言特性、linux基本命令操作这些细节也得准备，因为会有大量此类题目；主攻国外公司的话，良好的英文阅读能力必不可少，此外优秀的代码理解和代码编写能力也不可或缺。<br>
<br>
此外，不要在笔试题目里犯低级错误，不要抄袭（面试时经常会问到笔试题），保持书写的工整（尤其是代码题目和问答题目）。<br>
<br>
考虑到几乎所有的公司都有编程题目，也就是在纸上写代码，这里推荐几本相关书籍：<br>
<br>
1、Elements of programming style 2nd，写出良好风&#26684;的代码。纸上代码一般不长，但短短几行代码往往可以看出这个人的水准，风&#26684;很差的代码往往会被pass掉。<br>
<br>
2、Algorithm design manual 2nd，作为非ACM出身的码农，这本书比算导实用很多，课后题也很实在，对回溯，动态规划这些编程技巧讲的非常清楚。<br>
<br>
3、C interfaces and implementation，无论是面试还是笔试，一般都会用C写程序，这本书包含大量的工业级C代码，绝佳的参考和模仿素材。<br>
<br>
最后推荐下Elements of programming和Structure and interpretation of computer programs，这两本书难度很搞，需要大量的时间阅读，不适合临场阅读准备，但读过后，写出的代码绝&#36924;会上两个层次，这里我就不多介绍了。<br>
<br>
6、面试<br>
<br>
之前有人PM我关于海投简历的问题。我个人不建议海投简历。因为对能力弱的人来说，海投简历只会让他信心更差，没有任何效果，有投简历的时间还不如精心准备少数几个好公司；而对能力强的人来说，海投简历之后会有大量的笔试和面试，笔试很耗体力，面试更很耗体力，不但需要打车或坐地铁在各个公司间穿梭，而且需要在面试时保持精神的高度集中，一般面下来都会精疲力尽，导致接下来的发挥不好。所以还是之前所说，优先内部推荐，然后再根据自己的情况和职业发展路线选择公司，选择职位，不用选太多，集中精力攻破领域内的TOP3即可。就我自己而言，求职期间，我一共投了12封简历，参加了12家公司的面试，一共面了35轮。说多不多，说少不少，因为自己投简历时也是本着互联网公司为主，小公司和企事业单位压根没有投，精准投放的好处在于可以集中精力准备同一类型的公司，从而达到不错的效果。<br>
<br>
关于简历海投的问题就说到这里，接下来讲讲IT公司的面试。需要注意的是我这里聊的都是应届生面试，社会招聘面试可能会有所区别，但整体流程不会有太大差异。<br>
<br>
尽管笔试题会有所差别，但IT公司面试的流程大同小异：标准的技术面试一般有45分钟到60分钟，大约分为三个阶段：<br>
<br>
1、自我介绍（5~10分钟）：<br>
<br>
这个环节的主要目的在于建立面试官和求职者之间的沟通，面试官已经扫过你的简历，但需要对你有进一步的了解，以便建立一个初步印象，并便于进行接下来的技术提问，所以这个环节最常见的问题无外乎“进行一下自我介绍”，有时会加上3分钟或是5分钟的时限，有时会询问“说说你最得意的项目/作品”之类的变体问题。<br>
<br>
由于这个环节相对固定，因此准备起来相对容易，但即便如此，面试初期时我在自我介绍环节也犯过不少错误。这里以我的经历简单的总结下这个环节的要点：<br>
<br>
1、言简意赅，突出亮点<br>
<br>
面试初期时，我犯的一个很大的问题就是自我介绍废话太多，诸如“出生自xx省xx市”，“自我评价xxx”之类的屁话连篇。要知道技术面试不是相亲，这里的自我介绍不是相亲里面的查户口本，而是要了解你这个人靠不靠谱，牛&#36924;不牛&#36924;。如何在3分钟内让别人觉得你牛&#36924;呢？很简单，说且仅说你最牛&#36924;的事迹，让对方留下深刻印象。就技术面试而言，牛&#36924;的事迹包含三方面：做过的项目，读过的书，认识的人。<br>
<br>
如果实在想不出来有啥牛&#36924;事迹，那就比较难办。说实话，换做你是面试官，招一个履历毫无亮点的人进来有何用？<br>
<br>
2、紧贴简历<br>
<br>
面试官了解你的另外一个途径就是简历，然而短短一两页的简历很难说明白你简历项目中的亮点和难点。就算你不提及，面试官也会在简历中挑他感兴趣的点进行提问，因此自我介绍的内容应该是简历的补充。这样既能留给面试官不错的印象，也能有效节省时间，留出更多的时间进行技术提问环节和问答环节。<br>
<br>
此外，千万不要搞出自相矛盾，比如说简历讲的做了A你在自我介绍中又说是B，这就不是拙计的问题了。<br>
<br>
3、了解公司需求<br>
<br>
不要试图用一套自我介绍来搞定所有公司，除非你的简历只有一句话（&quot;Exhausted graphic programming&quot;或是&quot;I wrote python&quot;等）。不同的公司有不同的需求，在Google面前大谈.net技术显然不是什么好的选择（我在google一面中就做过这种挫事）。面试之前要进行详细的调研，了解公司和职位的需求，然后根据他们的需求定制自己的自我介绍和简历，效果会更好。<br>
<br>
<br>
2、技术提问（35~45分钟）：<br>
<br>
通过自我介绍环节，面试官会对你有一个大概的评估，接下来会通过一系列深入的问题考察你的项目经历和技术能力。所以自我介绍环节不要吹牛&#36924;，技术面试是很实在的东西，你有几斤几两问几下就出来，根本忽悠不过去。<br>
<br>
按照MS的分类，技术面试问题分为三类：<br>
<br>
1、Behavior questions：此类问题针对面试者的过往经历，一方面考察面试者的表达能力和实际经验，一方面也可以排除掉一堆在简历上吹牛&#36924;的真ds：<br>
“说说你最牛&#36924;的项目？”<br>
<br>
2、Hypothetical questions：此类问题会假设出一些场景，让面试者进行作答，主要考察面试者的应变能力和实际经验：<br>
<br>
“给你三天，你会如何把xx项目做得很牛&#36924;？”<br>
<br>
3、Probing questions：如果前两类问题答的不错，面试官往往会追加一些问题，以探测面试者能够走多远，此类问题的出现也是一个标志，面试官对你之前的表现感觉还不错：<br>
<br>
“你会如何改进你做过的最牛&#36924;的项目？”<br>
<br>
就具体技术问题而言，考察题目视你的应聘职位和你的过往经历而定，开发岗会侧重代码编写和系统设计，测试岗会更注重测试用例的编写等细节，产品岗要对线框图，交互设计有了解。不过算法设计和代码编写这两块是肯定有的，毕竟这是程序员的看家功夫，这个搞不定就没有然后了。<br>
<br>
算法设计这块我就不多说了，不搞ACM的码农没啥发言权。代码编写的话这里多说两句：和平时的开发不同，面试时的代码往往是在纸上搞的，而非IDE。很多代码写的还不错的选手往往会在纸上代码这个环节被虐的翔尿齐飞，限于篇幅原因我就不多介绍纸上代码的技巧了，还是那句话，多练习。我自己把Software Tools、Elements of programming和C interface and implementation中的代码在纸上写过几遍，又把常见的面试题目练习了三遍，因此纸上代码环节从来没出过问题。<br>
<br>
3、问答环节（5~10分钟）：<br>
如果前两个环节进展顺利，就会进入最后的问答环节。这个环节面试官一般会让面试者提几个感兴趣的问题，以增进相互的了解。<br>
<br>
相对于前两个环节，这个环节会轻松很多。不过依然要注意，关于面试表现的问题最好别问，因为问也问不出来什么，至于待遇，那是HR的事情，技术面试官也无能为力。<br>
<br>
最后根据自己的面试经历说说几个细节的问题<br>
<br>
态度：记住你是去求职，证明自己的能力达到职位需求是你的首要任务。没有必要和面试官抬杠，把面试官搞不爽对你一点好处都没有。我在面试搜狗时就出过这问题（直接表示对面试官的问题的不屑），直接一面被砍掉。<br>
<br>
着装：尽管IT公司大多不需要西装革履，但也别太拖沓，穿整齐些，至少给人很精神的感觉。我面试腾讯时直接搞了一件套头衫&#43;迷彩裤&#43;机车帽，结果是面试官从头到尾就没正&#30524;看过我，直接一面被砍掉。<br>
<br>
交流：面试是一个交流的过程，不明白的一定要主动询问，面试的大忌就是面试官给了一个问题，你一声不吭的搞了一个小时，最后发现搞的不是面试官问的问题，这时就算你很牛&#36924;，面试结果往往也是悲剧。<br>
<br>
7、国企<br>
国内的IT公司一共去了6家，拿到6个offer，面试19场。<br>
百度（2轮面试&#43;1轮终面）<br>
百度的应届生面试分为3轮，2轮技术面和1轮终面，3轮面试连在一起进行，如果搞到第1轮或第2轮就叫你回去，基本上不是悲剧就是备胎。如果进了终面，只要不出岔子，一般问题不大，因为百度每年招的人非常多，印象里有1500人之多。<br>
<br>
可能是招的人特别多从而导致面试官人数不够，百度的面试在所有大公司里面几乎是最随意的，面试官往往都没有经过系统的面试培训，出的题目也只是从网上东拼西凑，比如像C&#43;&#43;的虚函数的实现机制此类SB题目层出不穷。而且有些面试官缺乏对面试者最基本的尊重，我有几个同学在百度面试时差点被面哭。<br>
<br>
就我个人而言，我先后参加了百度的实习生面试和正式员工面试。正式员工面试给我感觉相当不错，流程很规范，面试官很nice，问的问题也说的过去；然而实习生面试那两个人就是翔，不但问的问题很二，而且不给我任何交流的空间，同时在面试过程中表现出一副非常不屑的神情，令人极度不爽。<br>
<br>
此外，百度的员工（包括面试官）给我一种工作过度的感觉，说惊悚些就是印堂发黑。结合艳红哥提到的狼性精神，我这号酱油男说啥也不敢去。<br>
<br>
搜狗（2轮面试）<br>
搜狗的应届生面试分为4轮，2轮技术&#43;1轮HR&#43;一轮Manager，4轮面试是分开的，所以会比较麻烦，毕竟来回跑来跑去的很费时费力。<br>
我的搜狗面试经历比较诙谐，尽管面了2轮，但2轮都是一面，第一个一面是朋友帮忙推荐过去的面试，第二个一面是参加搜狗笔试获得的面试机会，从这里多少能看出搜狗招人是有点混乱的。<br>
第一个一面非常囧，当时面试官问我C&#43;&#43;，我表示很少用，接下来问了若干智力题，由于被问的有些拙计，于是反问“这种智力题有什么考察度，会做的人一下子做出来，不会做的一天也搞不定”。估计这句话把面试官搞毛了，接下来的气氛变的很紧张，后来面试官反问我“那你觉得应该怎么招人”，我回答“你们应该学学微软”。然后就没有然后了，囧tz。<br>
第二个一面感觉还成，因为我笔试的题目答得比较出彩。接下来是一个strcpy的纸上代码和一个简单的OS生产者消费者问题，答得还算顺利，可惜依然没有然后，我怀疑可能是没有Hire Count了。<br>
<br>
搜狗面试给我一个很大的教训，就是别装&#36924;，求职就是求职，别和面试官抬杠。在接下来的面试中，我收敛了很多。<br>
<br>
创新工场（2轮面试&#43;4轮终面）<br>
创新工场本身是一个孵化公司，它的招聘流程是这样的：工场进行笔试和面试初选，然后由工场下面的子公司进行复选，由于子公司众多，因此工场有一个双选会，每个通过初选的求职者可以选择3家工场的子公司，在这个双选会上开复哥很是鼓吹创业，不过效果&#20284;乎不太理想 :-D<br>
工场的初选面试有两轮，然后是3个子公司的复选面试。和其它公司不一样，工场的面试时间非常短，只有25分钟：一个自我介绍，两个无需写代码的题目。有点拼人品，因为这么短的时间很难考察全面。复选面试大多是电面，比较简单，算法题目说下思路就可以。顺便推荐下友盟，感觉这些子公司里面这家的发展潜力最大。<br>
<br>
腾讯（1轮面试）<br>
腾讯的应届生面试的组成我不太清楚，因为1轮就GG了。<br>
腾讯的面试也让人很火大，面试官直接拿一个laptop在那里给你放ppt，一个slide一个题目，答完下一个slide，结果是我说的口干舌燥面试官还没说两句话。题目五花八门，从简历到智力题再到为人处事，印象里答了不下七八道题目，累的一&#36924;还没通过，&#23612;玛。<br>
<br>
不过腾讯的面试中见到很多PLMM，目测有很多非技术岗。<br>
<br>
人人（2轮面试&#43;2轮终面）<br>
人人的应届生面试一般是2轮面试&#43;1轮终面，由于我的笔试和面试发挥不错，因此又得到了一个加面的机会，拿到了人人special offer，待遇非常给力。<br>
人人的一面面试官非常nice，我当时迟到了30分钟，由于没吃饭因此直接蹭了几个面包，一边吃一边回答问题一边写代码。由于一面主要考察纸上代码，这个是我的强项，因此很轻松的通过了。二面相对杂一些，数据结构，算法，设计模式，多线程等都有涉及，不过问的都不深，也比较容易。<br>
终面第一面由自我介绍&#43;读过的书&#43;写一段代码组成，正好刚刚读过Sicence of programming，于是就海侃了一顿程序正确性证明的东西，并用这个证明了下自己的代码的正确性，目测效果还不错。<br>
终面第二面是一个大manager面试，这一轮主要是自己的职业发展路线等其它非技术问题，聊的也比较顺利，然后他直接告诉我我拿到了special offer。<br>
<br>
人民搜索（2轮面试&#43;1轮终面）<br>
人民搜索的应届生面试由1轮算法面&#43;1轮设计面&#43;1轮终面组成，每一轮面试都是45分钟，时间控制很严。<br>
和其它公司的面试不同，人搜的算法面试没有自我介绍环节，直接就是搞算法题目，至少要做两道（难度一般，肯定会有一道动态规划），并在纸上写出完整的代码。由于缺乏沟通，这轮面试略感生硬，不过还是比较顺利的通过了。<br>
<br>
设计面试多了一些沟通环节，接下来大部分时间会讨论一个系统的设计，你需要给出这个系统的架构，接下来面试官会不断的追问如何改进该系统以应对大用户量大数据量等极端情况。我这方面的知识不多，只会很土鳖的hash&#43;cache，磕磕绊绊的把这轮过去了。<br>
<br>
终面面试官是一个前google工程师，正巧当时我在google面了好几轮，比较了解google面试的套路，因此很顺利的就通过了。<br>
总之，人民搜索的待遇比较给力，而且能搞定户口，如果想在北京长待而且视户口很重，那么人搜&#20540;得一试。<br>
<br>
8、外企<br>
国外的IT公司一共去了4家，拿到3个offer，面试16场。<br>
<br>
微软（2轮面试&#43;1轮终面）<br>
微软从去年开始大规模扩招，印象里以前应届生招几十人，现在一个STC（互联网工程院）就能招二百余人，因此面试难度也有所下降，面试轮数由以前的5轮左右下降到现在的3轮左右。<br>
<br>
这里多提一句，很多人把微软和MSRA（微软亚洲研究院）划等号，甚至有人认为进了微软就等于进了MSRA，其实微软有很多部门，包括STC、STB、MOD等部门，MSRA只是其中一个研究性质很浓的部门。不过MSRA要求极高，和其它部门不同，一般MSRA的FTE只招博士，很少招硕士，招聘需要进行七轮甚至以上的严&#26684;面试，难度丝毫不亚于谷歌。而MSRA的实习生则容易很多，名校学生一般有内部推荐就可以搞定。<br>
<br>
我之前在微软进行过实习，因此直接参加了实习生转正面试，三轮面试分别由SDET，SDE和一名高级部门经理进行面试，面试的流程可以参考我之前提到的常规面试流程。与国内IT公司不同，微软不会问语言细节或是OS细节之类的人品问题（就是那种上网搜一下就明白的题目，C&#43;&#43;的虚函数实现机制是此类非常典型的人品题），而会集中在算法设计和程序设计上，其中应届生面试又以纸上代码最为严&#26684;，即使到了终面依然会有纸上代码编写环节，尽管不会考察特别复杂的算法，但对细节要求的非常严&#26684;。好在我之前有微软几位SDE的指导，纸上代码功夫还是不错的，并且实习期间获得了不错的review，因此比较顺利的通过了微软实习转正面试。<br>
<br>
微策略（2轮面试）<br>
微策略是一家进入中国没多久的外企，规模不大，工作内容主要是大数据分析&#43;数据可视化，面试一般由四轮到六轮面试组成。我比较悲催的直接挂在第二轮面试。<br>
微策略是我面试的外企中唯一全程使用英语面试的公司，面试官给人的感觉是很smart，但不nice，具体原因我后面说。<br>
<br>
第一轮面试主要问了些面向对象相关的内容，接下来是一些智力题目，我有一道题目（高楼扔鸡蛋）没有说清楚，尽管答案是正确的，但我的推导思路比较繁琐，因此浪费了大量的时间和面试官进行沟通。事后回想下面试官还是很nice的，主要还是自己平时想问题浅尝辄止，才会败在这道题上。<br>
<br>
第二轮面试就让我感到不爽了，我在自我介绍时直接被面试官打断，以至于自己的亮点经历说都说不出来，而且在后续的编程环节中，面试官拒绝和我进行交流，我写完了题目他又说这个和他要求的不太一样，当时我心里就开始暗骂wtf了。估计是前一轮被评为weak hire以至于这一轮的面试就是走走形式吧。<br>
<br>
雅虎（3轮面试&#43;1轮终面）<br>
雅虎的面试分为3轮技术面和1轮终面，在同一天完成。尽管雅虎公司一直给我一种摇摇欲坠的感觉（经常有传言雅虎可能会被收购），但雅虎公司的员工给我感觉都很nice且很smart，而且比微软的员工要有活力许多。<br>
<br>
三轮技术面试有两轮是典型的技术面，自我介绍&#43;技术提问，由于我在简历上提到“阅读了120本以上的计算机经典书籍”，因此被问到了“看过最经典的计算机书”这样的问题，我拿Brian Kernighan和Rob Pike的The practice of programming吹了一阵，算法题目相对微软要难一些，除了动态规划，也涉及到了后缀数组等不太常见的数据结构，还好之前有所准备，所以回答的还不错。<br>
<br>
终面的面试官是一名移动部门的老大，问了一些数据结构设计和职业规划的问题，并用英文进行了一小段交流，由于这些问题准备的很充分，因此跟他聊的比较high，终面也很顺利的通过了。<br>
<br>
Google（7轮面试）<br>
Google的面试轮数不定，如果表现良好，4轮面试就可以拿到offer，但如果有某轮面试表现一般，可能会进行加面来进行确认面试者是否合&#26684;，拿我自己来说，进行了7轮面试（据说有进行到10轮以上的，不过无法确认可信性）。Google是典型的工程师文化工程师面试，没有终面这个说法，每个面试官都有一票否决权，加上每个面试官考察的点都不一样，因此Google面试是我经历过的难度最高的面试。<br>
<br>
其实Google的面试我本来没抱多大希望，因为Google一直给我可望不可及的感觉，因此面试时也很放松，这种“自暴自弃”的心态反而让我发挥的不错，一步一步走到最后，并拿到offer。<br>
<br>
Google的面试每一轮大约45分钟，时间卡的比较严&#26684;。面试题目肯定会包含算法和程序设计（一般体现为纸上代码），同时包含其它各种各样的问题，我经历了策略题（设计一种策略从而在某个游戏中达到优胜）、数据结构设计、系统设计、白盒/黑盒测试、项目介绍等五花八门的题目，题目的类型视面试官的类型而定：学术型的面试官（比如说名校PHD）问的题目偏重算法，工程型的面试官（大多是社招的Googler）问的题目偏重项目经历。面试题目并不像网上传说的那么困难，但是面试官会抛出很多Probing question，让你给出一个optimal
 solution，这着实让我拙计了几次，不过即便一时间想不到最优解也不要紧，一边保持和面试官的交流一边试探各种可能的思路，这里再次推荐下Polya的How to solve it。<br>
<br>
由于面试轮数很多，因此这里就不依次说每轮面试的细节，可以参考下面的Google面试经历链接。<br>
<a href="http://blog.yxwang.me/2012/12/job-hunting-in-usa-1/">http://blog.yxwang.me/2012/12/job-hunting-in-usa-1/</a><br>
<br>
《面试体验：Google 篇》<br>
<br>
9、总结<br>
<br>
笔试难度：微策略&gt;人搜&gt;人人&gt;雅虎&gt;搜狗&gt;创新工场&gt;腾讯<br>
<br>
面试难度：Google&gt;雅虎&gt;人搜&gt;微策略&gt;微软&gt;人人&gt;百度&gt;腾讯=搜狗=创新工场<br>
<br>
待遇：Google&gt;人人&gt;人搜&gt;雅虎&gt;微软&gt;百度&gt;创新工场旗下子公司<br>
<br>
毫不犹豫的选择了Google，尽管我自己是.Net流，天天折腾VS和C#，linux和unix啥的都没碰过，但就前景来看，不得不承认Google比微软强太多了。<br>
<br>
老实说我自己进Google感觉像做梦，毕竟不是搞ACM的，大学成绩一般，什么奖学金都没拿过。<br>
<br>
&nbsp;<br>
但回想一下，这也不全是靠运气：从07年（那时我大三，一行代码没写过）挂科开始，决心开始搞计算机这行，编写自己的第一行靠谱代码，独立完成第一个编程作业，阅读书籍，不懂的就来D版询问各路大神（这里谢过FloridDong，UGLee等大神），然后一边实习一边读书学习，花了半年考研考到帝都，在考研结束的那段时间（四个月假期）精读了数据结构，计算机组成等基础经典书籍，补习自己的基础。到帝都之后，在一场即兴技术口译之后，获得去微软实习的机会，然后在实习中学习编译器知识，创作了自己的编程语言和编译器，加入朋友的创业团队并合作完成了AppStore
 TOP1的应用，离开团队独立搞定Windows Phone 7上最火的拨号应用、阅读应用和AV应用并在移动互联网中赚到自己的第一桶金，通宵一周完成毕业小论文发表并推荐到核心期刊，为了求职写了三本纸上代码，阅读the Science of programming学会如何证明自己代码的正确性，100%的简历通过率&#43;100%的笔试通过率，最后进入Google。</span>

            <div>
                作者：Hackbuteer1 发表于2013/1/14 16:40:58 <a href="http://blog.csdn.net/hackbuteer1/article/details/8501605">原文链接</a>
            </div>
            <div>
            阅读：24908 评论：53 <a href="http://blog.csdn.net/hackbuteer1/article/details/8501605#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013年小米校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8484974</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8484974</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/1/9 11:49:10</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">一、填空题（5分每题，一共8题）<br>
1、两个人A（速度为a）、B（速度为b）在一直路上相向而行。在A、B距离为s的时候，A放出一个鸽子C（速度为c），C飞到B后，立即掉头飞向A，遇到A在掉头飞向B......就这样在AB之间飞来飞去，直到A、B相遇，这期间鸽子共飞行路程为？<br>
答案是：s*c/(a&#43;b)<br>
<br>
2、（he）的平方=she。h、e、s代表的数字？<br>
答案是：分别代表2、5、6<br>
<br>
3、运算（93&amp;-8）的结果为：88<br>
<br>
4、将一个无序整数数组构造成一个最大堆，最差时间复杂度为：<br>
5、int *p = &amp;n;<br>
那么*p的&#20540;是（）<br>
A、p的&#20540; &nbsp; &nbsp; B、p的地址 &nbsp; &nbsp; <span style="color:#3333ff">C、n的&#20540;</span> &nbsp; &nbsp; D、n的地址<br>
<br>
6、一个完全二叉树有770个节点，那么其叶子的个数为：385<br>
<br>
<span style="font-family:Verdana; font-size:14px">7、有一个二维数组a[1...100 , 1...65]有100行，65列，我们以行序为主序，如果该数组的基地址是10000，且每个元素占2个存储单元，请问a[56 , 22]的存储地址是：17194</span><br>
<span style="font-family:Verdana; font-size:14px">8、以下代码输出结果是：</span><br>
</span><pre class="cpp" name="code">class B
{
public:
	B()
	{
		cout&lt;&lt;&quot;B constructor\n&quot;;
		s = &quot;B&quot;;
	}
	void f()
	{
		cout&lt;&lt;s;
	}
private:
	string s;
};

class D : public B
{
public:
	D() : B()
	{
		cout&lt;&lt;&quot;D constructor\n&quot;;
		s = &quot;D&quot;;
	}
	void f()
	{
		cout&lt;&lt;s;
	}
private:
	string s;
};

int main(void)  
{
	B *b = new D();
	b-&gt;f();
	((D*)b)-&gt;f();
	delete b;
	return 0;
}</pre>输出结果是<br>
B constructor<br>
D constructor<br>
BD<br>
<br>
二、编程题<br>
1、数组乘积（15分）<br>
输入：一个长度为n的整数数组input<br>
输出：一个长度为n的整数数组result，满足result[i] = input数组中除了input[i]之外所有数的乘积（假设不会溢出）。比如输入：input = {2,3,4,5}，输出result = {60,40,30,24}<br>
程序时间和空间复杂度越小越好。<br>
C/C&#43;&#43;：<br>
int *cal(int* input , int n);<br>
<br>
Java:<br>
int[] cal(int[] input);<br>
<pre class="cpp" name="code">int *cal(int* input , int n)
{
	int i ;
	int *result = new int[n];
	result[0] = 1;
	for(i = 1 ; i &lt; n ; ++i)
		result[i] = result[i-1]*input[i-1];
	result[0] = input[n-1];
	for(i = n-2 ; i &gt; 0 ; --i)
	{
		result[i] *= result[0];
		result[0] *= input[i];
	}
	return result;
}</pre><br>
<span style="font-family:Verdana; font-size:14px">2、异形数（25分）<br>
在一个长度为n的整形数组a里，除了三个数字只出现一次外，其他的数字都出现了2次。请写程序输出任意一个只出现一次的数字，程序时间和空间复杂度越小越好。<br>
例如： a = {1,3,7,9,5,9,4,3,6,1,7}，输出4或5或6<br>
C/C&#43;&#43;：<br>
void find(int* a , int n);<br>
<br>
Java:<br>
void find(int[] a);<br>
</span><pre class="cpp" name="code">// lowbit表示的是某个数从右往左扫描第一次出现1的位置
int lowbit(int x)
{
	return x&amp;~(x-1);
}

void find(int* a , int n)
{
	int i , xors;
	xors = 0;
	for(i = 0 ; i &lt; n ; ++i)
		xors ^= a[i];
	// 三个数两两的异或后lowbit有两个相同，一个不同，可以分为两组
	int fips = 0;
	for(i = 0 ; i &lt; n ; ++i)
		fips ^= lowbit(xors ^ a[i]);
	// 表示的是：flips=lowbit(a^b)^lowbit(a^c)^lowbit(b^c) 
	int b;    // 假设三个只出现一次的其中一个数为b
	b = 0;
	for(i = 0 ; i &lt; n ; ++i)
	{
		if(lowbit(xors ^ a[i]) == fips)
			b ^= a[i];
	}
	// 成功找到三个数中一个数
	cout&lt;&lt;b&lt;&lt;endl;
}</pre><br>
3、朋友圈（25分）<br>
假如已知有n个人和m对好友关系（存于数字r）。如果两个人是直接或间接的好友（好友的好友的好友...），则认为他们属于同一个朋友圈，请写程序求出这n个人里一共有多少个朋友圈。<br>
假如：n = 5 ， m = 3 ， r = {{1 , 2} , {2 , 3} , {4 , 5}}，表示有5个人，1和2是好友，2和3是好友，4和5是好友，则1、2、3属于一个朋友圈，4、5属于另一个朋友圈，结果为2个朋友圈。<br>
最后请分析所写代码的时间、空间复杂度。评分会参考代码的正确性和效率。<br>
C/C&#43;&#43;：<br>
int friends(int n , int m , int* r[]);<br>
<br>
Java:<br>
int friends(int n , int m , int[][] r);<br>
<pre class="cpp" name="code">// 简单的并查集应用
int set[10001];

inline int find(int x)           //带路径优化的并查集查找算法
{
    int i , j , r;
    r = x;
    while(set[r] != r) 
        r = set[r];
    i = x;
    while(i != r) 
    {
        j = set[i];
        set[i] = r;
        i = j;
    }
    return r;
}
inline void merge(int x , int y)     //优化的并查集归并算法
{
    int t = find(x);
    int h = find(y);
    if(t &lt; h)
        set[h] = t;
    else
        set[t] = h;
}

int friends(int n , int m , int* r[])
{
	int i , count;
	for(i = 1 ; i &lt;= n ; ++i)    //初始化并查集，各点为孤立点，分支数为n 
		set[i] = i;
	for(i = 0 ; i &lt; m ; ++i)
		merge(r[i][0] , r[i][1]);
	count = 0;
	for(i = 1 ; i &lt;= n ; ++i)
	{
		if(set[i] == i)
			++count;
	}
	return count;
}</pre><br>
<span style="font-family:Verdana; font-size:14px">转载请标明出处，原文地址：<a target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/8484974">http://blog.csdn.net/hackbuteer1/article/details/8484974</a></span><br>

            <div>
                作者：Hackbuteer1 发表于2013/1/9 11:49:10 <a href="http://blog.csdn.net/hackbuteer1/article/details/8484974">原文链接</a>
            </div>
            <div>
            阅读：14313 评论：18 <a href="http://blog.csdn.net/hackbuteer1/article/details/8484974#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013年完美世界校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8476976</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8476976</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/1/7 14:49:06</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">1、设有矩阵A1（30*35）、A2（35*15）、A3（15*5）、A4（5*10），M=A1*A2*A3*A4，下列组合计算M所需数乘次数最少的是：<br>
A、(A1(A2(A3A4))) &nbsp; &nbsp;B、(A1((A2A3)A4)) &nbsp; &nbsp;C、((A1A2)(A3A4)) &nbsp; &nbsp;<span style="color:#cc33cc">D、((A1(A2A3))A4)</span>&nbsp; &nbsp;E、(((A1A2)A3)A4)<br>
2、在32位机器上，有如下代码：<br>
</span><pre name="code" class="cpp">char array[] = &quot;abcdefg&quot;;
printf(&quot;%d\n&quot;,sizeof(array));        // 8

char *p = &quot;abcdefg&quot;;
printf(&quot;%d\n&quot;,sizeof(p));            // 4

void func(char p[10])
{
	printf(&quot;%d\n&quot;,sizeof(p));        // 4
}

void func(char (&amp;p)[10])
{
	printf(&quot;%d\n&quot;,sizeof(p));        // 10
}

int main(void)
{
	printf(&quot;%d\n&quot;,sizeof(char[2]));     // 2
	printf(&quot;%d\n&quot;,sizeof(char&amp;));       // 1
	return 0;
}</pre>其输出结果依次为：<br>
<span style="color:rgb(51,51,255)">A、8 &nbsp; 4 &nbsp; 4 &nbsp;10 &nbsp;2 &nbsp;1</span><br>
B、4 &nbsp; 4 &nbsp; 4 &nbsp;10 &nbsp;4 &nbsp;1<br>
C、8 &nbsp; 4 &nbsp; 4 &nbsp;10 &nbsp;2 &nbsp;4<br>
D、8 &nbsp; 4 &nbsp; 4 &nbsp;4 &nbsp;2 &nbsp;1<br>
E、8 &nbsp; 4 &nbsp; 4 &nbsp;10 &nbsp;4 &nbsp;4<br>
F、以上答案都不对<br>
3、<br>
<pre name="code" class="cpp">CONTAINER::iterator iter , tempIt;
for(iter = cont.begin() ; iter != cont.end() ; )
{
	tempIt = iter;
	++iter;
	cont.erase(tempIt);
}</pre><span style="font-family:Verdana; font-size:14px">假设cont是一个CONTAINER的示例，里面包含数个元素，那么当CONTAINER为：<br>
1、vector&lt;int&gt;<br>
2、list&lt;int&gt;<br>
3、map&lt;int , int&gt;<br>
4、deque&lt;int&gt;<br>
会导致上面的代码片段崩溃的CONTAINER类型是：<br>
<span style="color:#3333ff">A、1，4</span> &nbsp; &nbsp; B、2，3 &nbsp; &nbsp;C、1，3 &nbsp; &nbsp; &nbsp;D、2，4<br>
正确答案选择A（第1个、第4个都是线性的类型存储，所以会存在崩溃）<br>
4、以下代码</span><br>
<pre name="code" class="cpp">class classA
{
public:
	classA()
	{
		clear();
	}
	virtual ~classA()
	{
	}
	void clear()
	{
		memset(this , 0 , sizeof(*this));
	}
	virtual void func()
	{
		printf(&quot;func\n&quot;);
	}
};
class classB : public classA
{
};

int main(void)
{
	classA oa;
	classB ob;
	classA * pa0 = &amp;oa;
	classA * pa1 = &amp;ob;
	classB * pb = &amp;ob;

	oa.func();         // 1
	ob.func();         // 2
	pa0-&gt;func();       // 3
	pa1-&gt;func();       // 4
	pb-&gt;func();        // 5

	return 0;
}</pre><span style="font-family:Verdana; font-size:14px">A、func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp;<br>
B、执行出错 &nbsp; &nbsp; &nbsp; &nbsp; func &nbsp; &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp; &nbsp;func&nbsp;<br>
C、执行出错 &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp;执行出错<br>
D、func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func<br>
<span style="color:rgb(204,51,204)">E、func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp;执行出错 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func</span><br>
F、以上选项都不对<br>
5、在32位系统中</span><br>
<pre name="code" class="cpp">class CBase
{
public:
	void func()
	{
		Print();
	}
	virtual void Print()
	{
		cout&lt;&lt;&quot;CBase::Print&quot;&lt;&lt;endl;
	}
};
class CDerived : public CBase
{
public:
	virtual void Print()
	{
		cout&lt;&lt;&quot;CDerived::Print&quot;&lt;&lt;endl;
	}
};

int main(void)
{
	CDerived c;
	CBase *p = &amp;c;
	return 0;
}</pre><span style="font-family:Verdana; font-size:14px">请问：<br>
sizeof(*p)的&#20540;是多少？ （实际上求的就是一个成员变量的大小&#43;一个虚表指针VPTR的大小）<br>
A、1 &nbsp; &nbsp;B、4 &nbsp; &nbsp; <span style="color:rgb(51,51,255)">C、8 </span>&nbsp; &nbsp;D、12<br>
p-&gt;Print(); 和 c.func();的输出分别是？<br>
A、CBase::Print &nbsp; &nbsp; CBase::Print &nbsp; &nbsp; B、CBase::Print &nbsp; &nbsp; CDerived::Print<br>
C、CDerived::Print &nbsp;CBase::Print &nbsp; &nbsp;<span style="color:rgb(204,51,204)">D、CDerived::Print &nbsp;CDerived::Print</span><br>
6、</span><br>
<pre name="code" class="cpp" style="font-size: 14px; font-family: Verdana;">struct Thing
{
	int valueA;
	const int valueB;
};
Thing t;</pre><span style="font-family:Verdana; font-size:14px">t的成员变量valueA 和 valueB 的&#20540;分别为：<br>
A、0 &nbsp;0 &nbsp; &nbsp; B、垃圾&#20540; &nbsp;0 &nbsp; &nbsp; <span style="color:rgb(204,51,204)">C、无法运行 </span>&nbsp; &nbsp; D、垃圾&#20540; &nbsp;垃圾&#20540;<br>
常成员变量valueB必须在构造函数中进行初始化<br>
7、for(int x = 0 , y = 0; !x &amp;&amp; y &lt;= 5 ; y&#43;&#43;)语句执行循环的次数是：<br>
A、0 &nbsp; &nbsp; &nbsp; &nbsp;B、5 &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:rgb(204,51,204)">C、6 </span>&nbsp; &nbsp; &nbsp; &nbsp;D、无数次<br>
8、在Windows 32位操作系统中，假设字节对齐为4，对于一个空的类A，sizeof(A)的&#20540;为（）<br>
A、0 &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:rgb(51,51,255)">B、1</span> &nbsp; &nbsp; &nbsp; &nbsp; C、2 &nbsp; &nbsp; &nbsp; &nbsp; D、4<br>
9、以下对函数指针的定义，哪些是正确的：<br>
<span style="color:rgb(51,51,255)">A、typedef &nbsp;int &nbsp;(*fun_ptr)(int , int); &nbsp;</span> &nbsp; &nbsp; B、typedef &nbsp;int &nbsp;*(fun_ptr)(int , int);&nbsp;<br>
C、typedef &nbsp;int &nbsp;(fun_ptr*)(int , int); &nbsp; &nbsp; &nbsp; D、typedef &nbsp;*int &nbsp;(fun_ptr)(int , int);&nbsp;<br>
10、在32位系统中，下面结构体<br>
</span><pre name="code" class="cpp">struct st
{
	char ch , *ptr;
	union
	{
		short a , b;
		unsigned int c : 2 , d : 1;
	};
	bool f;
	struct st *next;
};</pre><span style="font-family:Verdana; font-size:14px">的大小是：<br>
A、14字节 &nbsp; &nbsp; &nbsp; B、16字节 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">C、20字节</span> &nbsp; &nbsp; &nbsp; D、24字节<br>
11、32位小端字节序的机器上，如下代码：<br>
</span><pre name="code" class="cpp">char array[12] = {0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08};
short *pshort = (short *)array;
int *pint = (int *)array;
int64 *pint64 = (int64 *)array;
printf(&quot;0x%x , 0x%x , 0x%x , 0x%x&quot;, *pshort , *(pshort+2) , *pint64 , *(pint+2));</pre><span style="font-family:Verdana; font-size:14px">输出结果为：<br>
A、0x201 , 0x403 , 0x807060504030201 , 0x0 &nbsp; &nbsp;B、0x201 , 0x605 , 0x807060504030201 , 0x0 &nbsp;&nbsp;<br>
<span style="color:rgb(204,51,204)">C、0x201 , 0x605 , 0x4030201 , 0x8070605 &nbsp;</span>&nbsp; &nbsp; &nbsp;D、0x102 , 0x506 , 0x102030405060708 , 0x0 &nbsp;<br>
E、0x102 , 0x304 , 0x1020304 , 0x5060708 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;F、0x201 , 0x605 , 0x4030201 , 0x6050403<br>
12、有关引用，下列说法错误的是：<br>
A、引用定义时必须初始化<br>
B、类的非静态引用成员变量不需要在构造函数中初始化<br>
C、数组可以有引用，但没有引用数组<br>
D、public派生对象可以初始化基类类型的引用<br>
E、整型数据的常引用可以直接用数&#20540;初始化<br>
F、以上选项都不是<br>
13、Windows PE文件装载到的地址为：<br>
A、0x0030000 &nbsp; &nbsp;B、0x0040000 &nbsp; &nbsp;C、任意地址 &nbsp;<span style="color:#3333ff"> D、0x10000000 &nbsp;</span> &nbsp;<br>
14、以下哪些对象可用于Windows进程间通信：<br>
<span style="color:#3333ff">A、事件 &nbsp; &nbsp;B、临界区 &nbsp; &nbsp;C、互斥量 &nbsp; &nbsp;D、共享内存</span></span><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/1/7 14:49:06 <a href="http://blog.csdn.net/hackbuteer1/article/details/8476976">原文链接</a>
            </div>
            <div>
            阅读：14909 评论：30 <a href="http://blog.csdn.net/hackbuteer1/article/details/8476976#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013年海康威视校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8476206</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8476206</guid>
        <author>Hackbuteer1</author>
        <pubDate>2013/1/7 11:41:15</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">1、10、10、4、4四个数，怎么算出24点？<br>
(10*10-4)/4=24<br>
2、下列表达式在32位机器编译环境下的&#20540;（）<br>
</span><pre name="code" class="cpp">class A
{
};

class B
{
public:
	B();
	virtual ~B();
};

class C
{
private:
#pragma pack(4)
	int i;
	short j;
	float k;
	char l[64];
	long m;
	char *p;
#pragma pack()
};

class D
{
private:
#pragma pack(1)
	int i;
	short j;
	float k;
	char l[64];
	long m;
	char *p;
#pragma pack()
};

int main(void)
{
	printf(&quot;%d\n&quot;,sizeof(A));
	printf(&quot;%d\n&quot;,sizeof(B));
	printf(&quot;%d\n&quot;,sizeof(C));
	printf(&quot;%d\n&quot;,sizeof(D));
	return 0;
}</pre><span style="color:#3333ff">A、1、4、84、82</span> &nbsp; &nbsp; &nbsp;B、4、4、82、84 &nbsp; &nbsp; &nbsp;C、4、4、84、82 &nbsp; &nbsp; &nbsp;D、1、4、82、82<br>
3、以下程序在32位机器下运行的结果是（）<br>
<pre name="code" class="cpp">#pragma pack(4)
struct info_t
{
	unsigned char version;
	unsigned char padding;
	unsigned char extension;
	unsigned char count;
	unsigned char marker;
	unsigned char payload;
	unsigned short sequence;
	unsigned int timestamp;
	unsigned int ssrc;
};

union info_u
{
	unsigned char version;
	unsigned char padding;
	unsigned char extension;
	unsigned char count;
	unsigned char marker;
	unsigned char payload;
	unsigned short sequence;
	unsigned int timestamp;
	unsigned int ssrc;
};
#pragma pack()

int main(void)
{
	printf(&quot;%d\n&quot;,sizeof(info_t));
	printf(&quot;%d\n&quot;,sizeof(info_u));
	return 0;
}</pre>A、12 &nbsp;12 &nbsp; &nbsp; &nbsp;B、12 &nbsp;4 &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">C、16 &nbsp;4 </span>
&nbsp; D、16 &nbsp;12 &nbsp; &nbsp; E、16 &nbsp;1<br>
4、以下表达式result的&#20540;是（）<br>
<pre name="code" class="cpp">#define VAL1(a,b) a*b
#define VAL2(a,b) a/b--
#define VAL3(a,b) ++a%b

int a = 1;
int b = 2;
int c = 3;
int d = 3;
int e = 5;

int result = VAL2(a,b)/VAL1(e,b)+VAL3(c,d);</pre>A、-2 &nbsp; &nbsp;<span style="color:#3333ff"> B、1 &nbsp;</span> &nbsp; C、0 &nbsp; &nbsp; D、2<br>
5、请写出以下程序的输出（5分）<br>
<pre name="code" class="cpp">void swap_1(int a , int b)
{
	int c;
	c = a;
	a = b;
	b = c;
	return ;
}
void swap_2(int &amp;a , int &amp;b)
{
	int c;
	c = a;
	a = b;
	b = c;
	return ;
}
void swap_3(int *a , int *b)
{
	int c;
	c = *a;
	*a = *b;
	*b = c;
	return ;
}

int main(void)
{
	int a = 100;
	int b = 200;
	swap_1(a , b);
	printf(&quot;a = %d , b = %d\n&quot;,a , b);
	swap_2(a , b);
	printf(&quot;a = %d , b = %d\n&quot;,a , b);
	swap_3(&amp;a , &amp;b);
	printf(&quot;a = %d , b = %d\n&quot;,a , b);
	return 0;
}</pre>输出结果：<br>
a = 100 , b = 200<br>
a = 200 , b = 100<br>
a = 100 , b = 200<br>
6、下面的程序是否有问题，如有问题，请重构代码（5分）<br>
<pre name="code" class="cpp">void test_type(bool b , const char *p , float f)
{
	if(!b)
	{
		return ;
	}
	else if(!p)
	{
		return ;
	}
	else if(!f)
	{
		return ;
	}
}</pre>修改如下：<br>
<pre name="code" class="cpp">void test_type(bool b , const char *p , float f)
{
	if(!b)
	{
		return ;
	}
	else if(!p)
	{
		return ;
	}
	else if(f &gt; -1e-10 &amp;&amp; f &lt; 1e-10)
	{
		return ;
	}
}</pre>7、请指出以下程序有什么问题（5分）<br>
<pre name="code" class="cpp">void test_mem()
{
	char *p = new char[64];
	delete p;
	p = NULL;
	return ;
}</pre>应该修改为 delete[]p; &nbsp;p指向的是一个字符型的数组空间，原来的代码只是简单的释放了指向申请空间的指针，并没有释放申请的空间，容易造成内存崩溃。<br>
回收用 new 分配的单个对象的内存空间的时候用 delete，回收用 new[] 分配的一组对象的内存空间的时候用 delete[]。<br>
8、以下程序有什么问题，请指出。<br>
<pre name="code" class="cpp">char* GetMem()
{
	char p[] = &quot;hello&quot;;
	return p;
}

void test_get_mem()
{
	char *p = GetMem();
	printf(p);
	return ;
}</pre><span style="font-family:Verdana; font-size:14px">GetMem函数中的p是一个在栈上的局部变量，当函数运行结束的时候，栈上的内容会自动释放的，此处返回的&#20540;有可能会成为一个野指针，会出现一个意想不到的结果。<br>
9、请写出strcpy 和 memcpy 的区别（5分）<br>
答：strcpy和memcpy都是标准C库函数，它们有下面的特点。<br>
strcpy提供了字符串的复制。即strcpy只用于字符串复制，并且它不仅复制字符串内容之外，还会复制字符串的结束符。<br>
strcpy函数的原型是：char* strcpy(char* dest, const char* src);<br>
memcpy提供了一般内存的复制。即memcpy对于需要复制的内容没有限制，因此用途更广。<br>
memcpy函数的原型是：void *memcpy( void *dest, const void *src, size_t count );<br>
strcpy和memcpy主要有以下3方面的区别。<br>
1、复制的内容不同。strcpy只能复制字符串，而memcpy可以复制任意内容，例如字符数组、整型、结构体、类等。<br>
2、复制的方法不同。strcpy不需要指定长度，它遇到被复制字符的串结束符&quot;\0&quot;才结束，所以容易溢出。memcpy则是根据其第3个参数决定复制的长度。<br>
3、用途不同。通常在复制字符串时用strcpy，而需要复制其他类型数据时则一般用memcpy。<br>
<br>
10、请写出以下程序的输出结果</span><br>
<pre name="code" class="cpp">class Base
{
public:
	Base()
	{
		printf(&quot;I am Base()\n&quot;);
	}
	virtual ~Base()
	{
		printf(&quot;I am ~Base()\n&quot;);
	}
public:
	virtual void SayHello()
	{
		printf(&quot;Hello Base\n&quot;);
	}
	void SayWorld()
	{
		printf(&quot;World Base\n&quot;);
	}
};
class Derived : public Base
{
public:
	Derived()
	{
		printf(&quot;I am Derived()\n&quot;);
	}
	virtual ~Derived()
	{
		printf(&quot;I am ~Derived()\n&quot;);
	}
public:
	void SayHello();
	void SayWorld();
};

void Derived::SayHello()
{
	printf(&quot;Hello Derived\n&quot;);
}
void Derived::SayWorld()
{
	printf(&quot;World Derived\n&quot;);
}

int main(void)
{
	Base *b1 = new Base;
	Base *b2 = new Derived;
	Derived *d = new Derived;

	b1-&gt;SayHello();
	b1-&gt;SayWorld();

	b2-&gt;SayHello();
	b2-&gt;SayWorld();

	d-&gt;SayHello();
	d-&gt;SayWorld();

	delete d;
	delete b2;
	delete b1;

	d= NULL;
	b2 = NULL;
	b1 = NULL;

	return 0;
}</pre>输出结果：<br>
I am Base()<br>
I am Base()<br>
I am Derived()<br>
I am Base()<br>
I am Derived()<br>
Hello Base<br>
World Base<br>
Hello Derived<br>
World Base<br>
Hello Derived<br>
World Derived<br>
I am ~Derived()<br>
I am ~Base()<br>
I am ~Derived()<br>
I am ~Base()<br>
I am ~Base()<br>
<br>
<br>
11、阅读以下程序并给出执行结果<br>
<pre name="code" class="cpp">class Bclass
{
public:
	Bclass(int i , int j)
	{
		x = i;
		y = j;
	}
	virtual int fun()
	{
		return 0;
	}
protected:
	int x , y;
};

class lclass : public Bclass
{
public:
	lclass(int i , int j , int k) : Bclass(i , j)
	{
		z = k;
	}
	int fun()
	{
		return (x+y+z)/3;
	}
private:
	int z;
};
int main(void)
{
	lclass obj(2,4,10);
	Bclass p1 = obj;
	cout&lt;&lt;p1.fun()&lt;&lt;endl;

	Bclass &amp;p2 = obj;
	cout&lt;&lt;p2.fun()&lt;&lt;endl;
	cout&lt;&lt;p2.Bclass::fun()&lt;&lt;endl;

	Bclass *p3 = &amp;obj;
	cout&lt;&lt;p3-&gt;fun()&lt;&lt;endl;

	return 0;
}</pre><span style="font-family:Verdana; font-size:14px">输出结果：<br>
0<br>
5<br>
0<br>
5<br>
12、如何减少频繁分配内存（malloc或者new）造成的内存碎片？（10分）<br>
<br>
<br>
13、请写出strchr的实现（10分）<br>
函数功能：找出在字符串str中第一次出现字符ch的位置，找到就返回该字符位置的指针（也就是返回该字符在字符串中的地址的位置），找不到就返回空指针（就是NULL）<br>
const char* strchr(const char* str , char ch)<br>
</span><pre name="code" class="cpp">const char* strchr(const char* str , char ch)
{
	char *p = NULL;
	const char* s = str;
	for( ; *s != '\0' ; ++s)
	{
		if(*s == ch)
		{
			p = (char *)s;
			break;
		}
	}
	return p;
}
</pre>14、请写出冒泡排序法算法（20分）<br>
void BubbleSort(int r[] , int n);<br>
<pre name="code" class="cpp">void BubbleSort(int r[] , int n)
{
	int i , j , temp;
	for(i = 0 ; i &lt; n - 1 ; ++i)
	{
		for(j = 0 ; j &lt; n-i-1 ; ++j)
		{
			if(r[j] &gt; r[j + 1])
			{
				temp = r[j];
				r[j] = r[j + 1];
				r[j + 1] = temp;
			}
		}
	}
}</pre><br>
<br>
<br>
<br>
<br>
<br>

            <div>
                作者：Hackbuteer1 发表于2013/1/7 11:41:15 <a href="http://blog.csdn.net/hackbuteer1/article/details/8476206">原文链接</a>
            </div>
            <div>
            阅读：11805 评论：12 <a href="http://blog.csdn.net/hackbuteer1/article/details/8476206#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Hulu 2013北京地区校招笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8453841</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8453841</guid>
        <author>Hackbuteer1</author>
        <pubDate>2012/12/30 22:33:28</pubDate>
        <description><![CDATA[
            
<span style="font-family:System; font-size:14px">填空题：<br>
1、中序遍历二叉树，结果为ABCDEFGH，后序遍历结果为ABEDCHGF，逆序遍历结果为?<br>
2、对字符串HELL0_HULU中的字符进行二进制编码，使得字符串的编码长度尽可能短，最短长度为？<br>
3、对长度12的有序数组进行二分查找，目标等概率出现在数组的每个位置上，则平均比较次数为？<br>
4、一副扑克（去王），每个人随机的摸两张，则至少需要多少人摸牌，才能保证有两个人抽到同样的花色。<br>
<span style="color:#3333ff">分析：抽屉原理，C(4,2)=10<br>
每个人摸到的两张牌的花色有10种情况:&nbsp;<br>
两张红桃、两张黑桃、两张方块、两张梅花、红桃和黑桃、红桃和方块、红桃和梅花、黑桃和方块、黑桃和梅花、方块和梅花。&nbsp;<br>
若10个人摸到的牌的花色分别是上述10种情况，则10个人中没有两个人摸到的牌的花色相同。&nbsp;<br>
若有11个人摸牌，由抽屉原理可知至少有两个人摸到的牌的花色相同。</span><br>
5、x个小球中有唯一一个球较轻，用天平秤最少称量y次能找出这个较轻的球，写出y和x的函数表达式y=f(x)<br>
<span style="color:#33cc00">分析：y=log3(x)</span><br>
6、3的方幂及不相等的3的方幂的和排列成递增序列1,3,4,9,10,12,13……，写出数列第300项<br>
7、无向图G有20条边，有4个度为4的顶点，6个度为3的顶点，其余顶点度小于3，则G有多少个顶点<br>
8、桶中有M个白球，小明每分钟从桶中随机取出一个球，涂成红色（无论白或红都涂红）再放回，问小明将桶中球全部涂红的期望时间是？<br>
9、煤矿有3000吨煤要拿到市场上卖，有一辆火车可以用来运煤，火车最多能装1000吨煤，且火车本身需要烧煤做动力，每走1公里消耗1吨煤，如何运煤才能使得运到市场的煤最多，最多是多少？<br>
10、1,2,3,4…..n，n个数进栈，有多少种出栈顺序，写出递推公式（写出通项公式不得分）<br>
11、宇宙飞船有100,000位的存储空间，其中有一位有故障，现有一种Agent可以用来检测故障，每个Agent可以同时测试任意个位数，若都没有故障，则返回OK，若有一位有故障，则失去响应。如果有无限多个Agent可供使用，每个Agent进行一次检测需要耗费1小时，现在有2个小时时间去找出故障位，问最少使用多少个Agent就能找出故障。<br>
<br>
大题：<br>
1、n个数，找出其中最小的k个数，写出代码，要求最坏情况下的时间复杂度不能高于O(nlogk)<br>
2、写程序输出8皇后问题的所有排列，要求使用非递归的深度优先遍历。<br>
3、有n个作业，a1,a2…..an，作业aj的处理时间为tj，产生的效益为pj，最后完成期限为dj，作业一旦被调度则不能中断，如果作业aj在dj前完成，则获得效益pj，否则无效益。给出最大化效益的作业调度算法。</span>

            <div>
                作者：Hackbuteer1 发表于2012/12/30 22:33:28 <a href="http://blog.csdn.net/hackbuteer1/article/details/8453841">原文链接</a>
            </div>
            <div>
            阅读：5339 评论：3 <a href="http://blog.csdn.net/hackbuteer1/article/details/8453841#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]2013年人人校园招聘笔试题]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8453834</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8453834</guid>
        <author>Hackbuteer1</author>
        <pubDate>2012/12/30 22:30:21</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">一、选择题（每题5分，共计50分）<br>
1、对于全局函数 int f(void) ，与其完全等价的函数原型为（）<br>
A、int &amp;f(); &nbsp; &nbsp; &nbsp;B、int f(void) const; &nbsp; &nbsp; &nbsp; <span style="color:#3333ff">C、const int f();</span> &nbsp; &nbsp; &nbsp;D、A、B、C都不是<br>
2、下列关于构造函数的描述中，错误的是（）<br>
A、构造函数可以设置默认的参数<br>
B、构造函数在定义类对象时自动执行<br>
C、构造函数可以是内联函数<br>
<span style="color:#3333ff">D、构造函数不可以重载</span><br>
<span style="color:#cc9933">函数重载是通过靠参数来实现的，构造函数是可以重载的，但析构函数没有参数，不能重载，所以析构函数只有一个版本。</span><br>
3、考虑函数原型 void test(int a , int b = 7, char ch='*')，下面的函数调用中，属于不合法调用的是（）<br>
A、test(5) &nbsp; &nbsp; &nbsp;B、test(5,8) &nbsp; &nbsp; <span style="color:#3333ff">C、test(6,'#') </span>&nbsp; &nbsp; &nbsp;D、test(0,0,'#')<br>
4、所谓LRU页面淘汰算法是指将驻留在内存中（）页面淘汰<br>
A、时间最长的<br>
<span style="color:#3333ff">B、最久未使用的</span><br>
C、使用频度最少的<br>
D、出现脏数据的<br>
5、下列说法错误的是（）<br>
A、构造函数可以有一个参数 &nbsp; &nbsp; &nbsp; &nbsp; B、构造函数可以有多个参数<br>
<span style="color:#3333ff">C、一个类只能有一个构造函数 &nbsp;</span> &nbsp; &nbsp; D、一个类只能有一个析构函数<br>
6、系统在调用重载函数时，能作为确定哪个重载函数被调用的依据是（）<br>
A、函数返回类型 &nbsp; &nbsp; <span style="color:#3333ff">B、参数个数</span> &nbsp; &nbsp;C、函数名称 &nbsp; &nbsp;D、参数名称<br>
7、一个栈的入栈序列是A、B、C、D、E，则栈的不可能的输出序列是（）<br>
A、EDCBA &nbsp; &nbsp; &nbsp; B、DECBA &nbsp; &nbsp; <span style="color:#3333ff">C、DCEAB </span>&nbsp; &nbsp; D、ABCDE<br>
8、有12个球，外形相同，其中一个小球的质量与其他11个不同，给一个天平，需要几次把这个小球找出来并且求出这个小球是比其他的轻还是重（）<br>
A、3 &nbsp; &nbsp; B、5 &nbsp; &nbsp; &nbsp;C、7 &nbsp; &nbsp; &nbsp;D、9<br>
<br>
<br>
<br>
9、<br>
<br>
<br>
<br>
二、问答题<br>
1、编码实现环状单向链表（尾指针直接指向头指针，中间没有空节点），去除连续的重复元素的操作。<br>
比如：1（头）-&gt;2-&gt;2-&gt;3-&gt;3-&gt;1-&gt;1（头） 去除以后的结果是1-&gt;2-&gt;3，注意头尾的1也要去掉一个。<br>
struct Tnode<br>
{<br>
<span style="white-space:pre"></span>Tnode *next;<br>
<span style="white-space:pre"></span>int value;<br>
};<br>
<br>
<br>
Tnode *unique(Tnode *head)<br>
{<br>
}<br>
<br>
<br>
<br>
2、静安市区建有一条从南到北的公路，沿着这条公路有10个加油站，加油站总部每天都要给每个加油站补给一车汽油，加油站总公司计划在这10个加油站中选出一个加油站作为总补给点，每天负责给其他加油站送一车汽油，请问挑选哪个加油站使得每天负责运送汽油的总里程数最小，请用代码实现，如果时间不够，请写出主要思路。<br>
<br>
<br>
3、阅读下面一段程序：<br>
</span><pre class="cpp" name="code">int foo(int x , int y)
{
	if(x == 0 || y == 0)
		return 2;
	return foo(x - 1 , y ) + foo(x , y - 1);
}</pre>（1）当输入的x和y分别为8和8时，写出该程序的结果，并写出你的演算过程。&nbsp;&nbsp; <span style="color:#009900">
简单的递归应用</span><br>
（2）该程序的执行效率很低，请写出你能想到的更高效f函数的实现方法。<br>
<span style="color:#009900">由于递归的效率很低，所以我们可以使用递推函数来实现。</span><br>
<pre name="code" class="cpp">int foo(int x , int y)
{
	int i , j , res;
	int **c = new int*[x+1];      //共有x+1行  
    for(i = 0; i &lt; x + 1 ; ++i)  
        c[i] = new int[y+1];      //共有y+1列
	//初始化
	for(i = 0; i &lt; x + 1 ; ++i)
		c[i][0] = 2;
	for(i = 0; i &lt; y + 1 ; ++i)
		c[0][i] = 2;

	for(i = 1; i &lt; x + 1 ; ++i)
	{
		for(j = 1; j &lt; y + 1 ; ++j)
			c[i][j] = c[i-1][j] + c[i][j-1];
	}
	res = c[x][y];  
    for(i = 0; i &lt; x + 1 ; ++i)    //释放动态申请的二维数组  
        delete[] c[i];
    delete[] c;
	return res;
}</pre><br>
<span style="font-family:Verdana; font-size:14px">4、题目:由于诺基亚手机不止可以当作手机使用，还可以作为砖头防身，人人的员工小丁相测一测它从多高才能摔破。借助人人公司所在的静安中心大楼（共27层），小丁准备从1层开始一层一层的将诺基亚手机扔下去，直到摔破为止，显而易见，在最坏的情况下需要扔27次才能测出这个临界&#20540;（假定顶层的高度一定可以摔破这部诺基亚手机），小丁跟同事小李说了这个想法，小李说他这也有一部同型号的诺基亚手机，正好不用了给了小丁，现在小丁手中有两部诺基亚手机。<br>
（1）请你帮忙计算一下在最坏情况下，小丁最少需要扔几次才能测出这个临界&#20540;，并且给出具体策略？（PS，两部手机，第一步手机选择第k层扔下去，若是没有摔坏我们可以继续拿来往楼下摔，若是摔坏了，只有一部手机了，还得按照之前一部手机的策略）<br>
<span style="color:#3333ff">1&#43;2&#43;3&#43;...&#43;x&gt;=27 &nbsp;可以求得x=7，则<span style="font-family:Verdana; font-size:14px">小丁</span>最少<span style="font-family:Verdana; font-size:14px">需要扔7次才能测出这个临界&#20540;。</span></span><br>
<span style="font-family:Verdana; font-size:14px"><span style="color:#3333ff">小丁依次分别站在7、13、18、22、25、27层进行测试，比如当在25层楼将<span style="font-family:Verdana; font-size:14px">诺基亚手机扔下去时，摔破了，则<span style="font-family:Verdana; font-size:14px">小丁从23层开始依次往楼上一层一层的测试，肯定在不超过7次的时候测出这个临界&#20540;。</span></span></span></span><br>
（2）现在我们发散一下，假设给你m部诺基亚手机，n层的高楼（假定顶层的高度一定可以摔碎），在最坏情况下至少需要扔多少次才能测出临界高度？程序实现，最好给出算法思想，假定输入若干组m和n，你的程序需要对每组m、n给出响应结果。（其中m属于[1,50]，n属于[1,1000]）<br>
<br>
转载请标明出处，原文地址：<a target="_blank" target="_blank" href="http://blog.csdn.net/hackbuteer1/article/details/8453834">http://blog.csdn.net/hackbuteer1/article/details/8453834</a></span>

            <div>
                作者：Hackbuteer1 发表于2012/12/30 22:30:21 <a href="http://blog.csdn.net/hackbuteer1/article/details/8453834">原文链接</a>
            </div>
            <div>
            阅读：4918 评论：2 <a href="http://blog.csdn.net/hackbuteer1/article/details/8453834#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]网易2013校园招聘笔试题集锦]]></title>
        <link>http://blog.csdn.net/hackbuteer1/article/details/8060917</link>
        <guid>http://blog.csdn.net/hackbuteer1/article/details/8060917</guid>
        <author>Hackbuteer1</author>
        <pubDate>2012/10/11 15:56:31</pubDate>
        <description><![CDATA[
            
<span style="font-family:Verdana; font-size:14px">&nbsp; 第一部分（必做）：计算机基础类<br>
（所有的选择题都是多项选择）<br>
<br>
1、假设进栈次序是e1, e2, e3, e4，那可能的出栈次序是()<br>
<span style="color:#3333FF">A、e2, e4, e3, e1<br>
B、e2, e3, e4, e1<br>
C、e3, e2, e4, e1<br>
D、e1, e2, e4, e3</span><br>
2、表达式X=A&#43;B*(C-D)/E的后缀表示形式可以是()<br>
A、XAB&#43;CDE/-*=<br>
B、XA&#43;BC-DE/*=<br>
<span style="color:#3333FF">C、XABCD-*E/&#43;=</span><br>
D、XABCDE&#43;*/=<br>
3、以下排序算法是非稳定排序的是（）<br>
A、冒泡排序&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B、归并排序&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#3333FF">C、快速排序&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D、堆排序&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E、希尔排序</span><br>
4、一个包含n个结点的四叉树，每一个节点都有4个指向孩子节点的指针，这4n个指针有（3*n&#43;1）个空指针.<br>
4*n-(n-1) = 3*n&#43;1<br>
5、请问func（0x7f530829）的返回&#20540;是（）<br>
</span>
<pre name="code" class="cpp">int func(unsigned int i)
{
	unsigned int temp = i;
	temp = (temp &amp; 0x55555555) &#43; ((temp &amp; 0xaaaaaaaa)&gt;&gt;1);
	temp = (temp &amp; 0x33333333) &#43; ((temp &amp; 0xcccccccc)&gt;&gt;2);
	temp = (temp &amp; 0x0f0f0f0f) &#43; ((temp &amp; 0xf0f0f0f0)&gt;&gt;4);
	temp = (temp &amp; 0xff00ff) &#43; ((temp &amp; 0xff00ff00)&gt;&gt;8);
	temp = (temp &amp; 0xffff) &#43; ((temp &amp; 0xffff0000)&gt;&gt;16);
	return temp;
}</pre>
<span style="font-family:Verdana; font-size:14px; color:#CC33CC">A、15</span><span style="font-family:Verdana; font-size:14px">&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; B、16&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; C、17&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D、18<br>
函数实现的是求二进制表示的时候，1的个数，一共15个<br>
最开始把每一个位看做一个节点，相邻节点&#20540;相加，结果用两个位表示。。。<br>
然后每两个位看做一个节点，相邻节点&#20540;相加，结果用四个位表示。。。<br>
以此类推，直到只剩下一个节点。。。<br>
6、进程和线程的差别有（）<br>
A、操作系统只调度进程，不调度线程<br>
B、线程共享内存地址空间，进程不共享<br>
C、线程可以共享内存数据，但进程不可以<br>
<span style="color:#3333FF">D、进程间可以通过IPC通信，但线程不可以</span><br>
7、关于段页式管理中，地址映像表是（）<br>
A、每个进程一张段表，一张页表<br>
B、进程的每个段一张段表，一张页表<br>
<span style="color:#3333FF">C、每个进程一张段表，每个段一张页表</span><br>
D、每个进程一张页表，每个段一张段表<br>
8、关于TCP协议，下面哪种说法是错误的（）<br>
<span style="color:#3333FF">A、TCP关闭连接过程中，两端的socket都会经过TIME_WAIT状态</span><br>
B、对一个Established状态的TCP连接，调用shutdown函数可以让主动调用的一方进入半关闭状态<br>
<span style="color:#3333FF">C、TCP协议默认保证了当TCP的一端发生意外崩溃（当机、网线断开或路由器故障），另一端能自动检测到连接失效</span><br>
D、在成功建立连接的TCP上，只有在Established状态才能收发数据，其他状态都不可以。<br>
9、关于主键Primary Key和索引index的说法哪些是错误的？（）<br>
A、唯一索引的列允许为NULL&#20540;<br>
<span style="color:#3333FF">B、一个关系表中的外键必定是另一表中的主键<br>
C、一个表中只能有一个唯一性索引</span><br>
D、索引主要影响查询过程，对数据的插入影响不大<br>
10、数据库的事务隔离级别一般分为4个级别，其中可能发生“不可重复读”的事物级别有（）<br>
A、SERIALIZABLE <br>
<span style="color:#3333FF">B、READ COMMITTED<br>
C、READ UNCOMMITTED</span><br>
D、REPEATABLE READ<br>
11、如果F(n)为该数列的第n项，那么这句话可以写成如下形式：<br>
F(1)=1，F(2)=1，F(n)=F(n-1)&#43;F(n-2) (n&gt;=3)<br>
请实现该函数F(n)的求解，并给出算法复杂度，要求算法复杂度小于O(n^2)。<br>
思路：使用矩阵的二分求幂可以明显加快速度，减少空间复杂度。<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第二 部分（必做）：程序设计<br>
1、下面的程序的输出是什么？<br>
</span>
<pre name="code" class="cpp">#include&lt;stdio.h&gt;

int main(void)
{
	int n;
	char y[10] = &quot;ntse&quot;;
	char *x = y;
	n = strlen(x);
	*x = x[n];
	x&#43;&#43;;
	printf(&quot;x=%s\n&quot;,x);
	printf(&quot;y=%s\n&quot;,y);
	return 0;
}</pre>
<span style="font-family:Verdana; font-size:14px">输出：<br>
x=tse<br>
y=<br>
因为n=4，则*x = x[n];&nbsp; 的功能是将x指向的第一个字符n修改为\0，这样y字符串就结束了，所以第二输出为空，x&#43;&#43;操作后，x指向第二个字符t，所以第一个输出为：tse。<br>
2、请给出下面程序的输出结果，并说明原因。<br>
</span>
<pre name="code" class="cpp">#include&lt;iostream&gt;
#include&lt;vector&gt;
using namespace std;

template&lt;class t&gt;
class array
{
public:
	array(int size);
	size_t getVectorSize()
	{
		return _data.size();
	}
	size_t getSize()
	{
		return _size;
	}
public:
	vector&lt;t&gt; _data;
	size_t _size;
};

template&lt;class t&gt;
array&lt;t&gt;::array(int size) : _size(size) , _data(_size)
{    }



int main(void)
{
	array&lt;int&gt; *arr = new array&lt;int&gt;(3);
	cout&lt;&lt;arr-&gt;getVectorSize()&lt;&lt;endl;
	cout&lt;&lt;arr-&gt;getSize()&lt;&lt;endl;

	return 0;
}</pre>
原因：<br>
<br>
<br>
<br>
<br>
数据挖掘岗位&nbsp;&nbsp;&nbsp; 第三部分 专业知识（简答题）<br>
1、数据预处理在数据挖掘中是一个重要的步骤，请你谈谈你对数据预处理的理解<br>
2、请说出你对中文分词的理解，并谈谈它的难点和切分算法<br>
3、请列举并说明几个知名的分类算法<br>
4、请阐述K-均&#20540;聚类算法<br>
5、如果设计一个商品推荐系统，请谈谈你的思路<br>
6、请你谈谈你对观点挖掘的理解<br>
<br>
最新笔试题<span style="font-family:Verdana; font-size:14px"><br>
</span>

            <div>
                作者：Hackbuteer1 发表于2012/10/11 15:56:31 <a href="http://blog.csdn.net/hackbuteer1/article/details/8060917">原文链接</a>
            </div>
            <div>
            阅读：9887 评论：14 <a href="http://blog.csdn.net/hackbuteer1/article/details/8060917#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
</channel>
</rss>
