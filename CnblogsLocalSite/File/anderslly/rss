<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_一个程序员的自省</title>
  <subtitle type="text"></subtitle>
  <id>uuid:8dc7efba-43f2-4416-95a0-534dced3b48f;id=1767</id>
  <updated>2015-09-16T13:54:42Z</updated>
  <author>
    <name>Anders Cui</name>
    <uri>http://www.cnblogs.com/anderslly/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/anderslly/p/jiebanet-lucenenet.html</id>
    <title type="text">jieba.NET与Lucene.Net的集成 - Anders Cui</title>
    <summary type="text">搜索是分词的一个重要应用，本文参考Lucene.Net.Analysis.PanGu，实现了jieba.NET分词和Lucene.Net的简单集成，望有所帮助。</summary>
    <published>2015-09-16T13:51:00Z</published>
    <updated>2015-09-16T13:51:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/p/jiebanet-lucenenet.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/p/jiebanet-lucenenet.html" />
    <content type="html">搜索是分词的一个重要应用，本文参考Lucene.Net.Analysis.PanGu，实现了jieba.NET分词和Lucene.Net的简单集成，望有所帮助。&lt;img src="http://counter.cnblogs.com/blog/rss/4814539" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/p/jiebanet-lucenenet.html" target="_blank"&gt;jieba.NET与Lucene.Net的集成&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/p/jiebanet.html</id>
    <title type="text">jieba中文分词的.NET版本：jieba.NET - Anders Cui</title>
    <summary type="text">分词、词性标注和关键词提取是jieba中文分词的三个主要功能，jieba.NET实现了与jieba一致的功能和接口。jieba.NET的开发刚刚开始，还有很多细节需要完善。非常欢迎大家的试用和反馈，也希望能和大家一起讨论，共同实现更好的中文分词库。</summary>
    <published>2015-09-08T12:05:00Z</published>
    <updated>2015-09-08T12:05:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/p/jiebanet.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/p/jiebanet.html" />
    <content type="html">分词、词性标注和关键词提取是jieba中文分词的三个主要功能，jieba.NET实现了与jieba一致的功能和接口。jieba.NET的开发刚刚开始，还有很多细节需要完善。非常欢迎大家的试用和反馈，也希望能和大家一起讨论，共同实现更好的中文分词库。&lt;img src="http://counter.cnblogs.com/blog/rss/4792588" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/p/jiebanet.html" target="_blank"&gt;jieba中文分词的.NET版本：jieba.NET&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2012/04/19/fibonacci-number.html</id>
    <title type="text">迷人的斐波那契数 - Anders Cui</title>
    <summary type="text">繁殖力超强的兔子说到斐波那契数，我们自然会想到曾经有一群繁殖力超强的兔子。比萨的商人斐波那契（Fibonacci，12-13世纪，称为比萨的列奥那多）接触到阿拉伯数学后，在其著作《Liber Abaci》中，引入了这个著名的兔子问题。但如果向前追溯下去，则可以追溯到古老的印度数学。斐波那契使用了一个理想化了的兔子生长模型进行研究，并假设：第一个月初有一对刚诞生的兔子两个月之后(第三个月初)它们可以生育每月每对可生育的兔子会诞生下一对新兔子兔子永不死去从第一个月开始，兔子的数目（对）依次是：1，1，2，3，5，8。。。这样就形成了一个序列，记为{Fn}，则该序列存在一个递推关系：F(n)=F(n</summary>
    <published>2012-04-18T16:31:00Z</published>
    <updated>2012-04-18T16:31:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2012/04/19/fibonacci-number.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2012/04/19/fibonacci-number.html" />
    <content type="html">繁殖力超强的兔子说到斐波那契数，我们自然会想到曾经有一群繁殖力超强的兔子。比萨的商人斐波那契（Fibonacci，12-13世纪，称为比萨的列奥那多）接触到阿拉伯数学后，在其著作《Liber Abaci》中，引入了这个著名的兔子问题。但如果向前追溯下去，则可以追溯到古老的印度数学。斐波那契使用了一个理想化了的兔子生长模型进行研究，并假设：第一个月初有一对刚诞生的兔子两个月之后(第三个月初)它们可以生育每月每对可生育的兔子会诞生下一对新兔子兔子永不死去从第一个月开始，兔子的数目（对）依次是：1，1，2，3，5，8。。。这样就形成了一个序列，记为{Fn}，则该序列存在一个递推关系：F(n)=F(n&lt;img src="http://counter.cnblogs.com/blog/rss/2454599" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2012/04/19/fibonacci-number.html" target="_blank"&gt;迷人的斐波那契数&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2012/04/16/swaping-disks.html</id>
    <title type="text">趣题一则：交替放置的碟子 - Anders Cui</title>
    <summary type="text">有数量为2n的一排碟子，n黑n白交替放置。现在要把黑碟子都放在右边，白碟子都放在左边，但只允许通过交换相邻碟子的位置来实现。实现这个过程要交换多少次？分析首先把问题转化一下，用1表示黑碟子，0表示白碟子，那么目前的顺序是：1010...1010结果要求1都放在右边，0都放在左边。这个题目看起来很眼熟。看关键字：交换相邻的碟子，排好顺序。嗯，就是经常出现在面试中的冒泡排序了。为便于观察，假设目前有6个碟子：101010。使用冒泡排序，第一次迭代，碟子序列变为：010101，交换3次。在进行第二次迭代之前，观察一下。现在，不仅第一个碟子就位，最后一个也是了，因此第二次迭代只需要对第2到第5个进行排</summary>
    <published>2012-04-16T13:43:00Z</published>
    <updated>2012-04-16T13:43:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2012/04/16/swaping-disks.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2012/04/16/swaping-disks.html" />
    <content type="html">有数量为2n的一排碟子，n黑n白交替放置。现在要把黑碟子都放在右边，白碟子都放在左边，但只允许通过交换相邻碟子的位置来实现。实现这个过程要交换多少次？分析首先把问题转化一下，用1表示黑碟子，0表示白碟子，那么目前的顺序是：1010...1010结果要求1都放在右边，0都放在左边。这个题目看起来很眼熟。看关键字：交换相邻的碟子，排好顺序。嗯，就是经常出现在面试中的冒泡排序了。为便于观察，假设目前有6个碟子：101010。使用冒泡排序，第一次迭代，碟子序列变为：010101，交换3次。在进行第二次迭代之前，观察一下。现在，不仅第一个碟子就位，最后一个也是了，因此第二次迭代只需要对第2到第5个进行排&lt;img src="http://counter.cnblogs.com/blog/rss/2451119" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2012/04/16/swaping-disks.html" target="_blank"&gt;趣题一则：交替放置的碟子&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2012/04/15/von-neumann-neighborhood.html</id>
    <title type="text">趣题一则：冯·诺依曼邻居问题 - Anders Cui</title>
    <summary type="text">这里并不是真的要研究cellular automaton的问题，而只是考虑一个非常简单的递推关系，该问题如下图所示：从r=0开始，此时格子上有一个方块，然后逐步演化，每一步都在上一步的基础上添加一圈儿方块，当r=n时，会有多少个方块呢？分析假设初始方块为O，从r=0到r=1时，在O的水平和垂直方向上各增加了两个方块；从r=1到r=2时，也是如此，同时在其它方向上也增加了若干方块。由此，可以把方块的增加分为两部分，一是水平和垂直方向D1，二是其它方向D2。可以看到，每到新的一步，D1方向上增加的都是4个方块，它们都与原图（上一步）的一个边相邻；而D2方向上增加的方块都与原图的两条边相邻。这样，只</summary>
    <published>2012-04-14T16:51:00Z</published>
    <updated>2012-04-14T16:51:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2012/04/15/von-neumann-neighborhood.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2012/04/15/von-neumann-neighborhood.html" />
    <content type="html">该文只有注册用户登录后才能阅读。&lt;a href='http://www.cnblogs.com/anderslly/archive/2012/04/15/von-neumann-neighborhood.html' target='_blank'&gt;阅读全文&lt;/a&gt;。</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2012/04/10/finding-the-door.html</id>
    <title type="text">趣题一则：寻找那扇门 - Anders Cui</title>
    <summary type="text">现在出现在你面前的是一堵朝两个方向无限延伸的墙。墙上有一扇门，但你并不确定门离你有多远，也不知道门位于哪个方向（左边或是右边）。你只有在走到门面前才能看到它。假设从当前位置到门要走n步（n大小未知），那么怎样走O(n)步就能找到那扇门？分析这道题让人“左右为难”，因为不确定如何才能走到尽快确定方向和位置。首先想到在错误的方向上走得越远，就意味着离正确的位置越远，因此较为保险的方法是，第一步向右走，看看有没有门；第二步——为了防止在错误的方向上渐行渐远——向左走，走两步，这样就可以确定在最初位置的一步范围内有没有门了。接下来，按照类似的方式左右徘徊，依次确定在最初位置的2，3，...，n有没有门</summary>
    <published>2012-04-10T15:51:00Z</published>
    <updated>2012-04-10T15:51:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2012/04/10/finding-the-door.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2012/04/10/finding-the-door.html" />
    <content type="html">现在出现在你面前的是一堵朝两个方向无限延伸的墙。墙上有一扇门，但你并不确定门离你有多远，也不知道门位于哪个方向（左边或是右边）。你只有在走到门面前才能看到它。假设从当前位置到门要走n步（n大小未知），那么怎样走O(n)步就能找到那扇门？分析这道题让人“左右为难”，因为不确定如何才能走到尽快确定方向和位置。首先想到在错误的方向上走得越远，就意味着离正确的位置越远，因此较为保险的方法是，第一步向右走，看看有没有门；第二步——为了防止在错误的方向上渐行渐远——向左走，走两步，这样就可以确定在最初位置的一步范围内有没有门了。接下来，按照类似的方式左右徘徊，依次确定在最初位置的2，3，...，n有没有门&lt;img src="http://counter.cnblogs.com/blog/rss/2441406" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2012/04/10/finding-the-door.html" target="_blank"&gt;趣题一则：寻找那扇门&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2011/06/17/hashset-part2.html</id>
    <title type="text">HashSet的实现（下） - Anders Cui</title>
    <summary type="text">在HashSet的实现（上）中，简要介绍了散列法（hashing）的内容，并以二次探测法实现了一个简单的HashSet。在本文中，将进一步讨论散列法，尤其是GetHashCode方法的实现，最后给出完整的HashSet实现。</summary>
    <published>2011-06-17T09:19:00Z</published>
    <updated>2011-06-17T09:19:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2011/06/17/hashset-part2.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2011/06/17/hashset-part2.html" />
    <content type="html">在HashSet的实现（上）中，简要介绍了散列法（hashing）的内容，并以二次探测法实现了一个简单的HashSet。在本文中，将进一步讨论散列法，尤其是GetHashCode方法的实现，最后给出完整的HashSet实现。&lt;img src="http://counter.cnblogs.com/blog/rss/2083451" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2011/06/17/hashset-part2.html" target="_blank"&gt;HashSet的实现（下）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2011/06/13/hashset-part1.html</id>
    <title type="text">HashSet的实现（上） - Anders Cui</title>
    <summary type="text">本文主要讨论了散列法和散列函数的基本概念以及解决散列冲突的两种方法：线性探测法和二次探测法，并以二次探测法简单地实现了HashSet的Hash这一部分。</summary>
    <published>2011-06-12T18:03:00Z</published>
    <updated>2011-06-12T18:03:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2011/06/13/hashset-part1.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2011/06/13/hashset-part1.html" />
    <content type="html">本文主要讨论了散列法和散列函数的基本概念以及解决散列冲突的两种方法：线性探测法和二次探测法，并以二次探测法简单地实现了HashSet的Hash这一部分。&lt;img src="http://counter.cnblogs.com/blog/rss/2079308" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2011/06/13/hashset-part1.html" target="_blank"&gt;HashSet的实现（上）&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2011/06/03/2070192.html</id>
    <title type="text">趣题一则：如何快速过桥？ - Anders Cui</title>
    <summary type="text">有四个人打算过桥，他们都在桥的某一端，他们的任务是在17分钟内全部到达桥的另一头。当时是晚上，他们只有一只手电筒，最多只能有两人同时过桥，因为伸手不见五指，必须要携带手电筒。必须步行将手电筒带来带去，即扔来扔去是不行的。每个人走路的速度是不同的：甲过桥需要1分钟，乙需要2分钟，丙需要5分钟，丁需要10分钟。两个人一起走的速度等于其中较慢的人的速度。例如，如果第一次让甲和丁一起过桥，当他们到桥的另一端时，已经用了10分钟，如果由丁带回手电筒，那么20分钟就过去了，于是任务失败。那他们到底该怎样过去呢？如何完成任务？第一次甲和乙同行，然后乙回去送手电筒，用掉4分钟；下一次丙和丁同行，甲回去，用掉1</summary>
    <published>2011-06-02T16:31:00Z</published>
    <updated>2011-06-02T16:31:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2011/06/03/2070192.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2011/06/03/2070192.html" />
    <content type="html">有四个人打算过桥，他们都在桥的某一端，他们的任务是在17分钟内全部到达桥的另一头。当时是晚上，他们只有一只手电筒，最多只能有两人同时过桥，因为伸手不见五指，必须要携带手电筒。必须步行将手电筒带来带去，即扔来扔去是不行的。每个人走路的速度是不同的：甲过桥需要1分钟，乙需要2分钟，丙需要5分钟，丁需要10分钟。两个人一起走的速度等于其中较慢的人的速度。例如，如果第一次让甲和丁一起过桥，当他们到桥的另一端时，已经用了10分钟，如果由丁带回手电筒，那么20分钟就过去了，于是任务失败。那他们到底该怎样过去呢？如何完成任务？第一次甲和乙同行，然后乙回去送手电筒，用掉4分钟；下一次丙和丁同行，甲回去，用掉1&lt;img src="http://counter.cnblogs.com/blog/rss/2070192" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2011/06/03/2070192.html" target="_blank"&gt;趣题一则：如何快速过桥？&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/anderslly/archive/2011/05/03/create-wikipedia-book.html</id>
    <title type="text">制作自己的wikibook - Anders Cui</title>
    <summary type="text">wikipedia.org是我特别喜欢的网站，首先是它的信息量极为丰富，不管是文章本身的内容，还是它所引用的外部资源；而且文章的风格也很让人喜欢，简约的文本，配以适量的图片，很对我的口味；另外一个重要的地方是，文章内容比较可靠。如果看到一篇喜欢的wiki文章，想打印出来，那么看页面的左边侧栏： 可以使用Printable版本打印，也可以保存为本地的PDF文件。最有趣的地方是“Create a book”：一旦开始书籍的创建，在页面的页首部分就会出现一个功能区域： 当我们把需要的文章都添加进来后，点击Show book，即进入书籍的管理页面，甚至还可以组织书籍的章节！然后，可以保存为本地文件，格</summary>
    <published>2011-05-03T13:38:00Z</published>
    <updated>2011-05-03T13:38:00Z</updated>
    <author>
      <name>Anders Cui</name>
      <uri>http://www.cnblogs.com/anderslly/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/anderslly/archive/2011/05/03/create-wikipedia-book.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/anderslly/archive/2011/05/03/create-wikipedia-book.html" />
    <content type="html">wikipedia.org是我特别喜欢的网站，首先是它的信息量极为丰富，不管是文章本身的内容，还是它所引用的外部资源；而且文章的风格也很让人喜欢，简约的文本，配以适量的图片，很对我的口味；另外一个重要的地方是，文章内容比较可靠。如果看到一篇喜欢的wiki文章，想打印出来，那么看页面的左边侧栏： 可以使用Printable版本打印，也可以保存为本地的PDF文件。最有趣的地方是“Create a book”：一旦开始书籍的创建，在页面的页首部分就会出现一个功能区域： 当我们把需要的文章都添加进来后，点击Show book，即进入书籍的管理页面，甚至还可以组织书籍的章节！然后，可以保存为本地文件，格&lt;img src="http://counter.cnblogs.com/blog/rss/2035890" width="1" height="1" alt=""/&gt;&lt;br/&gt;&lt;p&gt;本文链接：&lt;a href="http://www.cnblogs.com/anderslly/archive/2011/05/03/create-wikipedia-book.html" target="_blank"&gt;制作自己的wikibook&lt;/a&gt;，转载请注明。&lt;/p&gt;</content>
  </entry>
</feed>